{
           "1056c39c8300ac26304ad7463f5ea8ce": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "la arquitectura replica-set es la respuesta de mongodb para dotar al sistema de una alta disponibilidad y robustez frente a posibles fallos en el sistema hardware. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "la arquitectura replica-set es la respuesta de mongodb para dotar al sistema de una alta disponibilidad y robustez frente a posibles fallos en el sistema hardware. este permite llevar a cabo una replicación en tiempo real de las bases de datos del sistema. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "la arquitectura replica-set es la respuesta de mongodb para dotar al sistema de una alta disponibilidad y robustez frente a posibles fallos en el sistema hardware. este permite llevar a cabo una replicación en tiempo real de las bases de datos del sistema. la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "la arquitectura replica-set es la respuesta de mongodb para dotar al sistema de una alta disponibilidad y robustez frente a posibles fallos en el sistema hardware. este permite llevar a cabo una replicación en tiempo real de las bases de datos del sistema. la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.871,
                                            "Frase": "la arquitectura replica-set es la respuesta de mongodb para dotar al sistema de una alta disponibilidad y robustez frente a posibles fallos en el sistema hardware. este permite llevar a cabo una replicación en tiempo real de las bases de datos del sistema. la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.871,
                                            "Frase": "la arquitectura replica-set es la respuesta de mongodb para dotar al sistema de una alta disponibilidad y robustez frente a posibles fallos en el sistema hardware. este permite llevar a cabo una replicación en tiempo real de las bases de datos del sistema. la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.883,
                                            "Frase": "la arquitectura replica-set es la respuesta de mongodb para dotar al sistema de una alta disponibilidad y robustez frente a posibles fallos en el sistema hardware. este permite llevar a cabo una replicación en tiempo real de las bases de datos del sistema. la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. por último, la principal diferencia con otras aplicaciones como mongodump, es que mongodump se utiliza para realizar copias de seguridad offline, es decir bajo petición o programación previa cuando la arquitectura replica-set es de alta disponibilidad gracias a replicación en tiempo real entre nodos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.803,
                                            "Frase": "esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.791,
                                            "Frase": "la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.782,
                                            "Frase": "el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.791,
                                            "Frase": "la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.794,
                                            "Frase": "la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. por último, la principal diferencia con otras aplicaciones como mongodump, es que mongodump se utiliza para realizar copias de seguridad offline, es decir bajo petición o programación previa cuando la arquitectura replica-set es de alta disponibilidad gracias a replicación en tiempo real entre nodos. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.789,
                                            "Frase": "la arquitectura replica-set es la respuesta de mongodb para dotar al sistema de una alta disponibilidad y robustez frente a posibles fallos en el sistema hardware. este permite llevar a cabo una replicación en tiempo real de las bases de datos del sistema. la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.79,
                                            "Frase": "la arquitectura replica-set es la respuesta de mongodb para dotar al sistema de una alta disponibilidad y robustez frente a posibles fallos en el sistema hardware. este permite llevar a cabo una replicación en tiempo real de las bases de datos del sistema. la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. por último, la principal diferencia con otras aplicaciones como mongodump, es que mongodump se utiliza para realizar copias de seguridad offline, es decir bajo petición o programación previa cuando la arquitectura replica-set es de alta disponibilidad gracias a replicación en tiempo real entre nodos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "este permite llevar a cabo una replicación en tiempo real de las bases de datos del sistema. la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "la arquitectura replica-set es la respuesta de mongodb para dotar al sistema de una alta disponibilidad y robustez frente a posibles fallos en el sistema hardware. este permite llevar a cabo una replicación en tiempo real de las bases de datos del sistema. la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "la arquitectura replica-set es la respuesta de mongodb para dotar al sistema de una alta disponibilidad y robustez frente a posibles fallos en el sistema hardware. este permite llevar a cabo una replicación en tiempo real de las bases de datos del sistema. la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. por último, la principal diferencia con otras aplicaciones como mongodump, es que mongodump se utiliza para realizar copias de seguridad offline, es decir bajo petición o programación previa cuando la arquitectura replica-set es de alta disponibilidad gracias a replicación en tiempo real entre nodos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "por último, la principal diferencia con otras aplicaciones como mongodump, es que mongodump se utiliza para realizar copias de seguridad offline, es decir bajo petición o programación previa cuando la arquitectura replica-set es de alta disponibilidad gracias a replicación en tiempo real entre nodos. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. por último, la principal diferencia con otras aplicaciones como mongodump, es que mongodump se utiliza para realizar copias de seguridad offline, es decir bajo petición o programación previa cuando la arquitectura replica-set es de alta disponibilidad gracias a replicación en tiempo real entre nodos. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. por último, la principal diferencia con otras aplicaciones como mongodump, es que mongodump se utiliza para realizar copias de seguridad offline, es decir bajo petición o programación previa cuando la arquitectura replica-set es de alta disponibilidad gracias a replicación en tiempo real entre nodos. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. por último, la principal diferencia con otras aplicaciones como mongodump, es que mongodump se utiliza para realizar copias de seguridad offline, es decir bajo petición o programación previa cuando la arquitectura replica-set es de alta disponibilidad gracias a replicación en tiempo real entre nodos. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. por último, la principal diferencia con otras aplicaciones como mongodump, es que mongodump se utiliza para realizar copias de seguridad offline, es decir bajo petición o programación previa cuando la arquitectura replica-set es de alta disponibilidad gracias a replicación en tiempo real entre nodos. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "este permite llevar a cabo una replicación en tiempo real de las bases de datos del sistema. la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. por último, la principal diferencia con otras aplicaciones como mongodump, es que mongodump se utiliza para realizar copias de seguridad offline, es decir bajo petición o programación previa cuando la arquitectura replica-set es de alta disponibilidad gracias a replicación en tiempo real entre nodos. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "la arquitectura replica-set es la respuesta de mongodb para dotar al sistema de una alta disponibilidad y robustez frente a posibles fallos en el sistema hardware. este permite llevar a cabo una replicación en tiempo real de las bases de datos del sistema. la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. por último, la principal diferencia con otras aplicaciones como mongodump, es que mongodump se utiliza para realizar copias de seguridad offline, es decir bajo petición o programación previa cuando la arquitectura replica-set es de alta disponibilidad gracias a replicación en tiempo real entre nodos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. por último, la principal diferencia con otras aplicaciones como mongodump, es que mongodump se utiliza para realizar copias de seguridad offline, es decir bajo petición o programación previa cuando la arquitectura replica-set es de alta disponibilidad gracias a replicación en tiempo real entre nodos. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. por último, la principal diferencia con otras aplicaciones como mongodump, es que mongodump se utiliza para realizar copias de seguridad offline, es decir bajo petición o programación previa cuando la arquitectura replica-set es de alta disponibilidad gracias a replicación en tiempo real entre nodos. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.953,
                                            "Frase": "el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. por último, la principal diferencia con otras aplicaciones como mongodump, es que mongodump se utiliza para realizar copias de seguridad offline, es decir bajo petición o programación previa cuando la arquitectura replica-set es de alta disponibilidad gracias a replicación en tiempo real entre nodos. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. por último, la principal diferencia con otras aplicaciones como mongodump, es que mongodump se utiliza para realizar copias de seguridad offline, es decir bajo petición o programación previa cuando la arquitectura replica-set es de alta disponibilidad gracias a replicación en tiempo real entre nodos. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.957,
                                            "Frase": "este permite llevar a cabo una replicación en tiempo real de las bases de datos del sistema. la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. por último, la principal diferencia con otras aplicaciones como mongodump, es que mongodump se utiliza para realizar copias de seguridad offline, es decir bajo petición o programación previa cuando la arquitectura replica-set es de alta disponibilidad gracias a replicación en tiempo real entre nodos. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.958,
                                            "Frase": "la arquitectura replica-set es la respuesta de mongodb para dotar al sistema de una alta disponibilidad y robustez frente a posibles fallos en el sistema hardware. este permite llevar a cabo una replicación en tiempo real de las bases de datos del sistema. la arquitectura básica mínima se compone de tres nodos, un nodo primario otro secundario y un tercero que desarrollar las funciones de arbitro a la hora de seleccionar el nodo primario. el sistema de elección del nodo primario no es un sistema estático, sino que en función de la disponibilidad y estado de los nodos se procederá a la selección del mismo. las instancias creadas sobre el nodo primario se replican sobre el nodo secundario. esto implica que el sistema no es robusto frente a escrituras erróneas en la base de datos, aunque existe la posibilidad de activar un retraso en el proceso de replicación entre el nodo primario y secundario. por último, la principal diferencia con otras aplicaciones como mongodump, es que mongodump se utiliza para realizar copias de seguridad offline, es decir bajo petición o programación previa cuando la arquitectura replica-set es de alta disponibilidad gracias a replicación en tiempo real entre nodos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "dde1a2be8c3e40859868f7c68c4a74ef": {
                      "minipregunta0": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta1": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta2": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta3": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "respuesta_completa": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      }
           },
           "56b47fc533b4f14267f5887cb9103b05": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "la función de un replica-set en mongodb es la de dar respaldo a fallos de forma automática. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "la función de un replica-set en mongodb es la de dar respaldo a fallos de forma automática. la configuración mínima para un replica-set, y que por defecto aparece configurado así, es de 3 nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.875,
                                            "Frase": "-\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 7 - 9"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.863,
                                            "Frase": "-\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 6 - 9"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.87,
                                            "Frase": "los 3 nodos son los siguientes: -\tprimario: es elegido de forma dinámica. es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "los 3 nodos son los siguientes: -\tprimario: es elegido de forma dinámica. es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.873,
                                            "Frase": "la función de un replica-set en mongodb es la de dar respaldo a fallos de forma automática. la configuración mínima para un replica-set, y que por defecto aparece configurado así, es de 3 nodos. estos 3 nodos están enviándose pings cada dos segundos para conocer si están disponibles (no se han caído). los 3 nodos son los siguientes: -\tprimario: es elegido de forma dinámica. es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "la función de un replica-set en mongodb es la de dar respaldo a fallos de forma automática. la configuración mínima para un replica-set, y que por defecto aparece configurado así, es de 3 nodos. estos 3 nodos están enviándose pings cada dos segundos para conocer si están disponibles (no se han caído). los 3 nodos son los siguientes: -\tprimario: es elegido de forma dinámica. es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.834,
                                            "Frase": "la configuración mínima para un replica-set, y que por defecto aparece configurado así, es de 3 nodos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.837,
                                            "Frase": "la función de un replica-set en mongodb es la de dar respaldo a fallos de forma automática. la configuración mínima para un replica-set, y que por defecto aparece configurado así, es de 3 nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.817,
                                            "Frase": "-\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.825,
                                            "Frase": "-\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 6 - 9"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.834,
                                            "Frase": "los 3 nodos son los siguientes: -\tprimario: es elegido de forma dinámica. es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.839,
                                            "Frase": "los 3 nodos son los siguientes: -\tprimario: es elegido de forma dinámica. es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.817,
                                            "Frase": "la función de un replica-set en mongodb es la de dar respaldo a fallos de forma automática. la configuración mínima para un replica-set, y que por defecto aparece configurado así, es de 3 nodos. estos 3 nodos están enviándose pings cada dos segundos para conocer si están disponibles (no se han caído). los 3 nodos son los siguientes: -\tprimario: es elegido de forma dinámica. es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.827,
                                            "Frase": "la función de un replica-set en mongodb es la de dar respaldo a fallos de forma automática. la configuración mínima para un replica-set, y que por defecto aparece configurado así, es de 3 nodos. estos 3 nodos están enviándose pings cada dos segundos para conocer si están disponibles (no se han caído). los 3 nodos son los siguientes: -\tprimario: es elegido de forma dinámica. es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "-\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "-\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "-\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 6 - 9"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 5 - 9"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "los 3 nodos son los siguientes: -\tprimario: es elegido de forma dinámica. es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "estos 3 nodos están enviándose pings cada dos segundos para conocer si están disponibles (no se han caído). los 3 nodos son los siguientes: -\tprimario: es elegido de forma dinámica. es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 3 - 9"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "la configuración mínima para un replica-set, y que por defecto aparece configurado así, es de 3 nodos. estos 3 nodos están enviándose pings cada dos segundos para conocer si están disponibles (no se han caído). los 3 nodos son los siguientes: -\tprimario: es elegido de forma dinámica. es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 8 - 9"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "-\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 7 - 9"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "-\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 6 - 9"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 5 - 9"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "los 3 nodos son los siguientes: -\tprimario: es elegido de forma dinámica. es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "la configuración mínima para un replica-set, y que por defecto aparece configurado así, es de 3 nodos. estos 3 nodos están enviándose pings cada dos segundos para conocer si están disponibles (no se han caído). los 3 nodos son los siguientes: -\tprimario: es elegido de forma dinámica. es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "la función de un replica-set en mongodb es la de dar respaldo a fallos de forma automática. la configuración mínima para un replica-set, y que por defecto aparece configurado así, es de 3 nodos. estos 3 nodos están enviándose pings cada dos segundos para conocer si están disponibles (no se han caído). los 3 nodos son los siguientes: -\tprimario: es elegido de forma dinámica. es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "la configuración mínima para un replica-set, y que por defecto aparece configurado así, es de 3 nodos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "la función de un replica-set en mongodb es la de dar respaldo a fallos de forma automática. la configuración mínima para un replica-set, y que por defecto aparece configurado así, es de 3 nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "-\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 7 - 9"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.959,
                                            "Frase": "-\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 6 - 9"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.96,
                                            "Frase": "es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 5 - 9"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.961,
                                            "Frase": "los 3 nodos son los siguientes: -\tprimario: es elegido de forma dinámica. es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. el replica-set en cambio funciona como respaldo automático en caso de caída de algún servidor. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "la función de un replica-set en mongodb es la de dar respaldo a fallos de forma automática. la configuración mínima para un replica-set, y que por defecto aparece configurado así, es de 3 nodos. estos 3 nodos están enviándose pings cada dos segundos para conocer si están disponibles (no se han caído). los 3 nodos son los siguientes: -\tprimario: es elegido de forma dinámica. es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "la función de un replica-set en mongodb es la de dar respaldo a fallos de forma automática. la configuración mínima para un replica-set, y que por defecto aparece configurado así, es de 3 nodos. estos 3 nodos están enviándose pings cada dos segundos para conocer si están disponibles (no se han caído). los 3 nodos son los siguientes: -\tprimario: es elegido de forma dinámica. es el que gestiona las operaciones. -\tsecundario: realiza las réplicas de escritura sobre el nodo primario, de esta forma, si se cae el primario, el secundario ocupa su puesto y el sistema sigue funcionando. -\tárbitro: se ocupa de elegir quien de los dos nodos va a ser el primario. la principal diferencia con mongodump es que mongodump realiza una copia de una base de datos, colección o subcolección que se le indique, almacenando esta en un directorio. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "2e7405e83d52a3f78f50c8ca6f16d961": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "la principal aplicación de replica-set en mongodb es la de proporcionar respaldo a los datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "la principal aplicación de replica-set en mongodb es la de proporcionar respaldo a los datos. está basado en un modelo maestro-esclavo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "la principal aplicación de replica-set en mongodb es la de proporcionar respaldo a los datos. está basado en un modelo maestro-esclavo. en esta arquitectura existe la figura de un nodo primario (nodo maestro). ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "la principal aplicación de replica-set en mongodb es la de proporcionar respaldo a los datos. está basado en un modelo maestro-esclavo. en esta arquitectura existe la figura de un nodo primario (nodo maestro). esta figura no es estática, los nodos se intercambian pings cada dos segundos para conocer la disponibilidad de cada uno. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "la principal aplicación de replica-set en mongodb es la de proporcionar respaldo a los datos. está basado en un modelo maestro-esclavo. en esta arquitectura existe la figura de un nodo primario (nodo maestro). esta figura no es estática, los nodos se intercambian pings cada dos segundos para conocer la disponibilidad de cada uno. el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.883,
                                            "Frase": "la principal aplicación de replica-set en mongodb es la de proporcionar respaldo a los datos. está basado en un modelo maestro-esclavo. en esta arquitectura existe la figura de un nodo primario (nodo maestro). esta figura no es estática, los nodos se intercambian pings cada dos segundos para conocer la disponibilidad de cada uno. el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.869,
                                            "Frase": "la principal aplicación de replica-set en mongodb es la de proporcionar respaldo a los datos. está basado en un modelo maestro-esclavo. en esta arquitectura existe la figura de un nodo primario (nodo maestro). esta figura no es estática, los nodos se intercambian pings cada dos segundos para conocer la disponibilidad de cada uno. el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.874,
                                            "Frase": "la principal aplicación de replica-set en mongodb es la de proporcionar respaldo a los datos. está basado en un modelo maestro-esclavo. en esta arquitectura existe la figura de un nodo primario (nodo maestro). esta figura no es estática, los nodos se intercambian pings cada dos segundos para conocer la disponibilidad de cada uno. el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.778,
                                            "Frase": "en esta arquitectura existe la figura de un nodo primario (nodo maestro). ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.835,
                                            "Frase": "está basado en un modelo maestro-esclavo. en esta arquitectura existe la figura de un nodo primario (nodo maestro). ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.835,
                                            "Frase": "dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.826,
                                            "Frase": "el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.834,
                                            "Frase": "en esta arquitectura existe la figura de un nodo primario (nodo maestro). esta figura no es estática, los nodos se intercambian pings cada dos segundos para conocer la disponibilidad de cada uno. el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.85,
                                            "Frase": "está basado en un modelo maestro-esclavo. en esta arquitectura existe la figura de un nodo primario (nodo maestro). esta figura no es estática, los nodos se intercambian pings cada dos segundos para conocer la disponibilidad de cada uno. el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.851,
                                            "Frase": "la principal aplicación de replica-set en mongodb es la de proporcionar respaldo a los datos. está basado en un modelo maestro-esclavo. en esta arquitectura existe la figura de un nodo primario (nodo maestro). esta figura no es estática, los nodos se intercambian pings cada dos segundos para conocer la disponibilidad de cada uno. el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.843,
                                            "Frase": "la principal aplicación de replica-set en mongodb es la de proporcionar respaldo a los datos. está basado en un modelo maestro-esclavo. en esta arquitectura existe la figura de un nodo primario (nodo maestro). esta figura no es estática, los nodos se intercambian pings cada dos segundos para conocer la disponibilidad de cada uno. el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. la principal diferencia con mongodump es que este comando lleva a cabo una foto estática de la base de datos en el momento en el que se ejecuta, y extrae unos ficheros bson y json con los datos que se encuentran en la bbdd en el momento de la ejecución. ",
                                            "Lineas": "Lines 5 - 9"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "en esta arquitectura existe la figura de un nodo primario (nodo maestro). esta figura no es estática, los nodos se intercambian pings cada dos segundos para conocer la disponibilidad de cada uno. el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "está basado en un modelo maestro-esclavo. en esta arquitectura existe la figura de un nodo primario (nodo maestro). esta figura no es estática, los nodos se intercambian pings cada dos segundos para conocer la disponibilidad de cada uno. el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "la principal aplicación de replica-set en mongodb es la de proporcionar respaldo a los datos. está basado en un modelo maestro-esclavo. en esta arquitectura existe la figura de un nodo primario (nodo maestro). esta figura no es estática, los nodos se intercambian pings cada dos segundos para conocer la disponibilidad de cada uno. el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "la principal diferencia con mongodump es que este comando lleva a cabo una foto estática de la base de datos en el momento en el que se ejecuta, y extrae unos ficheros bson y json con los datos que se encuentran en la bbdd en el momento de la ejecución. ",
                                            "Lineas": "Line 9"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "la principal diferencia con mongodump es que este comando lleva a cabo una foto estática de la base de datos en el momento en el que se ejecuta, y extrae unos ficheros bson y json con los datos que se encuentran en la bbdd en el momento de la ejecución. por su parte, replica-set funciona en tiempo real, es decir, los datos se encuentran respaldados continuamente, lo que conlleva una menor pérdida de datos en caso de incidencia. ",
                                            "Lineas": "Lines 9 - 10"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. la principal diferencia con mongodump es que este comando lleva a cabo una foto estática de la base de datos en el momento en el que se ejecuta, y extrae unos ficheros bson y json con los datos que se encuentran en la bbdd en el momento de la ejecución. por su parte, replica-set funciona en tiempo real, es decir, los datos se encuentran respaldados continuamente, lo que conlleva una menor pérdida de datos en caso de incidencia. ",
                                            "Lineas": "Lines 8 - 10"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. la principal diferencia con mongodump es que este comando lleva a cabo una foto estática de la base de datos en el momento en el que se ejecuta, y extrae unos ficheros bson y json con los datos que se encuentran en la bbdd en el momento de la ejecución. por su parte, replica-set funciona en tiempo real, es decir, los datos se encuentran respaldados continuamente, lo que conlleva una menor pérdida de datos en caso de incidencia. ",
                                            "Lineas": "Lines 7 - 10"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. la principal diferencia con mongodump es que este comando lleva a cabo una foto estática de la base de datos en el momento en el que se ejecuta, y extrae unos ficheros bson y json con los datos que se encuentran en la bbdd en el momento de la ejecución. por su parte, replica-set funciona en tiempo real, es decir, los datos se encuentran respaldados continuamente, lo que conlleva una menor pérdida de datos en caso de incidencia. ",
                                            "Lineas": "Lines 6 - 10"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. la principal diferencia con mongodump es que este comando lleva a cabo una foto estática de la base de datos en el momento en el que se ejecuta, y extrae unos ficheros bson y json con los datos que se encuentran en la bbdd en el momento de la ejecución. por su parte, replica-set funciona en tiempo real, es decir, los datos se encuentran respaldados continuamente, lo que conlleva una menor pérdida de datos en caso de incidencia. ",
                                            "Lineas": "Lines 5 - 10"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "esta figura no es estática, los nodos se intercambian pings cada dos segundos para conocer la disponibilidad de cada uno. el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. la principal diferencia con mongodump es que este comando lleva a cabo una foto estática de la base de datos en el momento en el que se ejecuta, y extrae unos ficheros bson y json con los datos que se encuentran en la bbdd en el momento de la ejecución. por su parte, replica-set funciona en tiempo real, es decir, los datos se encuentran respaldados continuamente, lo que conlleva una menor pérdida de datos en caso de incidencia. ",
                                            "Lineas": "Lines 4 - 10"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "en esta arquitectura existe la figura de un nodo primario (nodo maestro). esta figura no es estática, los nodos se intercambian pings cada dos segundos para conocer la disponibilidad de cada uno. el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. la principal diferencia con mongodump es que este comando lleva a cabo una foto estática de la base de datos en el momento en el que se ejecuta, y extrae unos ficheros bson y json con los datos que se encuentran en la bbdd en el momento de la ejecución. por su parte, replica-set funciona en tiempo real, es decir, los datos se encuentran respaldados continuamente, lo que conlleva una menor pérdida de datos en caso de incidencia. ",
                                            "Lineas": "Lines 3 - 10"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. la principal diferencia con mongodump es que este comando lleva a cabo una foto estática de la base de datos en el momento en el que se ejecuta, y extrae unos ficheros bson y json con los datos que se encuentran en la bbdd en el momento de la ejecución. ",
                                            "Lineas": "Lines 8 - 9"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. la principal diferencia con mongodump es que este comando lleva a cabo una foto estática de la base de datos en el momento en el que se ejecuta, y extrae unos ficheros bson y json con los datos que se encuentran en la bbdd en el momento de la ejecución. ",
                                            "Lineas": "Lines 7 - 9"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. la principal diferencia con mongodump es que este comando lleva a cabo una foto estática de la base de datos en el momento en el que se ejecuta, y extrae unos ficheros bson y json con los datos que se encuentran en la bbdd en el momento de la ejecución. ",
                                            "Lineas": "Lines 6 - 9"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. la principal diferencia con mongodump es que este comando lleva a cabo una foto estática de la base de datos en el momento en el que se ejecuta, y extrae unos ficheros bson y json con los datos que se encuentran en la bbdd en el momento de la ejecución. por su parte, replica-set funciona en tiempo real, es decir, los datos se encuentran respaldados continuamente, lo que conlleva una menor pérdida de datos en caso de incidencia. ",
                                            "Lineas": "Lines 6 - 10"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. la principal diferencia con mongodump es que este comando lleva a cabo una foto estática de la base de datos en el momento en el que se ejecuta, y extrae unos ficheros bson y json con los datos que se encuentran en la bbdd en el momento de la ejecución. por su parte, replica-set funciona en tiempo real, es decir, los datos se encuentran respaldados continuamente, lo que conlleva una menor pérdida de datos en caso de incidencia. ",
                                            "Lineas": "Lines 5 - 10"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "en esta arquitectura existe la figura de un nodo primario (nodo maestro). esta figura no es estática, los nodos se intercambian pings cada dos segundos para conocer la disponibilidad de cada uno. el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. la principal diferencia con mongodump es que este comando lleva a cabo una foto estática de la base de datos en el momento en el que se ejecuta, y extrae unos ficheros bson y json con los datos que se encuentran en la bbdd en el momento de la ejecución. ",
                                            "Lineas": "Lines 3 - 9"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "la principal aplicación de replica-set en mongodb es la de proporcionar respaldo a los datos. está basado en un modelo maestro-esclavo. en esta arquitectura existe la figura de un nodo primario (nodo maestro). esta figura no es estática, los nodos se intercambian pings cada dos segundos para conocer la disponibilidad de cada uno. el número mínimo de nodos que se necesitan para un replica-set en mongodb son tres nodos. dos nodos son nodos de datos, donde uno es el primario y otro el secundario (réplica del primario). el tercer nodo es un nodo árbitro. en caso de que el nodo primario deje de tener disponibilidad, este nodo árbitro asignará la función de nodo primario a otro nodo. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "b5b1b7329e33e1ba1459273adae97e78": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. ",
                                            "Lineas": "Line 11"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.85,
                                            "Frase": "si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. ",
                                            "Lineas": "Lines 10 - 11"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.817,
                                            "Frase": "si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 10 - 12"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.799,
                                            "Frase": "si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. sin embargo con la configuraciñon replica-set ya se tiene una recuperación automática frente a los fallos que puedan ocurrir. ",
                                            "Lineas": "Lines 10 - 13"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.796,
                                            "Frase": "el objetivo del replica-set es crear un ambiente donde se de una recuperación automática frente a fallos en el sistema. se consigue mediante la redundancia de datos. existe un nodo primario que va replicando sus datos en los nodos secundarios. esta copia siempre va a estar actualizada. mediante la replica-set de mongo se consigue una alta disponibilidad frente a los fallos que puedan ocurrir en el sistema. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.787,
                                            "Frase": "para una configuración mínimas son necesarios 3 nodos, 1 el primario y 2 secundarios. respecto a los 2 secundarios uno se llamara secundario y el otro será llama árbitro. el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 7 - 12"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.791,
                                            "Frase": "el objetivo del replica-set es crear un ambiente donde se de una recuperación automática frente a fallos en el sistema. se consigue mediante la redundancia de datos. existe un nodo primario que va replicando sus datos en los nodos secundarios. esta copia siempre va a estar actualizada. mediante la replica-set de mongo se consigue una alta disponibilidad frente a los fallos que puedan ocurrir en el sistema. otra ventaja es que se balancea la carga automáticamente entre los nodos del replica-set lo que hace que aumente nuestro rendimiento. para una configuración mínimas son necesarios 3 nodos, 1 el primario y 2 secundarios. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.783,
                                            "Frase": "mediante la replica-set de mongo se consigue una alta disponibilidad frente a los fallos que puedan ocurrir en el sistema. otra ventaja es que se balancea la carga automáticamente entre los nodos del replica-set lo que hace que aumente nuestro rendimiento. para una configuración mínimas son necesarios 3 nodos, 1 el primario y 2 secundarios. respecto a los 2 secundarios uno se llamara secundario y el otro será llama árbitro. el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 5 - 12"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.807,
                                            "Frase": "el objetivo del replica-set es crear un ambiente donde se de una recuperación automática frente a fallos en el sistema. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.796,
                                            "Frase": "mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 11 - 12"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.805,
                                            "Frase": "si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 10 - 12"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.787,
                                            "Frase": "el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 9 - 12"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.772,
                                            "Frase": "respecto a los 2 secundarios uno se llamara secundario y el otro será llama árbitro. el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 8 - 12"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.784,
                                            "Frase": "para una configuración mínimas son necesarios 3 nodos, 1 el primario y 2 secundarios. respecto a los 2 secundarios uno se llamara secundario y el otro será llama árbitro. el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 7 - 12"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.752,
                                            "Frase": "otra ventaja es que se balancea la carga automáticamente entre los nodos del replica-set lo que hace que aumente nuestro rendimiento. para una configuración mínimas son necesarios 3 nodos, 1 el primario y 2 secundarios. respecto a los 2 secundarios uno se llamara secundario y el otro será llama árbitro. el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 6 - 12"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.743,
                                            "Frase": "mediante la replica-set de mongo se consigue una alta disponibilidad frente a los fallos que puedan ocurrir en el sistema. otra ventaja es que se balancea la carga automáticamente entre los nodos del replica-set lo que hace que aumente nuestro rendimiento. para una configuración mínimas son necesarios 3 nodos, 1 el primario y 2 secundarios. respecto a los 2 secundarios uno se llamara secundario y el otro será llama árbitro. el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 5 - 12"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "el objetivo del replica-set es crear un ambiente donde se de una recuperación automática frente a fallos en el sistema. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. ",
                                            "Lineas": "Lines 10 - 11"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. ",
                                            "Lineas": "Lines 9 - 11"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "respecto a los 2 secundarios uno se llamara secundario y el otro será llama árbitro. el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. ",
                                            "Lineas": "Lines 8 - 11"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "respecto a los 2 secundarios uno se llamara secundario y el otro será llama árbitro. el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 8 - 12"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "para una configuración mínimas son necesarios 3 nodos, 1 el primario y 2 secundarios. respecto a los 2 secundarios uno se llamara secundario y el otro será llama árbitro. el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 7 - 12"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "para una configuración mínimas son necesarios 3 nodos, 1 el primario y 2 secundarios. respecto a los 2 secundarios uno se llamara secundario y el otro será llama árbitro. el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. sin embargo con la configuraciñon replica-set ya se tiene una recuperación automática frente a los fallos que puedan ocurrir. ",
                                            "Lineas": "Lines 7 - 13"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "mediante la replica-set de mongo se consigue una alta disponibilidad frente a los fallos que puedan ocurrir en el sistema. otra ventaja es que se balancea la carga automáticamente entre los nodos del replica-set lo que hace que aumente nuestro rendimiento. para una configuración mínimas son necesarios 3 nodos, 1 el primario y 2 secundarios. respecto a los 2 secundarios uno se llamara secundario y el otro será llama árbitro. el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 5 - 12"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. ",
                                            "Lineas": "Line 11"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 11 - 12"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. sin embargo con la configuraciñon replica-set ya se tiene una recuperación automática frente a los fallos que puedan ocurrir. ",
                                            "Lineas": "Lines 11 - 13"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. sin embargo con la configuraciñon replica-set ya se tiene una recuperación automática frente a los fallos que puedan ocurrir. ",
                                            "Lineas": "Lines 10 - 13"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.875,
                                            "Frase": "el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. sin embargo con la configuraciñon replica-set ya se tiene una recuperación automática frente a los fallos que puedan ocurrir. ",
                                            "Lineas": "Lines 9 - 13"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "se consigue mediante la redundancia de datos. existe un nodo primario que va replicando sus datos en los nodos secundarios. esta copia siempre va a estar actualizada. mediante la replica-set de mongo se consigue una alta disponibilidad frente a los fallos que puedan ocurrir en el sistema. otra ventaja es que se balancea la carga automáticamente entre los nodos del replica-set lo que hace que aumente nuestro rendimiento. para una configuración mínimas son necesarios 3 nodos, 1 el primario y 2 secundarios. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "el objetivo del replica-set es crear un ambiente donde se de una recuperación automática frente a fallos en el sistema. se consigue mediante la redundancia de datos. existe un nodo primario que va replicando sus datos en los nodos secundarios. esta copia siempre va a estar actualizada. mediante la replica-set de mongo se consigue una alta disponibilidad frente a los fallos que puedan ocurrir en el sistema. otra ventaja es que se balancea la carga automáticamente entre los nodos del replica-set lo que hace que aumente nuestro rendimiento. para una configuración mínimas son necesarios 3 nodos, 1 el primario y 2 secundarios. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.871,
                                            "Frase": "mediante la replica-set de mongo se consigue una alta disponibilidad frente a los fallos que puedan ocurrir en el sistema. otra ventaja es que se balancea la carga automáticamente entre los nodos del replica-set lo que hace que aumente nuestro rendimiento. para una configuración mínimas son necesarios 3 nodos, 1 el primario y 2 secundarios. respecto a los 2 secundarios uno se llamara secundario y el otro será llama árbitro. el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 5 - 12"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "el objetivo del replica-set es crear un ambiente donde se de una recuperación automática frente a fallos en el sistema. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. ",
                                            "Lineas": "Lines 10 - 11"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 10 - 12"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 9 - 12"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "respecto a los 2 secundarios uno se llamara secundario y el otro será llama árbitro. el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 8 - 12"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "para una configuración mínimas son necesarios 3 nodos, 1 el primario y 2 secundarios. respecto a los 2 secundarios uno se llamara secundario y el otro será llama árbitro. el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 7 - 12"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "para una configuración mínimas son necesarios 3 nodos, 1 el primario y 2 secundarios. respecto a los 2 secundarios uno se llamara secundario y el otro será llama árbitro. el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. sin embargo con la configuraciñon replica-set ya se tiene una recuperación automática frente a los fallos que puedan ocurrir. ",
                                            "Lineas": "Lines 7 - 13"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "mediante la replica-set de mongo se consigue una alta disponibilidad frente a los fallos que puedan ocurrir en el sistema. otra ventaja es que se balancea la carga automáticamente entre los nodos del replica-set lo que hace que aumente nuestro rendimiento. para una configuración mínimas son necesarios 3 nodos, 1 el primario y 2 secundarios. respecto a los 2 secundarios uno se llamara secundario y el otro será llama árbitro. el arbitro únicamente decide que  nodo tiene que ser empleado como primario. si el nodo primario falla, uno de esos nodos secundarios será elegido como el nuevo nodo primario. mongodump también puede hacer una copia de seguridad de los datos y la puede restaurar con mongostore. la principal diferencia es que éste es un proceso manual que tiene que hacer el propio usuario. ",
                                            "Lineas": "Lines 5 - 12"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "d0d16cf33b031602f1b818a8190fc59f": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "el concepto de replica-set es un refinamiento del modelo maestro-esclavo, las funciones principales del conjunto de réplicas es permitir la recuperación a fallos de manera automática y es una de las formas de añadir replicación a datos en mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "el concepto de replica-set es un refinamiento del modelo maestro-esclavo, las funciones principales del conjunto de réplicas es permitir la recuperación a fallos de manera automática y es una de las formas de añadir replicación a datos en mongodb. la recomendación en replica-set es de una configuración mínima de tres nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.875,
                                            "Frase": "el concepto de replica-set es un refinamiento del modelo maestro-esclavo, las funciones principales del conjunto de réplicas es permitir la recuperación a fallos de manera automática y es una de las formas de añadir replicación a datos en mongodb. la recomendación en replica-set es de una configuración mínima de tres nodos. en este caso uno de ellos es el nodo primario, sobre este nodo actúa un nodo secundario que replicará las operaciones que se vayan a realizar en el primario, por lo que actuará en caso de no disponibilidad del primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.869,
                                            "Frase": "el concepto de replica-set es un refinamiento del modelo maestro-esclavo, las funciones principales del conjunto de réplicas es permitir la recuperación a fallos de manera automática y es una de las formas de añadir replicación a datos en mongodb. la recomendación en replica-set es de una configuración mínima de tres nodos. en este caso uno de ellos es el nodo primario, sobre este nodo actúa un nodo secundario que replicará las operaciones que se vayan a realizar en el primario, por lo que actuará en caso de no disponibilidad del primario. uno de los métodos de respaldo es mongodump este hace una copia de seguridad en ese instante de los datos conectándose a una instancia mongo que se esté ejecutando, por otro lado, con las réplicas mantienen la información duplicada en todo momento por varios nodos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.804,
                                            "Frase": "el concepto de replica-set es un refinamiento del modelo maestro-esclavo, las funciones principales del conjunto de réplicas es permitir la recuperación a fallos de manera automática y es una de las formas de añadir replicación a datos en mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.808,
                                            "Frase": "el concepto de replica-set es un refinamiento del modelo maestro-esclavo, las funciones principales del conjunto de réplicas es permitir la recuperación a fallos de manera automática y es una de las formas de añadir replicación a datos en mongodb. la recomendación en replica-set es de una configuración mínima de tres nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.815,
                                            "Frase": "el concepto de replica-set es un refinamiento del modelo maestro-esclavo, las funciones principales del conjunto de réplicas es permitir la recuperación a fallos de manera automática y es una de las formas de añadir replicación a datos en mongodb. la recomendación en replica-set es de una configuración mínima de tres nodos. en este caso uno de ellos es el nodo primario, sobre este nodo actúa un nodo secundario que replicará las operaciones que se vayan a realizar en el primario, por lo que actuará en caso de no disponibilidad del primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.779,
                                            "Frase": "el concepto de replica-set es un refinamiento del modelo maestro-esclavo, las funciones principales del conjunto de réplicas es permitir la recuperación a fallos de manera automática y es una de las formas de añadir replicación a datos en mongodb. la recomendación en replica-set es de una configuración mínima de tres nodos. en este caso uno de ellos es el nodo primario, sobre este nodo actúa un nodo secundario que replicará las operaciones que se vayan a realizar en el primario, por lo que actuará en caso de no disponibilidad del primario. uno de los métodos de respaldo es mongodump este hace una copia de seguridad en ese instante de los datos conectándose a una instancia mongo que se esté ejecutando, por otro lado, con las réplicas mantienen la información duplicada en todo momento por varios nodos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "en este caso uno de ellos es el nodo primario, sobre este nodo actúa un nodo secundario que replicará las operaciones que se vayan a realizar en el primario, por lo que actuará en caso de no disponibilidad del primario. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "la recomendación en replica-set es de una configuración mínima de tres nodos. en este caso uno de ellos es el nodo primario, sobre este nodo actúa un nodo secundario que replicará las operaciones que se vayan a realizar en el primario, por lo que actuará en caso de no disponibilidad del primario. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "el concepto de replica-set es un refinamiento del modelo maestro-esclavo, las funciones principales del conjunto de réplicas es permitir la recuperación a fallos de manera automática y es una de las formas de añadir replicación a datos en mongodb. la recomendación en replica-set es de una configuración mínima de tres nodos. en este caso uno de ellos es el nodo primario, sobre este nodo actúa un nodo secundario que replicará las operaciones que se vayan a realizar en el primario, por lo que actuará en caso de no disponibilidad del primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "el concepto de replica-set es un refinamiento del modelo maestro-esclavo, las funciones principales del conjunto de réplicas es permitir la recuperación a fallos de manera automática y es una de las formas de añadir replicación a datos en mongodb. la recomendación en replica-set es de una configuración mínima de tres nodos. en este caso uno de ellos es el nodo primario, sobre este nodo actúa un nodo secundario que replicará las operaciones que se vayan a realizar en el primario, por lo que actuará en caso de no disponibilidad del primario. uno de los métodos de respaldo es mongodump este hace una copia de seguridad en ese instante de los datos conectándose a una instancia mongo que se esté ejecutando, por otro lado, con las réplicas mantienen la información duplicada en todo momento por varios nodos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "uno de los métodos de respaldo es mongodump este hace una copia de seguridad en ese instante de los datos conectándose a una instancia mongo que se esté ejecutando, por otro lado, con las réplicas mantienen la información duplicada en todo momento por varios nodos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "el concepto de replica-set es un refinamiento del modelo maestro-esclavo, las funciones principales del conjunto de réplicas es permitir la recuperación a fallos de manera automática y es una de las formas de añadir replicación a datos en mongodb. la recomendación en replica-set es de una configuración mínima de tres nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "la recomendación en replica-set es de una configuración mínima de tres nodos. en este caso uno de ellos es el nodo primario, sobre este nodo actúa un nodo secundario que replicará las operaciones que se vayan a realizar en el primario, por lo que actuará en caso de no disponibilidad del primario. uno de los métodos de respaldo es mongodump este hace una copia de seguridad en ese instante de los datos conectándose a una instancia mongo que se esté ejecutando, por otro lado, con las réplicas mantienen la información duplicada en todo momento por varios nodos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "el concepto de replica-set es un refinamiento del modelo maestro-esclavo, las funciones principales del conjunto de réplicas es permitir la recuperación a fallos de manera automática y es una de las formas de añadir replicación a datos en mongodb. la recomendación en replica-set es de una configuración mínima de tres nodos. en este caso uno de ellos es el nodo primario, sobre este nodo actúa un nodo secundario que replicará las operaciones que se vayan a realizar en el primario, por lo que actuará en caso de no disponibilidad del primario. uno de los métodos de respaldo es mongodump este hace una copia de seguridad en ese instante de los datos conectándose a una instancia mongo que se esté ejecutando, por otro lado, con las réplicas mantienen la información duplicada en todo momento por varios nodos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "el concepto de replica-set es un refinamiento del modelo maestro-esclavo, las funciones principales del conjunto de réplicas es permitir la recuperación a fallos de manera automática y es una de las formas de añadir replicación a datos en mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "el concepto de replica-set es un refinamiento del modelo maestro-esclavo, las funciones principales del conjunto de réplicas es permitir la recuperación a fallos de manera automática y es una de las formas de añadir replicación a datos en mongodb. la recomendación en replica-set es de una configuración mínima de tres nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.96,
                                            "Frase": "el concepto de replica-set es un refinamiento del modelo maestro-esclavo, las funciones principales del conjunto de réplicas es permitir la recuperación a fallos de manera automática y es una de las formas de añadir replicación a datos en mongodb. la recomendación en replica-set es de una configuración mínima de tres nodos. en este caso uno de ellos es el nodo primario, sobre este nodo actúa un nodo secundario que replicará las operaciones que se vayan a realizar en el primario, por lo que actuará en caso de no disponibilidad del primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "el concepto de replica-set es un refinamiento del modelo maestro-esclavo, las funciones principales del conjunto de réplicas es permitir la recuperación a fallos de manera automática y es una de las formas de añadir replicación a datos en mongodb. la recomendación en replica-set es de una configuración mínima de tres nodos. en este caso uno de ellos es el nodo primario, sobre este nodo actúa un nodo secundario que replicará las operaciones que se vayan a realizar en el primario, por lo que actuará en caso de no disponibilidad del primario. uno de los métodos de respaldo es mongodump este hace una copia de seguridad en ese instante de los datos conectándose a una instancia mongo que se esté ejecutando, por otro lado, con las réplicas mantienen la información duplicada en todo momento por varios nodos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "f4d0bf14886ef288809047c1c7bce5ce": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.858,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.874,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.862,
                                            "Frase": "los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. mientras que el replica-set se encarga de hacer backups constantes. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.843,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.801,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.82,
                                            "Frase": "los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.839,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.834,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. mientras que el replica-set se encarga de hacer backups constantes. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.791,
                                            "Frase": "los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.777,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.806,
                                            "Frase": "los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.804,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.787,
                                            "Frase": "los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.795,
                                            "Frase": "los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.793,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.788,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. mientras que el replica-set se encarga de hacer backups constantes. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. mientras que el replica-set se encarga de hacer backups constantes. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. mientras que el replica-set se encarga de hacer backups constantes. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.859,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.875,
                                            "Frase": "los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. mientras que el replica-set se encarga de hacer backups constantes. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "disponer de una configuración en mongodb en replica-set nos permite mejorar la disponibilidad de nuestro clúster al disponer de varios nodos configurados de tal forma que en caso de que uno falle otro asuma el mando. los nodos envían un heartbeat cada dos segundos para comprobar la disponibilidad del resto, de esta manera se mantiene siempre actualizado y en caso de fallo hay un margen pequeño de pérdidas. una configuración replica-set para ser considerada como tal se deben configurar como mínimo tres nodos. los cuales son un nodo primario, un nodo secundario y un nodo arbitro. este último nodo se encarga de que cuando un nodo primario se cae y se procede a la votación de quien será el nuevo nodo primario, en caso de empate el nodo arbitro se encargará de desempatar y adjudicar el nodo primario al nodo secundario mejor posicionado. los nodos secundarios pueden configurarse de diferentes maneras tales como: hidden (no puede ser nodo primario), retrasado (espera un tiempo hasta hacer los cambios), etc. la diferencia con mongodump reside en que este realiza una foto de los datos en el momento de realizarse la llamada a la función. mientras que el replica-set se encarga de hacer backups constantes. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "2fae60a0028014899d19e2620486f7f9": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.808,
                                            "Frase": "para recuperar la información usaremos mongorestore. ",
                                            "Lineas": "Line 11"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.835,
                                            "Frase": "se puede hacer de una collection o de varias. para recuperar la información usaremos mongorestore. ",
                                            "Lineas": "Lines 10 - 11"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.843,
                                            "Frase": "el replica set es una manera de respaldo dinámico. esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. el standard en producción son 3 replica-set. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.792,
                                            "Frase": "para ello se mandan pings cada dos segundos. mongodump es una manera de respaldo pero es una foto estática en el momento que se realiza. se puede hacer de una collection o de varias. para recuperar la información usaremos mongorestore. ",
                                            "Lineas": "Lines 8 - 11"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.769,
                                            "Frase": "y una vez se recupera el anterior primario pasara a ser el secundario. para ello se mandan pings cada dos segundos. mongodump es una manera de respaldo pero es una foto estática en el momento que se realiza. se puede hacer de una collection o de varias. para recuperar la información usaremos mongorestore. ",
                                            "Lineas": "Lines 7 - 11"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.755,
                                            "Frase": "el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. y una vez se recupera el anterior primario pasara a ser el secundario. para ello se mandan pings cada dos segundos. mongodump es una manera de respaldo pero es una foto estática en el momento que se realiza. se puede hacer de una collection o de varias. para recuperar la información usaremos mongorestore. ",
                                            "Lineas": "Lines 6 - 11"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.741,
                                            "Frase": "uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. y una vez se recupera el anterior primario pasara a ser el secundario. para ello se mandan pings cada dos segundos. mongodump es una manera de respaldo pero es una foto estática en el momento que se realiza. se puede hacer de una collection o de varias. para recuperar la información usaremos mongorestore. ",
                                            "Lineas": "Lines 5 - 11"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.721,
                                            "Frase": "si se refiere a nodos como un único replica set son 3 nodos. uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. y una vez se recupera el anterior primario pasara a ser el secundario. para ello se mandan pings cada dos segundos. mongodump es una manera de respaldo pero es una foto estática en el momento que se realiza. se puede hacer de una collection o de varias. para recuperar la información usaremos mongorestore. ",
                                            "Lineas": "Lines 4 - 11"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.836,
                                            "Frase": "el replica set es una manera de respaldo dinámico. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.779,
                                            "Frase": "el replica set es una manera de respaldo dinámico. esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.803,
                                            "Frase": "el replica set es una manera de respaldo dinámico. esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. el standard en producción son 3 replica-set. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.779,
                                            "Frase": "el replica set es una manera de respaldo dinámico. esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. el standard en producción son 3 replica-set. si se refiere a nodos como un único replica set son 3 nodos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.812,
                                            "Frase": "el replica set es una manera de respaldo dinámico. esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. el standard en producción son 3 replica-set. si se refiere a nodos como un único replica set son 3 nodos. uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.809,
                                            "Frase": "el replica set es una manera de respaldo dinámico. esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. el standard en producción son 3 replica-set. si se refiere a nodos como un único replica set son 3 nodos. uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.789,
                                            "Frase": "el replica set es una manera de respaldo dinámico. esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. el standard en producción son 3 replica-set. si se refiere a nodos como un único replica set son 3 nodos. uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. y una vez se recupera el anterior primario pasara a ser el secundario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.775,
                                            "Frase": "el replica set es una manera de respaldo dinámico. esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. el standard en producción son 3 replica-set. si se refiere a nodos como un único replica set son 3 nodos. uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. y una vez se recupera el anterior primario pasara a ser el secundario. para ello se mandan pings cada dos segundos. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.867,
                                            "Frase": "el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.873,
                                            "Frase": "uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.869,
                                            "Frase": "uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. y una vez se recupera el anterior primario pasara a ser el secundario. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "el standard en producción son 3 replica-set. si se refiere a nodos como un único replica set son 3 nodos. uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. el standard en producción son 3 replica-set. si se refiere a nodos como un único replica set son 3 nodos. uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "el replica set es una manera de respaldo dinámico. esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. el standard en producción son 3 replica-set. si se refiere a nodos como un único replica set son 3 nodos. uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "el replica set es una manera de respaldo dinámico. esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. el standard en producción son 3 replica-set. si se refiere a nodos como un único replica set son 3 nodos. uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. y una vez se recupera el anterior primario pasara a ser el secundario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "el replica set es una manera de respaldo dinámico. esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. el standard en producción son 3 replica-set. si se refiere a nodos como un único replica set son 3 nodos. uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. y una vez se recupera el anterior primario pasara a ser el secundario. para ello se mandan pings cada dos segundos. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "el replica set es una manera de respaldo dinámico. esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "mongodump es una manera de respaldo pero es una foto estática en el momento que se realiza. se puede hacer de una collection o de varias. para recuperar la información usaremos mongorestore. ",
                                            "Lineas": "Lines 9 - 11"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "para ello se mandan pings cada dos segundos. mongodump es una manera de respaldo pero es una foto estática en el momento que se realiza. se puede hacer de una collection o de varias. para recuperar la información usaremos mongorestore. ",
                                            "Lineas": "Lines 8 - 11"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "y una vez se recupera el anterior primario pasara a ser el secundario. para ello se mandan pings cada dos segundos. mongodump es una manera de respaldo pero es una foto estática en el momento que se realiza. se puede hacer de una collection o de varias. para recuperar la información usaremos mongorestore. ",
                                            "Lineas": "Lines 7 - 11"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.822,
                                            "Frase": "el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. y una vez se recupera el anterior primario pasara a ser el secundario. para ello se mandan pings cada dos segundos. mongodump es una manera de respaldo pero es una foto estática en el momento que se realiza. se puede hacer de una collection o de varias. para recuperar la información usaremos mongorestore. ",
                                            "Lineas": "Lines 6 - 11"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.806,
                                            "Frase": "uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. y una vez se recupera el anterior primario pasara a ser el secundario. para ello se mandan pings cada dos segundos. mongodump es una manera de respaldo pero es una foto estática en el momento que se realiza. se puede hacer de una collection o de varias. para recuperar la información usaremos mongorestore. ",
                                            "Lineas": "Lines 5 - 11"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.8,
                                            "Frase": "si se refiere a nodos como un único replica set son 3 nodos. uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. y una vez se recupera el anterior primario pasara a ser el secundario. para ello se mandan pings cada dos segundos. mongodump es una manera de respaldo pero es una foto estática en el momento que se realiza. se puede hacer de una collection o de varias. para recuperar la información usaremos mongorestore. ",
                                            "Lineas": "Lines 4 - 11"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.846,
                                            "Frase": "esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.892,
                                            "Frase": "el replica set es una manera de respaldo dinámico. esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "el replica set es una manera de respaldo dinámico. esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. el standard en producción son 3 replica-set. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "el replica set es una manera de respaldo dinámico. esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. el standard en producción son 3 replica-set. si se refiere a nodos como un único replica set son 3 nodos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "el replica set es una manera de respaldo dinámico. esto es que se conserva una copia de seguridad en todo momento, aportando fiabilidad, robustez y rápida respuesta. el standard en producción son 3 replica-set. si se refiere a nodos como un único replica set son 3 nodos. uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. y una vez se recupera el anterior primario pasara a ser el secundario. para ello se mandan pings cada dos segundos. mongodump es una manera de respaldo pero es una foto estática en el momento que se realiza. se puede hacer de una collection o de varias. para recuperar la información usaremos mongorestore. ",
                                            "Lineas": "Lines 6 - 11"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.883,
                                            "Frase": "uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. y una vez se recupera el anterior primario pasara a ser el secundario. para ello se mandan pings cada dos segundos. mongodump es una manera de respaldo pero es una foto estática en el momento que se realiza. se puede hacer de una collection o de varias. para recuperar la información usaremos mongorestore. ",
                                            "Lineas": "Lines 5 - 11"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.871,
                                            "Frase": "si se refiere a nodos como un único replica set son 3 nodos. uno primario que es donde llega la información del cliente un segundario donde se copia al primario y un árbitro. el árbitro es el encargado de mantener el sistema activo en el caso de que al primario le ocurra algo, el secundario pasara a ser primario. y una vez se recupera el anterior primario pasara a ser el secundario. para ello se mandan pings cada dos segundos. mongodump es una manera de respaldo pero es una foto estática en el momento que se realiza. se puede hacer de una collection o de varias. para recuperar la información usaremos mongorestore. ",
                                            "Lineas": "Lines 4 - 11"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "197202cada30464d0dccd61b6d0ba4db": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "la función de un replica-set es ofrecer garantías frente a la posibilidad de caída de un nodo, son necesarios mínimo tres nodos para realizar un despliegue de mongo con replica-set. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.861,
                                            "Frase": "la función de un replica-set es ofrecer garantías frente a la posibilidad de caída de un nodo, son necesarios mínimo tres nodos para realizar un despliegue de mongo con replica-set. cuando un nodo primario cae, los nodos secundarios votan un nuevo nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.75,
                                            "Frase": "la función de un replica-set es ofrecer garantías frente a la posibilidad de caída de un nodo, son necesarios mínimo tres nodos para realizar un despliegue de mongo con replica-set. cuando un nodo primario cae, los nodos secundarios votan un nuevo nodo primario. mongodump se realiza una vez y no se actualiza automáticamente, mientras que un replica-set se configura con un tiempo determinado tras el cual realiza las mismas operaciones que el nodo primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.873,
                                            "Frase": "la función de un replica-set es ofrecer garantías frente a la posibilidad de caída de un nodo, son necesarios mínimo tres nodos para realizar un despliegue de mongo con replica-set. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "la función de un replica-set es ofrecer garantías frente a la posibilidad de caída de un nodo, son necesarios mínimo tres nodos para realizar un despliegue de mongo con replica-set. cuando un nodo primario cae, los nodos secundarios votan un nuevo nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.809,
                                            "Frase": "la función de un replica-set es ofrecer garantías frente a la posibilidad de caída de un nodo, son necesarios mínimo tres nodos para realizar un despliegue de mongo con replica-set. cuando un nodo primario cae, los nodos secundarios votan un nuevo nodo primario. mongodump se realiza una vez y no se actualiza automáticamente, mientras que un replica-set se configura con un tiempo determinado tras el cual realiza las mismas operaciones que el nodo primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "la función de un replica-set es ofrecer garantías frente a la posibilidad de caída de un nodo, son necesarios mínimo tres nodos para realizar un despliegue de mongo con replica-set. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "la función de un replica-set es ofrecer garantías frente a la posibilidad de caída de un nodo, son necesarios mínimo tres nodos para realizar un despliegue de mongo con replica-set. cuando un nodo primario cae, los nodos secundarios votan un nuevo nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "la función de un replica-set es ofrecer garantías frente a la posibilidad de caída de un nodo, son necesarios mínimo tres nodos para realizar un despliegue de mongo con replica-set. cuando un nodo primario cae, los nodos secundarios votan un nuevo nodo primario. mongodump se realiza una vez y no se actualiza automáticamente, mientras que un replica-set se configura con un tiempo determinado tras el cual realiza las mismas operaciones que el nodo primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "la función de un replica-set es ofrecer garantías frente a la posibilidad de caída de un nodo, son necesarios mínimo tres nodos para realizar un despliegue de mongo con replica-set. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.829,
                                            "Frase": "la función de un replica-set es ofrecer garantías frente a la posibilidad de caída de un nodo, son necesarios mínimo tres nodos para realizar un despliegue de mongo con replica-set. cuando un nodo primario cae, los nodos secundarios votan un nuevo nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.823,
                                            "Frase": "la función de un replica-set es ofrecer garantías frente a la posibilidad de caída de un nodo, son necesarios mínimo tres nodos para realizar un despliegue de mongo con replica-set. cuando un nodo primario cae, los nodos secundarios votan un nuevo nodo primario. mongodump se realiza una vez y no se actualiza automáticamente, mientras que un replica-set se configura con un tiempo determinado tras el cual realiza las mismas operaciones que el nodo primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "la función de un replica-set es ofrecer garantías frente a la posibilidad de caída de un nodo, son necesarios mínimo tres nodos para realizar un despliegue de mongo con replica-set. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "la función de un replica-set es ofrecer garantías frente a la posibilidad de caída de un nodo, son necesarios mínimo tres nodos para realizar un despliegue de mongo con replica-set. cuando un nodo primario cae, los nodos secundarios votan un nuevo nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "la función de un replica-set es ofrecer garantías frente a la posibilidad de caída de un nodo, son necesarios mínimo tres nodos para realizar un despliegue de mongo con replica-set. cuando un nodo primario cae, los nodos secundarios votan un nuevo nodo primario. mongodump se realiza una vez y no se actualiza automáticamente, mientras que un replica-set se configura con un tiempo determinado tras el cual realiza las mismas operaciones que el nodo primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "268eaada61847dfd6089191ed7070fdc": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.883,
                                            "Frase": "la arquitectura replica-set consiste en tener un tener un maestro-esclavo, el cual nos permite garantizar disponibilidad de la información y un respaldo en caso de fallos, los nodos mínimo deberían ser 2, en caso de que el nodo primario falle el nodo esclavo pasa a remplazarlo de inmediatamente y el mogodump permite generar copias de respaldo de la información. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.826,
                                            "Frase": "la arquitectura replica-set consiste en tener un tener un maestro-esclavo, el cual nos permite garantizar disponibilidad de la información y un respaldo en caso de fallos, los nodos mínimo deberían ser 2, en caso de que el nodo primario falle el nodo esclavo pasa a remplazarlo de inmediatamente y el mogodump permite generar copias de respaldo de la información. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "la arquitectura replica-set consiste en tener un tener un maestro-esclavo, el cual nos permite garantizar disponibilidad de la información y un respaldo en caso de fallos, los nodos mínimo deberían ser 2, en caso de que el nodo primario falle el nodo esclavo pasa a remplazarlo de inmediatamente y el mogodump permite generar copias de respaldo de la información. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "la arquitectura replica-set consiste en tener un tener un maestro-esclavo, el cual nos permite garantizar disponibilidad de la información y un respaldo en caso de fallos, los nodos mínimo deberían ser 2, en caso de que el nodo primario falle el nodo esclavo pasa a remplazarlo de inmediatamente y el mogodump permite generar copias de respaldo de la información. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.964,
                                            "Frase": "la arquitectura replica-set consiste en tener un tener un maestro-esclavo, el cual nos permite garantizar disponibilidad de la información y un respaldo en caso de fallos, los nodos mínimo deberían ser 2, en caso de que el nodo primario falle el nodo esclavo pasa a remplazarlo de inmediatamente y el mogodump permite generar copias de respaldo de la información. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "bf874991ff0fbd29b5f87482957af4ea": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.835,
                                            "Frase": "es una arquitectura que se establece sobre sistemas distribuidos, con la finalidad de otorgar mayor disponibilidad, para una configuración mínima se requieren 3 nodos, uno primario y dos secundarios, sobre el nodo primario se gestiona la escritura obligatoriamente y sobre el primario o secundarios se puede dar la lectura, uno de los nodos secundarios actúa de arbitro para decidir cuál de los secundarios hace la réplica, la diferencia con mongodump es que este crea respaldos pero no en caliente como una arquitectura en replicaset. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.712,
                                            "Frase": "es una arquitectura que se establece sobre sistemas distribuidos, con la finalidad de otorgar mayor disponibilidad, para una configuración mínima se requieren 3 nodos, uno primario y dos secundarios, sobre el nodo primario se gestiona la escritura obligatoriamente y sobre el primario o secundarios se puede dar la lectura, uno de los nodos secundarios actúa de arbitro para decidir cuál de los secundarios hace la réplica, la diferencia con mongodump es que este crea respaldos pero no en caliente como una arquitectura en replicaset. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.835,
                                            "Frase": "es una arquitectura que se establece sobre sistemas distribuidos, con la finalidad de otorgar mayor disponibilidad, para una configuración mínima se requieren 3 nodos, uno primario y dos secundarios, sobre el nodo primario se gestiona la escritura obligatoriamente y sobre el primario o secundarios se puede dar la lectura, uno de los nodos secundarios actúa de arbitro para decidir cuál de los secundarios hace la réplica, la diferencia con mongodump es que este crea respaldos pero no en caliente como una arquitectura en replicaset. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "es una arquitectura que se establece sobre sistemas distribuidos, con la finalidad de otorgar mayor disponibilidad, para una configuración mínima se requieren 3 nodos, uno primario y dos secundarios, sobre el nodo primario se gestiona la escritura obligatoriamente y sobre el primario o secundarios se puede dar la lectura, uno de los nodos secundarios actúa de arbitro para decidir cuál de los secundarios hace la réplica, la diferencia con mongodump es que este crea respaldos pero no en caliente como una arquitectura en replicaset. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "es una arquitectura que se establece sobre sistemas distribuidos, con la finalidad de otorgar mayor disponibilidad, para una configuración mínima se requieren 3 nodos, uno primario y dos secundarios, sobre el nodo primario se gestiona la escritura obligatoriamente y sobre el primario o secundarios se puede dar la lectura, uno de los nodos secundarios actúa de arbitro para decidir cuál de los secundarios hace la réplica, la diferencia con mongodump es que este crea respaldos pero no en caliente como una arquitectura en replicaset. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.5,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "5285e5cfba9e640542c862d94a89ba87": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.821,
                                            "Frase": "la arquitectura replica-set es una mejora de la configuración maestro-esclavo que en mongodb permite dotar a nuestra plataforma de varias funciones tales como: alta disponibilidad al trabajar con varios nodos permitiendo que los clientes puedan seguir trabajando ante fallos del nodo primario;  replicación dado que los datos son almacenados también  en nodos secundarios ( pueden ser configurados con retraso ) y capacidades de balanceo de carga, ya que los clientes pueden leer datos desde varios nodos secundarios de forma totalmente transparente para ellos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.817,
                                            "Frase": "la arquitectura replica-set es una mejora de la configuración maestro-esclavo que en mongodb permite dotar a nuestra plataforma de varias funciones tales como: alta disponibilidad al trabajar con varios nodos permitiendo que los clientes puedan seguir trabajando ante fallos del nodo primario;  replicación dado que los datos son almacenados también  en nodos secundarios ( pueden ser configurados con retraso ) y capacidades de balanceo de carga, ya que los clientes pueden leer datos desde varios nodos secundarios de forma totalmente transparente para ellos. como principal diferencia con mongodump debemos considerar que mongodump guarda la información que determinemos ( todas la bases de datos, solo algunas, ciertas colecciones o incluso ciertas consultas ) en ficheros que se pueden considerar fotos fijas mientras que replica-set realiza la operación de respaldo de datos sobre otros nodos con datos vivos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.83,
                                            "Frase": "la arquitectura replica-set es una mejora de la configuración maestro-esclavo que en mongodb permite dotar a nuestra plataforma de varias funciones tales como: alta disponibilidad al trabajar con varios nodos permitiendo que los clientes puedan seguir trabajando ante fallos del nodo primario;  replicación dado que los datos son almacenados también  en nodos secundarios ( pueden ser configurados con retraso ) y capacidades de balanceo de carga, ya que los clientes pueden leer datos desde varios nodos secundarios de forma totalmente transparente para ellos. como principal diferencia con mongodump debemos considerar que mongodump guarda la información que determinemos ( todas la bases de datos, solo algunas, ciertas colecciones o incluso ciertas consultas ) en ficheros que se pueden considerar fotos fijas mientras que replica-set realiza la operación de respaldo de datos sobre otros nodos con datos vivos. la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.843,
                                            "Frase": "la arquitectura replica-set es una mejora de la configuración maestro-esclavo que en mongodb permite dotar a nuestra plataforma de varias funciones tales como: alta disponibilidad al trabajar con varios nodos permitiendo que los clientes puedan seguir trabajando ante fallos del nodo primario;  replicación dado que los datos son almacenados también  en nodos secundarios ( pueden ser configurados con retraso ) y capacidades de balanceo de carga, ya que los clientes pueden leer datos desde varios nodos secundarios de forma totalmente transparente para ellos. como principal diferencia con mongodump debemos considerar que mongodump guarda la información que determinemos ( todas la bases de datos, solo algunas, ciertas colecciones o incluso ciertas consultas ) en ficheros que se pueden considerar fotos fijas mientras que replica-set realiza la operación de respaldo de datos sobre otros nodos con datos vivos. la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.843,
                                            "Frase": "la arquitectura replica-set es una mejora de la configuración maestro-esclavo que en mongodb permite dotar a nuestra plataforma de varias funciones tales como: alta disponibilidad al trabajar con varios nodos permitiendo que los clientes puedan seguir trabajando ante fallos del nodo primario;  replicación dado que los datos son almacenados también  en nodos secundarios ( pueden ser configurados con retraso ) y capacidades de balanceo de carga, ya que los clientes pueden leer datos desde varios nodos secundarios de forma totalmente transparente para ellos. como principal diferencia con mongodump debemos considerar que mongodump guarda la información que determinemos ( todas la bases de datos, solo algunas, ciertas colecciones o incluso ciertas consultas ) en ficheros que se pueden considerar fotos fijas mientras que replica-set realiza la operación de respaldo de datos sobre otros nodos con datos vivos. la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. en este caso el nodo árbitro es el encargado de deshacer posibles empates garantizando que siempre habrá un nuevo nodo primario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.811,
                                            "Frase": "la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.809,
                                            "Frase": "la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.818,
                                            "Frase": "la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. en este caso el nodo árbitro es el encargado de deshacer posibles empates garantizando que siempre habrá un nuevo nodo primario. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.782,
                                            "Frase": "como principal diferencia con mongodump debemos considerar que mongodump guarda la información que determinemos ( todas la bases de datos, solo algunas, ciertas colecciones o incluso ciertas consultas ) en ficheros que se pueden considerar fotos fijas mientras que replica-set realiza la operación de respaldo de datos sobre otros nodos con datos vivos. la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. en este caso el nodo árbitro es el encargado de deshacer posibles empates garantizando que siempre habrá un nuevo nodo primario. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.746,
                                            "Frase": "la arquitectura replica-set es una mejora de la configuración maestro-esclavo que en mongodb permite dotar a nuestra plataforma de varias funciones tales como: alta disponibilidad al trabajar con varios nodos permitiendo que los clientes puedan seguir trabajando ante fallos del nodo primario;  replicación dado que los datos son almacenados también  en nodos secundarios ( pueden ser configurados con retraso ) y capacidades de balanceo de carga, ya que los clientes pueden leer datos desde varios nodos secundarios de forma totalmente transparente para ellos. como principal diferencia con mongodump debemos considerar que mongodump guarda la información que determinemos ( todas la bases de datos, solo algunas, ciertas colecciones o incluso ciertas consultas ) en ficheros que se pueden considerar fotos fijas mientras que replica-set realiza la operación de respaldo de datos sobre otros nodos con datos vivos. la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. en este caso el nodo árbitro es el encargado de deshacer posibles empates garantizando que siempre habrá un nuevo nodo primario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. en este caso el nodo árbitro es el encargado de deshacer posibles empates garantizando que siempre habrá un nuevo nodo primario. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. en este caso el nodo árbitro es el encargado de deshacer posibles empates garantizando que siempre habrá un nuevo nodo primario. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "como principal diferencia con mongodump debemos considerar que mongodump guarda la información que determinemos ( todas la bases de datos, solo algunas, ciertas colecciones o incluso ciertas consultas ) en ficheros que se pueden considerar fotos fijas mientras que replica-set realiza la operación de respaldo de datos sobre otros nodos con datos vivos. la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. en este caso el nodo árbitro es el encargado de deshacer posibles empates garantizando que siempre habrá un nuevo nodo primario. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "la arquitectura replica-set es una mejora de la configuración maestro-esclavo que en mongodb permite dotar a nuestra plataforma de varias funciones tales como: alta disponibilidad al trabajar con varios nodos permitiendo que los clientes puedan seguir trabajando ante fallos del nodo primario;  replicación dado que los datos son almacenados también  en nodos secundarios ( pueden ser configurados con retraso ) y capacidades de balanceo de carga, ya que los clientes pueden leer datos desde varios nodos secundarios de forma totalmente transparente para ellos. como principal diferencia con mongodump debemos considerar que mongodump guarda la información que determinemos ( todas la bases de datos, solo algunas, ciertas colecciones o incluso ciertas consultas ) en ficheros que se pueden considerar fotos fijas mientras que replica-set realiza la operación de respaldo de datos sobre otros nodos con datos vivos. la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. en este caso el nodo árbitro es el encargado de deshacer posibles empates garantizando que siempre habrá un nuevo nodo primario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "como principal diferencia con mongodump debemos considerar que mongodump guarda la información que determinemos ( todas la bases de datos, solo algunas, ciertas colecciones o incluso ciertas consultas ) en ficheros que se pueden considerar fotos fijas mientras que replica-set realiza la operación de respaldo de datos sobre otros nodos con datos vivos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "como principal diferencia con mongodump debemos considerar que mongodump guarda la información que determinemos ( todas la bases de datos, solo algunas, ciertas colecciones o incluso ciertas consultas ) en ficheros que se pueden considerar fotos fijas mientras que replica-set realiza la operación de respaldo de datos sobre otros nodos con datos vivos. la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "la arquitectura replica-set es una mejora de la configuración maestro-esclavo que en mongodb permite dotar a nuestra plataforma de varias funciones tales como: alta disponibilidad al trabajar con varios nodos permitiendo que los clientes puedan seguir trabajando ante fallos del nodo primario;  replicación dado que los datos son almacenados también  en nodos secundarios ( pueden ser configurados con retraso ) y capacidades de balanceo de carga, ya que los clientes pueden leer datos desde varios nodos secundarios de forma totalmente transparente para ellos. como principal diferencia con mongodump debemos considerar que mongodump guarda la información que determinemos ( todas la bases de datos, solo algunas, ciertas colecciones o incluso ciertas consultas ) en ficheros que se pueden considerar fotos fijas mientras que replica-set realiza la operación de respaldo de datos sobre otros nodos con datos vivos. la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "la arquitectura replica-set es una mejora de la configuración maestro-esclavo que en mongodb permite dotar a nuestra plataforma de varias funciones tales como: alta disponibilidad al trabajar con varios nodos permitiendo que los clientes puedan seguir trabajando ante fallos del nodo primario;  replicación dado que los datos son almacenados también  en nodos secundarios ( pueden ser configurados con retraso ) y capacidades de balanceo de carga, ya que los clientes pueden leer datos desde varios nodos secundarios de forma totalmente transparente para ellos. como principal diferencia con mongodump debemos considerar que mongodump guarda la información que determinemos ( todas la bases de datos, solo algunas, ciertas colecciones o incluso ciertas consultas ) en ficheros que se pueden considerar fotos fijas mientras que replica-set realiza la operación de respaldo de datos sobre otros nodos con datos vivos. la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "la arquitectura replica-set es una mejora de la configuración maestro-esclavo que en mongodb permite dotar a nuestra plataforma de varias funciones tales como: alta disponibilidad al trabajar con varios nodos permitiendo que los clientes puedan seguir trabajando ante fallos del nodo primario;  replicación dado que los datos son almacenados también  en nodos secundarios ( pueden ser configurados con retraso ) y capacidades de balanceo de carga, ya que los clientes pueden leer datos desde varios nodos secundarios de forma totalmente transparente para ellos. como principal diferencia con mongodump debemos considerar que mongodump guarda la información que determinemos ( todas la bases de datos, solo algunas, ciertas colecciones o incluso ciertas consultas ) en ficheros que se pueden considerar fotos fijas mientras que replica-set realiza la operación de respaldo de datos sobre otros nodos con datos vivos. la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. en este caso el nodo árbitro es el encargado de deshacer posibles empates garantizando que siempre habrá un nuevo nodo primario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "como principal diferencia con mongodump debemos considerar que mongodump guarda la información que determinemos ( todas la bases de datos, solo algunas, ciertas colecciones o incluso ciertas consultas ) en ficheros que se pueden considerar fotos fijas mientras que replica-set realiza la operación de respaldo de datos sobre otros nodos con datos vivos. la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "como principal diferencia con mongodump debemos considerar que mongodump guarda la información que determinemos ( todas la bases de datos, solo algunas, ciertas colecciones o incluso ciertas consultas ) en ficheros que se pueden considerar fotos fijas mientras que replica-set realiza la operación de respaldo de datos sobre otros nodos con datos vivos. la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. en este caso el nodo árbitro es el encargado de deshacer posibles empates garantizando que siempre habrá un nuevo nodo primario. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "la arquitectura replica-set es una mejora de la configuración maestro-esclavo que en mongodb permite dotar a nuestra plataforma de varias funciones tales como: alta disponibilidad al trabajar con varios nodos permitiendo que los clientes puedan seguir trabajando ante fallos del nodo primario;  replicación dado que los datos son almacenados también  en nodos secundarios ( pueden ser configurados con retraso ) y capacidades de balanceo de carga, ya que los clientes pueden leer datos desde varios nodos secundarios de forma totalmente transparente para ellos. como principal diferencia con mongodump debemos considerar que mongodump guarda la información que determinemos ( todas la bases de datos, solo algunas, ciertas colecciones o incluso ciertas consultas ) en ficheros que se pueden considerar fotos fijas mientras que replica-set realiza la operación de respaldo de datos sobre otros nodos con datos vivos. la configuración mínima necesaria sería de tres nodos, un nodo principal, otro secundario y un tercer nodo que se configuraría como árbitro. en el caso de que el nodo primario deje de estar disponible ( falla el ping  heartbeat ) se realiza una votación entre el resto de nodos secundarios para elegirse como candidato a nuevo nodo primario. en este caso el nodo árbitro es el encargado de deshacer posibles empates garantizando que siempre habrá un nuevo nodo primario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "053db5667b1dcc66a2f7b9c7cd192b3b": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.817,
                                            "Frase": "la arquitectura replica-set consiste en crear copias de seguridad y respaldo de la información almacenada en los nodos, los nodos necesarios para una configuración mínima son tres: dos nodos donde el primer nodo es el nodo primario y el segundo nodo replica toda la información del nodo primario, y un tercer nodo que es el arbitro el cuál decide que nodo debe ser el nodo primario. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.786,
                                            "Frase": "la arquitectura replica-set consiste en crear copias de seguridad y respaldo de la información almacenada en los nodos, los nodos necesarios para una configuración mínima son tres: dos nodos donde el primer nodo es el nodo primario y el segundo nodo replica toda la información del nodo primario, y un tercer nodo que es el arbitro el cuál decide que nodo debe ser el nodo primario. cuando el nodo primario deja de tener disponibilidad, el árbitro asigna al nodo secundario como primario que es quien tiene todo el respaldo del nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.815,
                                            "Frase": "la arquitectura replica-set consiste en crear copias de seguridad y respaldo de la información almacenada en los nodos, los nodos necesarios para una configuración mínima son tres: dos nodos donde el primer nodo es el nodo primario y el segundo nodo replica toda la información del nodo primario, y un tercer nodo que es el arbitro el cuál decide que nodo debe ser el nodo primario. cuando el nodo primario deja de tener disponibilidad, el árbitro asigna al nodo secundario como primario que es quien tiene todo el respaldo del nodo primario. la principal diferencia con mongodump es que replica-set manda un ping cada 2s y va restaurando la información, replica-set es una arquitectura robusta, mientras que a mongodump se lo debe llamar para generar la copia de respaldo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.801,
                                            "Frase": "la arquitectura replica-set consiste en crear copias de seguridad y respaldo de la información almacenada en los nodos, los nodos necesarios para una configuración mínima son tres: dos nodos donde el primer nodo es el nodo primario y el segundo nodo replica toda la información del nodo primario, y un tercer nodo que es el arbitro el cuál decide que nodo debe ser el nodo primario. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.808,
                                            "Frase": "la arquitectura replica-set consiste en crear copias de seguridad y respaldo de la información almacenada en los nodos, los nodos necesarios para una configuración mínima son tres: dos nodos donde el primer nodo es el nodo primario y el segundo nodo replica toda la información del nodo primario, y un tercer nodo que es el arbitro el cuál decide que nodo debe ser el nodo primario. cuando el nodo primario deja de tener disponibilidad, el árbitro asigna al nodo secundario como primario que es quien tiene todo el respaldo del nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.812,
                                            "Frase": "la arquitectura replica-set consiste en crear copias de seguridad y respaldo de la información almacenada en los nodos, los nodos necesarios para una configuración mínima son tres: dos nodos donde el primer nodo es el nodo primario y el segundo nodo replica toda la información del nodo primario, y un tercer nodo que es el arbitro el cuál decide que nodo debe ser el nodo primario. cuando el nodo primario deja de tener disponibilidad, el árbitro asigna al nodo secundario como primario que es quien tiene todo el respaldo del nodo primario. la principal diferencia con mongodump es que replica-set manda un ping cada 2s y va restaurando la información, replica-set es una arquitectura robusta, mientras que a mongodump se lo debe llamar para generar la copia de respaldo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "la arquitectura replica-set consiste en crear copias de seguridad y respaldo de la información almacenada en los nodos, los nodos necesarios para una configuración mínima son tres: dos nodos donde el primer nodo es el nodo primario y el segundo nodo replica toda la información del nodo primario, y un tercer nodo que es el arbitro el cuál decide que nodo debe ser el nodo primario. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "la arquitectura replica-set consiste en crear copias de seguridad y respaldo de la información almacenada en los nodos, los nodos necesarios para una configuración mínima son tres: dos nodos donde el primer nodo es el nodo primario y el segundo nodo replica toda la información del nodo primario, y un tercer nodo que es el arbitro el cuál decide que nodo debe ser el nodo primario. cuando el nodo primario deja de tener disponibilidad, el árbitro asigna al nodo secundario como primario que es quien tiene todo el respaldo del nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "la arquitectura replica-set consiste en crear copias de seguridad y respaldo de la información almacenada en los nodos, los nodos necesarios para una configuración mínima son tres: dos nodos donde el primer nodo es el nodo primario y el segundo nodo replica toda la información del nodo primario, y un tercer nodo que es el arbitro el cuál decide que nodo debe ser el nodo primario. cuando el nodo primario deja de tener disponibilidad, el árbitro asigna al nodo secundario como primario que es quien tiene todo el respaldo del nodo primario. la principal diferencia con mongodump es que replica-set manda un ping cada 2s y va restaurando la información, replica-set es una arquitectura robusta, mientras que a mongodump se lo debe llamar para generar la copia de respaldo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "la principal diferencia con mongodump es que replica-set manda un ping cada 2s y va restaurando la información, replica-set es una arquitectura robusta, mientras que a mongodump se lo debe llamar para generar la copia de respaldo. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.819,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, el árbitro asigna al nodo secundario como primario que es quien tiene todo el respaldo del nodo primario. la principal diferencia con mongodump es que replica-set manda un ping cada 2s y va restaurando la información, replica-set es una arquitectura robusta, mientras que a mongodump se lo debe llamar para generar la copia de respaldo. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.847,
                                            "Frase": "la arquitectura replica-set consiste en crear copias de seguridad y respaldo de la información almacenada en los nodos, los nodos necesarios para una configuración mínima son tres: dos nodos donde el primer nodo es el nodo primario y el segundo nodo replica toda la información del nodo primario, y un tercer nodo que es el arbitro el cuál decide que nodo debe ser el nodo primario. cuando el nodo primario deja de tener disponibilidad, el árbitro asigna al nodo secundario como primario que es quien tiene todo el respaldo del nodo primario. la principal diferencia con mongodump es que replica-set manda un ping cada 2s y va restaurando la información, replica-set es una arquitectura robusta, mientras que a mongodump se lo debe llamar para generar la copia de respaldo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "la arquitectura replica-set consiste en crear copias de seguridad y respaldo de la información almacenada en los nodos, los nodos necesarios para una configuración mínima son tres: dos nodos donde el primer nodo es el nodo primario y el segundo nodo replica toda la información del nodo primario, y un tercer nodo que es el arbitro el cuál decide que nodo debe ser el nodo primario. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "la arquitectura replica-set consiste en crear copias de seguridad y respaldo de la información almacenada en los nodos, los nodos necesarios para una configuración mínima son tres: dos nodos donde el primer nodo es el nodo primario y el segundo nodo replica toda la información del nodo primario, y un tercer nodo que es el arbitro el cuál decide que nodo debe ser el nodo primario. cuando el nodo primario deja de tener disponibilidad, el árbitro asigna al nodo secundario como primario que es quien tiene todo el respaldo del nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "la arquitectura replica-set consiste en crear copias de seguridad y respaldo de la información almacenada en los nodos, los nodos necesarios para una configuración mínima son tres: dos nodos donde el primer nodo es el nodo primario y el segundo nodo replica toda la información del nodo primario, y un tercer nodo que es el arbitro el cuál decide que nodo debe ser el nodo primario. cuando el nodo primario deja de tener disponibilidad, el árbitro asigna al nodo secundario como primario que es quien tiene todo el respaldo del nodo primario. la principal diferencia con mongodump es que replica-set manda un ping cada 2s y va restaurando la información, replica-set es una arquitectura robusta, mientras que a mongodump se lo debe llamar para generar la copia de respaldo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "bc0ec2cd7a91c72da74e5d7a4ec67a9e": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. se puede ejecutar sin argumentos y esto creará una copia de seguridad en la base de datos de la carpeta dump/ siempre y cuando la carpeta se encuentre en el sistema local. ",
                                            "Lineas": "Lines 6 - 9"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.859,
                                            "Frase": "el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. se puede ejecutar sin argumentos y esto creará una copia de seguridad en la base de datos de la carpeta dump/ siempre y cuando la carpeta se encuentre en el sistema local. ",
                                            "Lineas": "Lines 5 - 9"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.85,
                                            "Frase": "la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. se puede ejecutar sin argumentos y esto creará una copia de seguridad en la base de datos de la carpeta dump/ siempre y cuando la carpeta se encuentre en el sistema local. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.86,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.865,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. se puede ejecutar sin argumentos y esto creará una copia de seguridad en la base de datos de la carpeta dump/ siempre y cuando la carpeta se encuentre en el sistema local. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.773,
                                            "Frase": "una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.792,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.788,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.784,
                                            "Frase": "en mongodb se ha hecho un refinamiento sobre el modelo maestro-esclavo y se le ha definido como conjunto de replicas o replica-set. este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.767,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.782,
                                            "Frase": "una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.784,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.783,
                                            "Frase": "en mongodb se ha hecho un refinamiento sobre el modelo maestro-esclavo y se le ha definido como conjunto de replicas o replica-set. este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "en mongodb se ha hecho un refinamiento sobre el modelo maestro-esclavo y se le ha definido como conjunto de replicas o replica-set. este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. se puede ejecutar sin argumentos y esto creará una copia de seguridad en la base de datos de la carpeta dump/ siempre y cuando la carpeta se encuentre en el sistema local. ",
                                            "Lineas": "Lines 8 - 9"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. se puede ejecutar sin argumentos y esto creará una copia de seguridad en la base de datos de la carpeta dump/ siempre y cuando la carpeta se encuentre en el sistema local. ",
                                            "Lineas": "Lines 7 - 9"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. se puede ejecutar sin argumentos y esto creará una copia de seguridad en la base de datos de la carpeta dump/ siempre y cuando la carpeta se encuentre en el sistema local. ",
                                            "Lineas": "Lines 6 - 9"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. se puede ejecutar sin argumentos y esto creará una copia de seguridad en la base de datos de la carpeta dump/ siempre y cuando la carpeta se encuentre en el sistema local. ",
                                            "Lineas": "Lines 5 - 9"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. se puede ejecutar sin argumentos y esto creará una copia de seguridad en la base de datos de la carpeta dump/ siempre y cuando la carpeta se encuentre en el sistema local. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. se puede ejecutar sin argumentos y esto creará una copia de seguridad en la base de datos de la carpeta dump/ siempre y cuando la carpeta se encuentre en el sistema local. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "este permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar replicaciones de datos en mongodb. una característica principal es que no definen un nodo maestro estéticamente, sino que es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada para un replica-set consiste en tres nodos: dos serán instancias de mongodb con acceso a los datos; uno de estos será el nodo primario mientras que el otro replicará las operaciones que se realicen sobre el primario. el tercer nodo se denomina arbitro, solamente se utiliza para decidir que nodo debe ser asignado como primario. en caso de pérdida, el nodo secundario pasara a ser el primario ya que ha realizado las réplicas de todas las operaciones del nodo primario. la principal diferencia con mongodump es que hace una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución. esto permite crear una copia de seguridad para un servidor, una base de datos o una colección completa. se puede ejecutar sin argumentos y esto creará una copia de seguridad en la base de datos de la carpeta dump/ siempre y cuando la carpeta se encuentre en el sistema local. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "eb9121746ee55b359a9eefa8f6378365": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.873,
                                            "Frase": "la arquitectura réplica-set se basa en la redundancia de datos y el incremento de su disponibilidad. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "la arquitectura réplica-set se basa en la redundancia de datos y el incremento de su disponibilidad. sigue un modelo maestro-esclavo que fue mejorado. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. la configuración mínima de un réplica-set se consigue con tres nodos. la principal diferencia es que mongodump realiza copias de seguridad conectándose a una instancia mongod. ",
                                            "Lineas": "Lines 8 - 10"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "la arquitectura réplica-set se basa en la redundancia de datos y el incremento de su disponibilidad. sigue un modelo maestro-esclavo que fue mejorado. la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "la arquitectura réplica-set se basa en la redundancia de datos y el incremento de su disponibilidad. sigue un modelo maestro-esclavo que fue mejorado. la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "la arquitectura réplica-set se basa en la redundancia de datos y el incremento de su disponibilidad. sigue un modelo maestro-esclavo que fue mejorado. la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.852,
                                            "Frase": "la arquitectura réplica-set se basa en la redundancia de datos y el incremento de su disponibilidad. sigue un modelo maestro-esclavo que fue mejorado. la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. los nodos entre ellos se envían pings cada dos segundos para saber la accesibilidad en cada instante, lo que permite al nodo árbitro elegir un nuevo nodo principal en caso de fallo. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.862,
                                            "Frase": "la arquitectura réplica-set se basa en la redundancia de datos y el incremento de su disponibilidad. sigue un modelo maestro-esclavo que fue mejorado. la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. los nodos entre ellos se envían pings cada dos segundos para saber la accesibilidad en cada instante, lo que permite al nodo árbitro elegir un nuevo nodo principal en caso de fallo. el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.768,
                                            "Frase": "la configuración mínima de un réplica-set se consigue con tres nodos. ",
                                            "Lineas": "Line 9"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.817,
                                            "Frase": "la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.793,
                                            "Frase": "la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.766,
                                            "Frase": "sigue un modelo maestro-esclavo que fue mejorado. la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.77,
                                            "Frase": "sigue un modelo maestro-esclavo que fue mejorado. la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.77,
                                            "Frase": "esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. los nodos entre ellos se envían pings cada dos segundos para saber la accesibilidad en cada instante, lo que permite al nodo árbitro elegir un nuevo nodo principal en caso de fallo. el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. la configuración mínima de un réplica-set se consigue con tres nodos. la principal diferencia es que mongodump realiza copias de seguridad conectándose a una instancia mongod. ",
                                            "Lineas": "Lines 5 - 10"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.768,
                                            "Frase": "la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. los nodos entre ellos se envían pings cada dos segundos para saber la accesibilidad en cada instante, lo que permite al nodo árbitro elegir un nuevo nodo principal en caso de fallo. el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. la configuración mínima de un réplica-set se consigue con tres nodos. la principal diferencia es que mongodump realiza copias de seguridad conectándose a una instancia mongod. ",
                                            "Lineas": "Lines 4 - 10"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.755,
                                            "Frase": "sigue un modelo maestro-esclavo que fue mejorado. la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. los nodos entre ellos se envían pings cada dos segundos para saber la accesibilidad en cada instante, lo que permite al nodo árbitro elegir un nuevo nodo principal en caso de fallo. el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. la configuración mínima de un réplica-set se consigue con tres nodos. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "los nodos entre ellos se envían pings cada dos segundos para saber la accesibilidad en cada instante, lo que permite al nodo árbitro elegir un nuevo nodo principal en caso de fallo. el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. los nodos entre ellos se envían pings cada dos segundos para saber la accesibilidad en cada instante, lo que permite al nodo árbitro elegir un nuevo nodo principal en caso de fallo. el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. los nodos entre ellos se envían pings cada dos segundos para saber la accesibilidad en cada instante, lo que permite al nodo árbitro elegir un nuevo nodo principal en caso de fallo. el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. los nodos entre ellos se envían pings cada dos segundos para saber la accesibilidad en cada instante, lo que permite al nodo árbitro elegir un nuevo nodo principal en caso de fallo. el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. los nodos entre ellos se envían pings cada dos segundos para saber la accesibilidad en cada instante, lo que permite al nodo árbitro elegir un nuevo nodo principal en caso de fallo. el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. la configuración mínima de un réplica-set se consigue con tres nodos. la principal diferencia es que mongodump realiza copias de seguridad conectándose a una instancia mongod. ",
                                            "Lineas": "Lines 5 - 10"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "sigue un modelo maestro-esclavo que fue mejorado. la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. los nodos entre ellos se envían pings cada dos segundos para saber la accesibilidad en cada instante, lo que permite al nodo árbitro elegir un nuevo nodo principal en caso de fallo. el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "sigue un modelo maestro-esclavo que fue mejorado. la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. los nodos entre ellos se envían pings cada dos segundos para saber la accesibilidad en cada instante, lo que permite al nodo árbitro elegir un nuevo nodo principal en caso de fallo. el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. la configuración mínima de un réplica-set se consigue con tres nodos. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "sigue un modelo maestro-esclavo que fue mejorado. la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "sigue un modelo maestro-esclavo que fue mejorado. la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. la configuración mínima de un réplica-set se consigue con tres nodos. la principal diferencia es que mongodump realiza copias de seguridad conectándose a una instancia mongod. si hay algún fallo y necesitamos recuperar los datos, estos puede que no estén actualizados a la última versión. por el contrario, la arquitectura réplica-set mantiene los datos actualizados en todo momento. ",
                                            "Lineas": "Lines 8 - 12"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "los nodos entre ellos se envían pings cada dos segundos para saber la accesibilidad en cada instante, lo que permite al nodo árbitro elegir un nuevo nodo principal en caso de fallo. el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. la configuración mínima de un réplica-set se consigue con tres nodos. la principal diferencia es que mongodump realiza copias de seguridad conectándose a una instancia mongod. si hay algún fallo y necesitamos recuperar los datos, estos puede que no estén actualizados a la última versión. por el contrario, la arquitectura réplica-set mantiene los datos actualizados en todo momento. ",
                                            "Lineas": "Lines 7 - 12"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "la arquitectura réplica-set se basa en la redundancia de datos y el incremento de su disponibilidad. sigue un modelo maestro-esclavo que fue mejorado. la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. los nodos entre ellos se envían pings cada dos segundos para saber la accesibilidad en cada instante, lo que permite al nodo árbitro elegir un nuevo nodo principal en caso de fallo. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. los nodos entre ellos se envían pings cada dos segundos para saber la accesibilidad en cada instante, lo que permite al nodo árbitro elegir un nuevo nodo principal en caso de fallo. el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. la configuración mínima de un réplica-set se consigue con tres nodos. la principal diferencia es que mongodump realiza copias de seguridad conectándose a una instancia mongod. ",
                                            "Lineas": "Lines 3 - 10"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. la configuración mínima de un réplica-set se consigue con tres nodos. la principal diferencia es que mongodump realiza copias de seguridad conectándose a una instancia mongod. ",
                                            "Lineas": "Lines 8 - 10"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "sigue un modelo maestro-esclavo que fue mejorado. la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "sigue un modelo maestro-esclavo que fue mejorado. la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "la arquitectura réplica-set se basa en la redundancia de datos y el incremento de su disponibilidad. sigue un modelo maestro-esclavo que fue mejorado. la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. los nodos entre ellos se envían pings cada dos segundos para saber la accesibilidad en cada instante, lo que permite al nodo árbitro elegir un nuevo nodo principal en caso de fallo. el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. la configuración mínima de un réplica-set se consigue con tres nodos. la principal diferencia es que mongodump realiza copias de seguridad conectándose a una instancia mongod. ",
                                            "Lineas": "Lines 4 - 10"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "la arquitectura réplica-set se basa en la redundancia de datos y el incremento de su disponibilidad. sigue un modelo maestro-esclavo que fue mejorado. la instancia maestra recibe las operaciones de escritura y estas se aplican en las instancias dependiente para mantener la consistencia de los datos. la mejora de este modelo permite la recuperación a fallos de forma automática. esto ocurre porque habrá un nodo principal, nodos secundarios y un nodo árbitro. la asignación del nodo principal se realiza al azar y viene determinada por el nodo árbitro. los nodos entre ellos se envían pings cada dos segundos para saber la accesibilidad en cada instante, lo que permite al nodo árbitro elegir un nuevo nodo principal en caso de fallo. el resto de nodos replicarán las operaciones realizadas sobre el primario, aumentando así la consistencia de los datos. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "ae794d3bacbf6e4d1400ed681e9cd8dd": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.858,
                                            "Frase": "con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "funciones replica-set: redundancia de datos e incremento de la disponibilidad de los mismos. es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "funciones replica-set: redundancia de datos e incremento de la disponibilidad de los mismos. es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "funciones replica-set: redundancia de datos e incremento de la disponibilidad de los mismos. es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "funciones replica-set: redundancia de datos e incremento de la disponibilidad de los mismos. es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.863,
                                            "Frase": "funciones replica-set: redundancia de datos e incremento de la disponibilidad de los mismos. es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.868,
                                            "Frase": "funciones replica-set: redundancia de datos e incremento de la disponibilidad de los mismos. es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. los replica-set no asignan un nodo como maestro de manera estática, sino que es por azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.721,
                                            "Frase": "los replica-set no asignan un nodo como maestro de manera estática, sino que es por azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.795,
                                            "Frase": "con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.766,
                                            "Frase": "es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.752,
                                            "Frase": "funciones replica-set: redundancia de datos e incremento de la disponibilidad de los mismos. es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.781,
                                            "Frase": "configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. los replica-set no asignan un nodo como maestro de manera estática, sino que es por azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.774,
                                            "Frase": "con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. los replica-set no asignan un nodo como maestro de manera estática, sino que es por azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.76,
                                            "Frase": "es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. los replica-set no asignan un nodo como maestro de manera estática, sino que es por azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.759,
                                            "Frase": "funciones replica-set: redundancia de datos e incremento de la disponibilidad de los mismos. es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. los replica-set no asignan un nodo como maestro de manera estática, sino que es por azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.844,
                                            "Frase": "es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. los replica-set no asignan un nodo como maestro de manera estática, sino que es por azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. los replica-set no asignan un nodo como maestro de manera estática, sino que es por azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. los replica-set no asignan un nodo como maestro de manera estática, sino que es por azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. los replica-set no asignan un nodo como maestro de manera estática, sino que es por azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. los replica-set no asignan un nodo como maestro de manera estática, sino que es por azar y se va actualizando en función de la disponibilidad de los nodos. entre ellos existe una comunicación continua para conocer que nodos están o no accesibles con lo que, si el nodo primario deja de tener disponibilidad, otro nodo sería asignado como primario. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "la principal diferencia con mongodump es que con replica-set las copias de datos se realizan de manera automática y segura. ",
                                            "Lineas": "Line 10"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "funciones replica-set: redundancia de datos e incremento de la disponibilidad de los mismos. es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "funciones replica-set: redundancia de datos e incremento de la disponibilidad de los mismos. es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "funciones replica-set: redundancia de datos e incremento de la disponibilidad de los mismos. es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "funciones replica-set: redundancia de datos e incremento de la disponibilidad de los mismos. es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. los replica-set no asignan un nodo como maestro de manera estática, sino que es por azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "funciones replica-set: redundancia de datos e incremento de la disponibilidad de los mismos. es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. los replica-set no asignan un nodo como maestro de manera estática, sino que es por azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "los replica-set no asignan un nodo como maestro de manera estática, sino que es por azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "funciones replica-set: redundancia de datos e incremento de la disponibilidad de los mismos. es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. los replica-set no asignan un nodo como maestro de manera estática, sino que es por azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. los replica-set no asignan un nodo como maestro de manera estática, sino que es por azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "funciones replica-set: redundancia de datos e incremento de la disponibilidad de los mismos. es un refinamiento del modelo maestro-esclavo donde las instancias maestras reciben las operaciones de escritura que manda el cliente y estas se aplican en las instancias dependientes para mantener la consistencia de los datos. con este método tenemos una recuperación de los datos a fallos de manera automática siendo la forma recomendada para realizarla replicación de datos en mongodb. configuración mínima: 3 nodos (el servidor primario, el secundario y un árbitro). los dos primeros serán instancias de mongod con acceso a datos. el nodo secundario replicará las operaciones que se van realizando en el primario. el árbitro es el que decide qué nodo será asignado como primario. los replica-set no asignan un nodo como maestro de manera estática, sino que es por azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "b5372c107dc97e91722398e3a9b57f08": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.856,
                                            "Frase": "cuando hablamos de replica-set, nos referimos a la generación de una bbdd a partir de un volcado de datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.866,
                                            "Frase": "aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.867,
                                            "Frase": "asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. por último, ofrece balanceo de carga, ya que el primario propaga los datos pero la lectura puede ser en el primario o en los secundarios. ",
                                            "Lineas": "Lines 6 - 9"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "replica set nos permite tener una mayor disponibilidad, ya que en el caso de fallo del servidor primario, es decir, dejara de enviar heartbeats, uno de los secundarios pasaría a ser primario. la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.859,
                                            "Frase": "replica set nos permite tener una mayor disponibilidad, ya que en el caso de fallo del servidor primario, es decir, dejara de enviar heartbeats, uno de los secundarios pasaría a ser primario. la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. por último, ofrece balanceo de carga, ya que el primario propaga los datos pero la lectura puede ser en el primario o en los secundarios. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.857,
                                            "Frase": "replica set nos permite tener una mayor disponibilidad, ya que en el caso de fallo del servidor primario, es decir, dejara de enviar heartbeats, uno de los secundarios pasaría a ser primario. la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. por último, ofrece balanceo de carga, ya que el primario propaga los datos pero la lectura puede ser en el primario o en los secundarios. este proceso es transparente al cliente. ",
                                            "Lineas": "Lines 4 - 10"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "cuando hablamos de replica-set, nos referimos a la generación de una bbdd a partir de un volcado de datos. esto implica que mínimo tienen que haber 2 servidores (puede que haya 3 o más). en el caso de que hubieran tres el primario es donde se escribiría y los otros dos (secundarios) recibirían actualizaciones inmediatas de los datos, es decir se realizan replicas inmediatas. replica set nos permite tener una mayor disponibilidad, ya que en el caso de fallo del servidor primario, es decir, dejara de enviar heartbeats, uno de los secundarios pasaría a ser primario. la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.785,
                                            "Frase": "aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.823,
                                            "Frase": "aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.808,
                                            "Frase": "la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.817,
                                            "Frase": "la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.811,
                                            "Frase": "replica set nos permite tener una mayor disponibilidad, ya que en el caso de fallo del servidor primario, es decir, dejara de enviar heartbeats, uno de los secundarios pasaría a ser primario. la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.81,
                                            "Frase": "la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. por último, ofrece balanceo de carga, ya que el primario propaga los datos pero la lectura puede ser en el primario o en los secundarios. este proceso es transparente al cliente. ",
                                            "Lineas": "Lines 5 - 10"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.806,
                                            "Frase": "replica set nos permite tener una mayor disponibilidad, ya que en el caso de fallo del servidor primario, es decir, dejara de enviar heartbeats, uno de los secundarios pasaría a ser primario. la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. por último, ofrece balanceo de carga, ya que el primario propaga los datos pero la lectura puede ser en el primario o en los secundarios. este proceso es transparente al cliente. ",
                                            "Lineas": "Lines 4 - 10"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.799,
                                            "Frase": "cuando hablamos de replica-set, nos referimos a la generación de una bbdd a partir de un volcado de datos. esto implica que mínimo tienen que haber 2 servidores (puede que haya 3 o más). en el caso de que hubieran tres el primario es donde se escribiría y los otros dos (secundarios) recibirían actualizaciones inmediatas de los datos, es decir se realizan replicas inmediatas. replica set nos permite tener una mayor disponibilidad, ya que en el caso de fallo del servidor primario, es decir, dejara de enviar heartbeats, uno de los secundarios pasaría a ser primario. la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "replica set nos permite tener una mayor disponibilidad, ya que en el caso de fallo del servidor primario, es decir, dejara de enviar heartbeats, uno de los secundarios pasaría a ser primario. la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. por último, ofrece balanceo de carga, ya que el primario propaga los datos pero la lectura puede ser en el primario o en los secundarios. este proceso es transparente al cliente. ",
                                            "Lineas": "Lines 8 - 10"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. por último, ofrece balanceo de carga, ya que el primario propaga los datos pero la lectura puede ser en el primario o en los secundarios. ",
                                            "Lineas": "Lines 5 - 9"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. por último, ofrece balanceo de carga, ya que el primario propaga los datos pero la lectura puede ser en el primario o en los secundarios. este proceso es transparente al cliente. ",
                                            "Lineas": "Lines 5 - 10"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "replica set nos permite tener una mayor disponibilidad, ya que en el caso de fallo del servidor primario, es decir, dejara de enviar heartbeats, uno de los secundarios pasaría a ser primario. la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. por último, ofrece balanceo de carga, ya que el primario propaga los datos pero la lectura puede ser en el primario o en los secundarios. este proceso es transparente al cliente. ",
                                            "Lineas": "Lines 4 - 10"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "en el caso de que hubieran tres el primario es donde se escribiría y los otros dos (secundarios) recibirían actualizaciones inmediatas de los datos, es decir se realizan replicas inmediatas. replica set nos permite tener una mayor disponibilidad, ya que en el caso de fallo del servidor primario, es decir, dejara de enviar heartbeats, uno de los secundarios pasaría a ser primario. la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. por último, ofrece balanceo de carga, ya que el primario propaga los datos pero la lectura puede ser en el primario o en los secundarios. este proceso es transparente al cliente. ",
                                            "Lineas": "Lines 3 - 10"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. por último, ofrece balanceo de carga, ya que el primario propaga los datos pero la lectura puede ser en el primario o en los secundarios. ",
                                            "Lineas": "Lines 6 - 9"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. por último, ofrece balanceo de carga, ya que el primario propaga los datos pero la lectura puede ser en el primario o en los secundarios. este proceso es transparente al cliente. ",
                                            "Lineas": "Lines 6 - 10"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "replica set nos permite tener una mayor disponibilidad, ya que en el caso de fallo del servidor primario, es decir, dejara de enviar heartbeats, uno de los secundarios pasaría a ser primario. la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. por último, ofrece balanceo de carga, ya que el primario propaga los datos pero la lectura puede ser en el primario o en los secundarios. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "cuando hablamos de replica-set, nos referimos a la generación de una bbdd a partir de un volcado de datos. esto implica que mínimo tienen que haber 2 servidores (puede que haya 3 o más). en el caso de que hubieran tres el primario es donde se escribiría y los otros dos (secundarios) recibirían actualizaciones inmediatas de los datos, es decir se realizan replicas inmediatas. replica set nos permite tener una mayor disponibilidad, ya que en el caso de fallo del servidor primario, es decir, dejara de enviar heartbeats, uno de los secundarios pasaría a ser primario. la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "cuando hablamos de replica-set, nos referimos a la generación de una bbdd a partir de un volcado de datos. esto implica que mínimo tienen que haber 2 servidores (puede que haya 3 o más). en el caso de que hubieran tres el primario es donde se escribiría y los otros dos (secundarios) recibirían actualizaciones inmediatas de los datos, es decir se realizan replicas inmediatas. replica set nos permite tener una mayor disponibilidad, ya que en el caso de fallo del servidor primario, es decir, dejara de enviar heartbeats, uno de los secundarios pasaría a ser primario. la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.957,
                                            "Frase": "la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.958,
                                            "Frase": "replica set nos permite tener una mayor disponibilidad, ya que en el caso de fallo del servidor primario, es decir, dejara de enviar heartbeats, uno de los secundarios pasaría a ser primario. la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "replica set nos permite tener una mayor disponibilidad, ya que en el caso de fallo del servidor primario, es decir, dejara de enviar heartbeats, uno de los secundarios pasaría a ser primario. la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. por último, ofrece balanceo de carga, ya que el primario propaga los datos pero la lectura puede ser en el primario o en los secundarios. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "replica set nos permite tener una mayor disponibilidad, ya que en el caso de fallo del servidor primario, es decir, dejara de enviar heartbeats, uno de los secundarios pasaría a ser primario. la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. por último, ofrece balanceo de carga, ya que el primario propaga los datos pero la lectura puede ser en el primario o en los secundarios. este proceso es transparente al cliente. ",
                                            "Lineas": "Lines 4 - 10"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "cuando hablamos de replica-set, nos referimos a la generación de una bbdd a partir de un volcado de datos. esto implica que mínimo tienen que haber 2 servidores (puede que haya 3 o más). en el caso de que hubieran tres el primario es donde se escribiría y los otros dos (secundarios) recibirían actualizaciones inmediatas de los datos, es decir se realizan replicas inmediatas. replica set nos permite tener una mayor disponibilidad, ya que en el caso de fallo del servidor primario, es decir, dejara de enviar heartbeats, uno de los secundarios pasaría a ser primario. la elección se hace a través de un proceso de votación y en el caso de que hubiera empate, sería el nodo árbitro quien decidiría quien es el primario. asimismo, ofrece respaldo porque ante una caída del primario siempre se tendrá una copia de los datos. aunque no nos protege de la inserción o borrado de datos, por ese motivo es importante contar con un dump. mongodump realiza un volcado de datos y se almacena en el disco duro, generando archivos bson o json de la bbdd. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "b8af34d45326efd631958c2e4c4ca125": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.892,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.865,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. es importante tener en cuenta la diferencia con mongodump. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. es importante tener en cuenta la diferencia con mongodump. mongodumop realiza una copia de seguridad fija (se puede hacer símil a una foto), mientras que el replica-set sufre cambios en streaming. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.871,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. es importante tener en cuenta la diferencia con mongodump. mongodumop realiza una copia de seguridad fija (se puede hacer símil a una foto), mientras que el replica-set sufre cambios en streaming. se actualiza constantemente. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.836,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.813,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.811,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.818,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. es importante tener en cuenta la diferencia con mongodump. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.818,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. es importante tener en cuenta la diferencia con mongodump. mongodumop realiza una copia de seguridad fija (se puede hacer símil a una foto), mientras que el replica-set sufre cambios en streaming. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.812,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. es importante tener en cuenta la diferencia con mongodump. mongodumop realiza una copia de seguridad fija (se puede hacer símil a una foto), mientras que el replica-set sufre cambios en streaming. se actualiza constantemente. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. es importante tener en cuenta la diferencia con mongodump. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. es importante tener en cuenta la diferencia con mongodump. mongodumop realiza una copia de seguridad fija (se puede hacer símil a una foto), mientras que el replica-set sufre cambios en streaming. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. es importante tener en cuenta la diferencia con mongodump. mongodumop realiza una copia de seguridad fija (se puede hacer símil a una foto), mientras que el replica-set sufre cambios en streaming. se actualiza constantemente. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. es importante tener en cuenta la diferencia con mongodump. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. es importante tener en cuenta la diferencia con mongodump. mongodumop realiza una copia de seguridad fija (se puede hacer símil a una foto), mientras que el replica-set sufre cambios en streaming. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. es importante tener en cuenta la diferencia con mongodump. mongodumop realiza una copia de seguridad fija (se puede hacer símil a una foto), mientras que el replica-set sufre cambios en streaming. se actualiza constantemente. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.965,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.961,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. es importante tener en cuenta la diferencia con mongodump. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.959,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. es importante tener en cuenta la diferencia con mongodump. mongodumop realiza una copia de seguridad fija (se puede hacer símil a una foto), mientras que el replica-set sufre cambios en streaming. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "la función de un replica-set es permitir la redundancia de datos, incrementando así la disponibilidad siguiendo un modelo maestro-esclavo. para una mínima configuración es necesario que existan 3 nodos, uno principal y dos secundarios (el nodo principal manda replicas a los nodos secundarios y así se consigue una copia de seguridad en caso de caída del principal) uno de los secundarios tomará el papel de árbitro en el caso de que haya una caída, ya que cuando el nodo principal deja de tener disponibilidad, será uno de los nodos secundarios el que pase al puesto de principal. esto puede dar lugar a empate, es por ello que se establece un árbitro. es importante tener en cuenta la diferencia con mongodump. mongodumop realiza una copia de seguridad fija (se puede hacer símil a una foto), mientras que el replica-set sufre cambios en streaming. se actualiza constantemente. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "915ceea06887d6f09ba9b6428e304511": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "de esta manera, se dispone de la información de la base de dato totalmente actualizada en el caso de que algún nodo deje de estar disponible. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "mongodump realiza una foto o instantánea de la base de datos, mientras que en un conjunto replica-set cualquier modificación de los datos se replica en los demás nodos. de esta manera, se dispone de la información de la base de dato totalmente actualizada en el caso de que algún nodo deje de estar disponible. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.866,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.862,
                                            "Frase": "la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. además, se consigue mantener una consistencia entre los nodos y existe un balanceo de carga (las escrituras solo se realizan en el nodo primario). mongodump realiza una foto o instantánea de la base de datos, mientras que en un conjunto replica-set cualquier modificación de los datos se replica en los demás nodos. de esta manera, se dispone de la información de la base de dato totalmente actualizada en el caso de que algún nodo deje de estar disponible. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.87,
                                            "Frase": "además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. además, se consigue mantener una consistencia entre los nodos y existe un balanceo de carga (las escrituras solo se realizan en el nodo primario). mongodump realiza una foto o instantánea de la base de datos, mientras que en un conjunto replica-set cualquier modificación de los datos se replica en los demás nodos. de esta manera, se dispone de la información de la base de dato totalmente actualizada en el caso de que algún nodo deje de estar disponible. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. además, se consigue mantener una consistencia entre los nodos y existe un balanceo de carga (las escrituras solo se realizan en el nodo primario). mongodump realiza una foto o instantánea de la base de datos, mientras que en un conjunto replica-set cualquier modificación de los datos se replica en los demás nodos. de esta manera, se dispone de la información de la base de dato totalmente actualizada en el caso de que algún nodo deje de estar disponible. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.857,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.836,
                                            "Frase": "además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.83,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.809,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.804,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. además, se consigue mantener una consistencia entre los nodos y existe un balanceo de carga (las escrituras solo se realizan en el nodo primario). ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.791,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. además, se consigue mantener una consistencia entre los nodos y existe un balanceo de carga (las escrituras solo se realizan en el nodo primario). mongodump realiza una foto o instantánea de la base de datos, mientras que en un conjunto replica-set cualquier modificación de los datos se replica en los demás nodos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.789,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. además, se consigue mantener una consistencia entre los nodos y existe un balanceo de carga (las escrituras solo se realizan en el nodo primario). mongodump realiza una foto o instantánea de la base de datos, mientras que en un conjunto replica-set cualquier modificación de los datos se replica en los demás nodos. de esta manera, se dispone de la información de la base de dato totalmente actualizada en el caso de que algún nodo deje de estar disponible. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. además, se consigue mantener una consistencia entre los nodos y existe un balanceo de carga (las escrituras solo se realizan en el nodo primario). ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. además, se consigue mantener una consistencia entre los nodos y existe un balanceo de carga (las escrituras solo se realizan en el nodo primario). mongodump realiza una foto o instantánea de la base de datos, mientras que en un conjunto replica-set cualquier modificación de los datos se replica en los demás nodos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. además, se consigue mantener una consistencia entre los nodos y existe un balanceo de carga (las escrituras solo se realizan en el nodo primario). mongodump realiza una foto o instantánea de la base de datos, mientras que en un conjunto replica-set cualquier modificación de los datos se replica en los demás nodos. de esta manera, se dispone de la información de la base de dato totalmente actualizada en el caso de que algún nodo deje de estar disponible. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "mongodump realiza una foto o instantánea de la base de datos, mientras que en un conjunto replica-set cualquier modificación de los datos se replica en los demás nodos. de esta manera, se dispone de la información de la base de dato totalmente actualizada en el caso de que algún nodo deje de estar disponible. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "además, se consigue mantener una consistencia entre los nodos y existe un balanceo de carga (las escrituras solo se realizan en el nodo primario). mongodump realiza una foto o instantánea de la base de datos, mientras que en un conjunto replica-set cualquier modificación de los datos se replica en los demás nodos. de esta manera, se dispone de la información de la base de dato totalmente actualizada en el caso de que algún nodo deje de estar disponible. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. además, se consigue mantener una consistencia entre los nodos y existe un balanceo de carga (las escrituras solo se realizan en el nodo primario). mongodump realiza una foto o instantánea de la base de datos, mientras que en un conjunto replica-set cualquier modificación de los datos se replica en los demás nodos. de esta manera, se dispone de la información de la base de dato totalmente actualizada en el caso de que algún nodo deje de estar disponible. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. además, se consigue mantener una consistencia entre los nodos y existe un balanceo de carga (las escrituras solo se realizan en el nodo primario). mongodump realiza una foto o instantánea de la base de datos, mientras que en un conjunto replica-set cualquier modificación de los datos se replica en los demás nodos. de esta manera, se dispone de la información de la base de dato totalmente actualizada en el caso de que algún nodo deje de estar disponible. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. además, se consigue mantener una consistencia entre los nodos y existe un balanceo de carga (las escrituras solo se realizan en el nodo primario). mongodump realiza una foto o instantánea de la base de datos, mientras que en un conjunto replica-set cualquier modificación de los datos se replica en los demás nodos. de esta manera, se dispone de la información de la base de dato totalmente actualizada en el caso de que algún nodo deje de estar disponible. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. además, se consigue mantener una consistencia entre los nodos y existe un balanceo de carga (las escrituras solo se realizan en el nodo primario). mongodump realiza una foto o instantánea de la base de datos, mientras que en un conjunto replica-set cualquier modificación de los datos se replica en los demás nodos. de esta manera, se dispone de la información de la base de dato totalmente actualizada en el caso de que algún nodo deje de estar disponible. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.959,
                                            "Frase": "además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.966,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.966,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. además, se consigue mantener una consistencia entre los nodos y existe un balanceo de carga (las escrituras solo se realizan en el nodo primario). ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. además, se consigue mantener una consistencia entre los nodos y existe un balanceo de carga (las escrituras solo se realizan en el nodo primario). mongodump realiza una foto o instantánea de la base de datos, mientras que en un conjunto replica-set cualquier modificación de los datos se replica en los demás nodos. de esta manera, se dispone de la información de la base de dato totalmente actualizada en el caso de que algún nodo deje de estar disponible. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "el replica-set de mongodb es una medida de respaldo que permite tener los datos duplicados en varios nodos. además, es un refinamiento del modelo maestro-esclavo, con la diferencia principal de que no existe un nodo maestro estático como tal. la configuración mínima de esta arquitectura contendrá tres nodos (uno se asignará como primario de manera aleatoria, uno de los secundarios replicará las modificaciones realizadas y el ultimo nodo será el árbitro). una de las funciones principales de esta arquitectura es la alta disponibilidad de los datos, ya que si un nodo primario deja de tener disponibilidad se elige un nuevo nodo primario mediante una votación. esta disponibilidad se obtiene mediante el envió de ping entre nodos que se realiza cada dos segundos. además, se consigue mantener una consistencia entre los nodos y existe un balanceo de carga (las escrituras solo se realizan en el nodo primario). mongodump realiza una foto o instantánea de la base de datos, mientras que en un conjunto replica-set cualquier modificación de los datos se replica en los demás nodos. de esta manera, se dispone de la información de la base de dato totalmente actualizada en el caso de que algún nodo deje de estar disponible. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "8eaadfcb8902c35bc11e5ae1c8639892": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "la principal diferencia de un replica-set con otra alternativa de respaldo como mongodump (exportación de bases de datos a un fichero) es que automatizamos la recuperación porque con el otro método deberíamos importar los datos manualmente. ",
                                            "Lineas": "Line 9"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "la principal diferencia de un replica-set con otra alternativa de respaldo como mongodump (exportación de bases de datos a un fichero) es que automatizamos la recuperación porque con el otro método deberíamos importar los datos manualmente. además, podríamos sufrir una pérdida de datos dependiendo de cuando se realizo la exportación. ",
                                            "Lineas": "Lines 9 - 10"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. automáticamente, tenemos acceso a las bases de datos pudiendo trabajar con el nuevo principal. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.851,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. automáticamente, tenemos acceso a las bases de datos pudiendo trabajar con el nuevo principal. si se reconectara el nodo caído este pasaría a ser el secundario replicando al principal. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.832,
                                            "Frase": "la principal diferencia de un replica-set con otra alternativa de respaldo como mongodump (exportación de bases de datos a un fichero) es que automatizamos la recuperación porque con el otro método deberíamos importar los datos manualmente. ",
                                            "Lineas": "Line 9"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.8,
                                            "Frase": "si se reconectara el nodo caído este pasaría a ser el secundario replicando al principal. la principal diferencia de un replica-set con otra alternativa de respaldo como mongodump (exportación de bases de datos a un fichero) es que automatizamos la recuperación porque con el otro método deberíamos importar los datos manualmente. ",
                                            "Lineas": "Lines 8 - 9"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.792,
                                            "Frase": "si se reconectara el nodo caído este pasaría a ser el secundario replicando al principal. la principal diferencia de un replica-set con otra alternativa de respaldo como mongodump (exportación de bases de datos a un fichero) es que automatizamos la recuperación porque con el otro método deberíamos importar los datos manualmente. además, podríamos sufrir una pérdida de datos dependiendo de cuando se realizo la exportación. ",
                                            "Lineas": "Lines 8 - 10"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.802,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.796,
                                            "Frase": "la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.803,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.788,
                                            "Frase": "\tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. automáticamente, tenemos acceso a las bases de datos pudiendo trabajar con el nuevo principal. si se reconectara el nodo caído este pasaría a ser el secundario replicando al principal. la principal diferencia de un replica-set con otra alternativa de respaldo como mongodump (exportación de bases de datos a un fichero) es que automatizamos la recuperación porque con el otro método deberíamos importar los datos manualmente. además, podríamos sufrir una pérdida de datos dependiendo de cuando se realizo la exportación. ",
                                            "Lineas": "Lines 4 - 10"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.795,
                                            "Frase": "la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. automáticamente, tenemos acceso a las bases de datos pudiendo trabajar con el nuevo principal. si se reconectara el nodo caído este pasaría a ser el secundario replicando al principal. la principal diferencia de un replica-set con otra alternativa de respaldo como mongodump (exportación de bases de datos a un fichero) es que automatizamos la recuperación porque con el otro método deberíamos importar los datos manualmente. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "\tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.964,
                                            "Frase": "uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.959,
                                            "Frase": "uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. automáticamente, tenemos acceso a las bases de datos pudiendo trabajar con el nuevo principal. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "\tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. automáticamente, tenemos acceso a las bases de datos pudiendo trabajar con el nuevo principal. si se reconectara el nodo caído este pasaría a ser el secundario replicando al principal. la principal diferencia de un replica-set con otra alternativa de respaldo como mongodump (exportación de bases de datos a un fichero) es que automatizamos la recuperación porque con el otro método deberíamos importar los datos manualmente. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.958,
                                            "Frase": "uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. automáticamente, tenemos acceso a las bases de datos pudiendo trabajar con el nuevo principal. si se reconectara el nodo caído este pasaría a ser el secundario replicando al principal. la principal diferencia de un replica-set con otra alternativa de respaldo como mongodump (exportación de bases de datos a un fichero) es que automatizamos la recuperación porque con el otro método deberíamos importar los datos manualmente. ",
                                            "Lineas": "Lines 3 - 9"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. automáticamente, tenemos acceso a las bases de datos pudiendo trabajar con el nuevo principal. si se reconectara el nodo caído este pasaría a ser el secundario replicando al principal. la principal diferencia de un replica-set con otra alternativa de respaldo como mongodump (exportación de bases de datos a un fichero) es que automatizamos la recuperación porque con el otro método deberíamos importar los datos manualmente. además, podríamos sufrir una pérdida de datos dependiendo de cuando se realizo la exportación. ",
                                            "Lineas": "Lines 3 - 10"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "la principal diferencia de un replica-set con otra alternativa de respaldo como mongodump (exportación de bases de datos a un fichero) es que automatizamos la recuperación porque con el otro método deberíamos importar los datos manualmente. además, podríamos sufrir una pérdida de datos dependiendo de cuando se realizo la exportación. ",
                                            "Lineas": "Lines 9 - 10"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. automáticamente, tenemos acceso a las bases de datos pudiendo trabajar con el nuevo principal. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. automáticamente, tenemos acceso a las bases de datos pudiendo trabajar con el nuevo principal. si se reconectara el nodo caído este pasaría a ser el secundario replicando al principal. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.953,
                                            "Frase": "la principal diferencia de un replica-set con otra alternativa de respaldo como mongodump (exportación de bases de datos a un fichero) es que automatizamos la recuperación porque con el otro método deberíamos importar los datos manualmente. ",
                                            "Lineas": "Line 9"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.953,
                                            "Frase": "la principal diferencia de un replica-set con otra alternativa de respaldo como mongodump (exportación de bases de datos a un fichero) es que automatizamos la recuperación porque con el otro método deberíamos importar los datos manualmente. además, podríamos sufrir una pérdida de datos dependiendo de cuando se realizo la exportación. ",
                                            "Lineas": "Lines 9 - 10"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "\tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.961,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "una arquitectura replica-set es una alternativa muy recomendada que ofrece mongodb para respaldar las bases de datos en caso de fallo o caída de un servidor, ofreciendo alta disponibilidad de los datos y recuperación a fallos de forma automática. la arquitectura mínima de un replica-set es: \t2 nodos con los que podremos acceder a los datos. uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. automáticamente, tenemos acceso a las bases de datos pudiendo trabajar con el nuevo principal. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "uno será el principal con el que podremos trabajar y el segundo será el secundario que replicará las acciones que realicemos. \tel tercer nodo deberemos configurarlo en su creación, denominado arbitrario. solo decide que nodo es asignado como primario y se comunica con los otros 2 cada cierto intervalo de tiempo. en caso de fallo del nodo principal, el replica-set detecta la desconexión, cambiando al secundario a realizar de principal. automáticamente, tenemos acceso a las bases de datos pudiendo trabajar con el nuevo principal. si se reconectara el nodo caído este pasaría a ser el secundario replicando al principal. la principal diferencia de un replica-set con otra alternativa de respaldo como mongodump (exportación de bases de datos a un fichero) es que automatizamos la recuperación porque con el otro método deberíamos importar los datos manualmente. además, podríamos sufrir una pérdida de datos dependiendo de cuando se realizo la exportación. ",
                                            "Lineas": "Lines 3 - 10"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "74ce38319e9d0f800f35f48f4162c9f1": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "se habla sobre el refinamiento sobre el modelo maestro  esclavo y se la nombra como replica- set,  cuyo método permite la recuperación de fallos de forma automática y es la forma mas recomendada de implementar la replicación de datos en mongo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "se habla sobre el refinamiento sobre el modelo maestro  esclavo y se la nombra como replica- set,  cuyo método permite la recuperación de fallos de forma automática y es la forma mas recomendada de implementar la replicación de datos en mongo. una de las características primordiales de las réplicas set es que no tienen  definido un nodo maestro estítico, sino que es asignada al azar y esta asignación se actualiza dependiendo de estado de disponibilidad del nodo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "se habla sobre el refinamiento sobre el modelo maestro  esclavo y se la nombra como replica- set,  cuyo método permite la recuperación de fallos de forma automática y es la forma mas recomendada de implementar la replicación de datos en mongo. una de las características primordiales de las réplicas set es que no tienen  definido un nodo maestro estítico, sino que es asignada al azar y esta asignación se actualiza dependiendo de estado de disponibilidad del nodo. los nodos mantienen el control de que otros nodos son accesibles mediante el envió de pings cada dos segundos  la recomendación mínima para una réplica set consiste en tres nodos , de los cuales dos nodos serán instancias de mongod con acceso a los datos uno de estos nodos será el nodo primario mientras que el otro replica a las operaciones que se realizan sobre el primario  mongodump hace una copia de seguridad de los datos a una instancia mongod, esta permite crear una copia de seguridad para un servidor una base de datos o una colección completa o puede realizar una consulta para copiar solo parte de una colección. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.784,
                                            "Frase": "una de las características primordiales de las réplicas set es que no tienen  definido un nodo maestro estítico, sino que es asignada al azar y esta asignación se actualiza dependiendo de estado de disponibilidad del nodo. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.791,
                                            "Frase": "se habla sobre el refinamiento sobre el modelo maestro  esclavo y se la nombra como replica- set,  cuyo método permite la recuperación de fallos de forma automática y es la forma mas recomendada de implementar la replicación de datos en mongo. una de las características primordiales de las réplicas set es que no tienen  definido un nodo maestro estítico, sino que es asignada al azar y esta asignación se actualiza dependiendo de estado de disponibilidad del nodo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.75,
                                            "Frase": "se habla sobre el refinamiento sobre el modelo maestro  esclavo y se la nombra como replica- set,  cuyo método permite la recuperación de fallos de forma automática y es la forma mas recomendada de implementar la replicación de datos en mongo. una de las características primordiales de las réplicas set es que no tienen  definido un nodo maestro estítico, sino que es asignada al azar y esta asignación se actualiza dependiendo de estado de disponibilidad del nodo. los nodos mantienen el control de que otros nodos son accesibles mediante el envió de pings cada dos segundos  la recomendación mínima para una réplica set consiste en tres nodos , de los cuales dos nodos serán instancias de mongod con acceso a los datos uno de estos nodos será el nodo primario mientras que el otro replica a las operaciones que se realizan sobre el primario  mongodump hace una copia de seguridad de los datos a una instancia mongod, esta permite crear una copia de seguridad para un servidor una base de datos o una colección completa o puede realizar una consulta para copiar solo parte de una colección. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "una de las características primordiales de las réplicas set es que no tienen  definido un nodo maestro estítico, sino que es asignada al azar y esta asignación se actualiza dependiendo de estado de disponibilidad del nodo. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.882,
                                            "Frase": "se habla sobre el refinamiento sobre el modelo maestro  esclavo y se la nombra como replica- set,  cuyo método permite la recuperación de fallos de forma automática y es la forma mas recomendada de implementar la replicación de datos en mongo. una de las características primordiales de las réplicas set es que no tienen  definido un nodo maestro estítico, sino que es asignada al azar y esta asignación se actualiza dependiendo de estado de disponibilidad del nodo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.877,
                                            "Frase": "se habla sobre el refinamiento sobre el modelo maestro  esclavo y se la nombra como replica- set,  cuyo método permite la recuperación de fallos de forma automática y es la forma mas recomendada de implementar la replicación de datos en mongo. una de las características primordiales de las réplicas set es que no tienen  definido un nodo maestro estítico, sino que es asignada al azar y esta asignación se actualiza dependiendo de estado de disponibilidad del nodo. los nodos mantienen el control de que otros nodos son accesibles mediante el envió de pings cada dos segundos  la recomendación mínima para una réplica set consiste en tres nodos , de los cuales dos nodos serán instancias de mongod con acceso a los datos uno de estos nodos será el nodo primario mientras que el otro replica a las operaciones que se realizan sobre el primario  mongodump hace una copia de seguridad de los datos a una instancia mongod, esta permite crear una copia de seguridad para un servidor una base de datos o una colección completa o puede realizar una consulta para copiar solo parte de una colección. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "se habla sobre el refinamiento sobre el modelo maestro  esclavo y se la nombra como replica- set,  cuyo método permite la recuperación de fallos de forma automática y es la forma mas recomendada de implementar la replicación de datos en mongo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "se habla sobre el refinamiento sobre el modelo maestro  esclavo y se la nombra como replica- set,  cuyo método permite la recuperación de fallos de forma automática y es la forma mas recomendada de implementar la replicación de datos en mongo. una de las características primordiales de las réplicas set es que no tienen  definido un nodo maestro estítico, sino que es asignada al azar y esta asignación se actualiza dependiendo de estado de disponibilidad del nodo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "se habla sobre el refinamiento sobre el modelo maestro  esclavo y se la nombra como replica- set,  cuyo método permite la recuperación de fallos de forma automática y es la forma mas recomendada de implementar la replicación de datos en mongo. una de las características primordiales de las réplicas set es que no tienen  definido un nodo maestro estítico, sino que es asignada al azar y esta asignación se actualiza dependiendo de estado de disponibilidad del nodo. los nodos mantienen el control de que otros nodos son accesibles mediante el envió de pings cada dos segundos  la recomendación mínima para una réplica set consiste en tres nodos , de los cuales dos nodos serán instancias de mongod con acceso a los datos uno de estos nodos será el nodo primario mientras que el otro replica a las operaciones que se realizan sobre el primario  mongodump hace una copia de seguridad de los datos a una instancia mongod, esta permite crear una copia de seguridad para un servidor una base de datos o una colección completa o puede realizar una consulta para copiar solo parte de una colección. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "se habla sobre el refinamiento sobre el modelo maestro  esclavo y se la nombra como replica- set,  cuyo método permite la recuperación de fallos de forma automática y es la forma mas recomendada de implementar la replicación de datos en mongo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "se habla sobre el refinamiento sobre el modelo maestro  esclavo y se la nombra como replica- set,  cuyo método permite la recuperación de fallos de forma automática y es la forma mas recomendada de implementar la replicación de datos en mongo. una de las características primordiales de las réplicas set es que no tienen  definido un nodo maestro estítico, sino que es asignada al azar y esta asignación se actualiza dependiendo de estado de disponibilidad del nodo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "se habla sobre el refinamiento sobre el modelo maestro  esclavo y se la nombra como replica- set,  cuyo método permite la recuperación de fallos de forma automática y es la forma mas recomendada de implementar la replicación de datos en mongo. una de las características primordiales de las réplicas set es que no tienen  definido un nodo maestro estítico, sino que es asignada al azar y esta asignación se actualiza dependiendo de estado de disponibilidad del nodo. los nodos mantienen el control de que otros nodos son accesibles mediante el envió de pings cada dos segundos  la recomendación mínima para una réplica set consiste en tres nodos , de los cuales dos nodos serán instancias de mongod con acceso a los datos uno de estos nodos será el nodo primario mientras que el otro replica a las operaciones que se realizan sobre el primario  mongodump hace una copia de seguridad de los datos a una instancia mongod, esta permite crear una copia de seguridad para un servidor una base de datos o una colección completa o puede realizar una consulta para copiar solo parte de una colección. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.5,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "51ddbc7f7eacf0ea460a7895de3e2e10": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "es una característica de seguridad mongo db que permite la redundancia de datos, de esta manera el usuario se asegura de que la información este respaldada. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. se necesitan mínimo 2 nodos para una configuración mínima la principal diferencia con mongodump es que, mongodump está diseñado para solo hacer consulta o copia solo a parte de una colección y la recuperación de los datos no es de forma automática. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.788,
                                            "Frase": "esto hace que las respuestas a cualquier fallo sean automáticas, esto se basa en una serie de pings que se envían cada dos segundos. cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. se necesitan mínimo 2 nodos para una configuración mínima la principal diferencia con mongodump es que, mongodump está diseñado para solo hacer consulta o copia solo a parte de una colección y la recuperación de los datos no es de forma automática. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.698,
                                            "Frase": "se lo conoce como un método superior al modelo maestro-esclavo ya que no define un nodo maestro, sino que se eligen al azar entre todos los nodos. esto hace que las respuestas a cualquier fallo sean automáticas, esto se basa en una serie de pings que se envían cada dos segundos. cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. se necesitan mínimo 2 nodos para una configuración mínima la principal diferencia con mongodump es que, mongodump está diseñado para solo hacer consulta o copia solo a parte de una colección y la recuperación de los datos no es de forma automática. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.761,
                                            "Frase": "es una característica de seguridad mongo db que permite la redundancia de datos, de esta manera el usuario se asegura de que la información este respaldada. se lo conoce como un método superior al modelo maestro-esclavo ya que no define un nodo maestro, sino que se eligen al azar entre todos los nodos. esto hace que las respuestas a cualquier fallo sean automáticas, esto se basa en una serie de pings que se envían cada dos segundos. cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. se necesitan mínimo 2 nodos para una configuración mínima la principal diferencia con mongodump es que, mongodump está diseñado para solo hacer consulta o copia solo a parte de una colección y la recuperación de los datos no es de forma automática. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.801,
                                            "Frase": "cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.772,
                                            "Frase": "cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. se necesitan mínimo 2 nodos para una configuración mínima la principal diferencia con mongodump es que, mongodump está diseñado para solo hacer consulta o copia solo a parte de una colección y la recuperación de los datos no es de forma automática. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.707,
                                            "Frase": "esto hace que las respuestas a cualquier fallo sean automáticas, esto se basa en una serie de pings que se envían cada dos segundos. cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. se necesitan mínimo 2 nodos para una configuración mínima la principal diferencia con mongodump es que, mongodump está diseñado para solo hacer consulta o copia solo a parte de una colección y la recuperación de los datos no es de forma automática. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.689,
                                            "Frase": "es una característica de seguridad mongo db que permite la redundancia de datos, de esta manera el usuario se asegura de que la información este respaldada. se lo conoce como un método superior al modelo maestro-esclavo ya que no define un nodo maestro, sino que se eligen al azar entre todos los nodos. esto hace que las respuestas a cualquier fallo sean automáticas, esto se basa en una serie de pings que se envían cada dos segundos. cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.711,
                                            "Frase": "es una característica de seguridad mongo db que permite la redundancia de datos, de esta manera el usuario se asegura de que la información este respaldada. se lo conoce como un método superior al modelo maestro-esclavo ya que no define un nodo maestro, sino que se eligen al azar entre todos los nodos. esto hace que las respuestas a cualquier fallo sean automáticas, esto se basa en una serie de pings que se envían cada dos segundos. cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. se necesitan mínimo 2 nodos para una configuración mínima la principal diferencia con mongodump es que, mongodump está diseñado para solo hacer consulta o copia solo a parte de una colección y la recuperación de los datos no es de forma automática. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.854,
                                            "Frase": "cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. se necesitan mínimo 2 nodos para una configuración mínima la principal diferencia con mongodump es que, mongodump está diseñado para solo hacer consulta o copia solo a parte de una colección y la recuperación de los datos no es de forma automática. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.828,
                                            "Frase": "esto hace que las respuestas a cualquier fallo sean automáticas, esto se basa en una serie de pings que se envían cada dos segundos. cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. se necesitan mínimo 2 nodos para una configuración mínima la principal diferencia con mongodump es que, mongodump está diseñado para solo hacer consulta o copia solo a parte de una colección y la recuperación de los datos no es de forma automática. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.835,
                                            "Frase": "es una característica de seguridad mongo db que permite la redundancia de datos, de esta manera el usuario se asegura de que la información este respaldada. se lo conoce como un método superior al modelo maestro-esclavo ya que no define un nodo maestro, sino que se eligen al azar entre todos los nodos. esto hace que las respuestas a cualquier fallo sean automáticas, esto se basa en una serie de pings que se envían cada dos segundos. cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.837,
                                            "Frase": "es una característica de seguridad mongo db que permite la redundancia de datos, de esta manera el usuario se asegura de que la información este respaldada. se lo conoce como un método superior al modelo maestro-esclavo ya que no define un nodo maestro, sino que se eligen al azar entre todos los nodos. esto hace que las respuestas a cualquier fallo sean automáticas, esto se basa en una serie de pings que se envían cada dos segundos. cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. se necesitan mínimo 2 nodos para una configuración mínima la principal diferencia con mongodump es que, mongodump está diseñado para solo hacer consulta o copia solo a parte de una colección y la recuperación de los datos no es de forma automática. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "es una característica de seguridad mongo db que permite la redundancia de datos, de esta manera el usuario se asegura de que la información este respaldada. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. se necesitan mínimo 2 nodos para una configuración mínima la principal diferencia con mongodump es que, mongodump está diseñado para solo hacer consulta o copia solo a parte de una colección y la recuperación de los datos no es de forma automática. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "esto hace que las respuestas a cualquier fallo sean automáticas, esto se basa en una serie de pings que se envían cada dos segundos. cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. se necesitan mínimo 2 nodos para una configuración mínima la principal diferencia con mongodump es que, mongodump está diseñado para solo hacer consulta o copia solo a parte de una colección y la recuperación de los datos no es de forma automática. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "se lo conoce como un método superior al modelo maestro-esclavo ya que no define un nodo maestro, sino que se eligen al azar entre todos los nodos. esto hace que las respuestas a cualquier fallo sean automáticas, esto se basa en una serie de pings que se envían cada dos segundos. cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. se necesitan mínimo 2 nodos para una configuración mínima la principal diferencia con mongodump es que, mongodump está diseñado para solo hacer consulta o copia solo a parte de una colección y la recuperación de los datos no es de forma automática. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "es una característica de seguridad mongo db que permite la redundancia de datos, de esta manera el usuario se asegura de que la información este respaldada. se lo conoce como un método superior al modelo maestro-esclavo ya que no define un nodo maestro, sino que se eligen al azar entre todos los nodos. esto hace que las respuestas a cualquier fallo sean automáticas, esto se basa en una serie de pings que se envían cada dos segundos. cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. se necesitan mínimo 2 nodos para una configuración mínima la principal diferencia con mongodump es que, mongodump está diseñado para solo hacer consulta o copia solo a parte de una colección y la recuperación de los datos no es de forma automática. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "es una característica de seguridad mongo db que permite la redundancia de datos, de esta manera el usuario se asegura de que la información este respaldada. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. se necesitan mínimo 2 nodos para una configuración mínima la principal diferencia con mongodump es que, mongodump está diseñado para solo hacer consulta o copia solo a parte de una colección y la recuperación de los datos no es de forma automática. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.882,
                                            "Frase": "esto hace que las respuestas a cualquier fallo sean automáticas, esto se basa en una serie de pings que se envían cada dos segundos. cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. se necesitan mínimo 2 nodos para una configuración mínima la principal diferencia con mongodump es que, mongodump está diseñado para solo hacer consulta o copia solo a parte de una colección y la recuperación de los datos no es de forma automática. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.844,
                                            "Frase": "es una característica de seguridad mongo db que permite la redundancia de datos, de esta manera el usuario se asegura de que la información este respaldada. se lo conoce como un método superior al modelo maestro-esclavo ya que no define un nodo maestro, sino que se eligen al azar entre todos los nodos. esto hace que las respuestas a cualquier fallo sean automáticas, esto se basa en una serie de pings que se envían cada dos segundos. cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "es una característica de seguridad mongo db que permite la redundancia de datos, de esta manera el usuario se asegura de que la información este respaldada. se lo conoce como un método superior al modelo maestro-esclavo ya que no define un nodo maestro, sino que se eligen al azar entre todos los nodos. esto hace que las respuestas a cualquier fallo sean automáticas, esto se basa en una serie de pings que se envían cada dos segundos. cuando el nodo primerio deja de tener disponibilidad un nodo secundario toma su lugar. se necesitan mínimo 2 nodos para una configuración mínima la principal diferencia con mongodump es que, mongodump está diseñado para solo hacer consulta o copia solo a parte de una colección y la recuperación de los datos no es de forma automática. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "375c9f81952e5da9fc1e5f5bf9fcf0bb": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.835,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. se basa en la arquitectura maestro-esclavo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.822,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. se basa en la arquitectura maestro-esclavo. esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.807,
                                            "Frase": "aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.803,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. se basa en la arquitectura maestro-esclavo. esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.79,
                                            "Frase": "esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.803,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. se basa en la arquitectura maestro-esclavo. esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.815,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. se basa en la arquitectura maestro-esclavo. esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. se basa en la arquitectura maestro-esclavo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.859,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. se basa en la arquitectura maestro-esclavo. esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.837,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. se basa en la arquitectura maestro-esclavo. esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.824,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. se basa en la arquitectura maestro-esclavo. esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.807,
                                            "Frase": "se basa en la arquitectura maestro-esclavo. esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.838,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. se basa en la arquitectura maestro-esclavo. esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.823,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. se basa en la arquitectura maestro-esclavo. esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.87,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. se basa en la arquitectura maestro-esclavo. esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. se basa en la arquitectura maestro-esclavo. esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.877,
                                            "Frase": "que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.873,
                                            "Frase": "de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.87,
                                            "Frase": "se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.86,
                                            "Frase": "esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.868,
                                            "Frase": "se basa en la arquitectura maestro-esclavo. esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.868,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. se basa en la arquitectura maestro-esclavo. esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. se basa en la arquitectura maestro-esclavo. esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. se basa en la arquitectura maestro-esclavo. esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "un replica-set, como su nombre indica, es un sistema de replicación específico de mongodb. se basa en la arquitectura maestro-esclavo. esto es, las escrituras son recibidas por un nodo primario (maestro) y este se encarga de comunicar su estado mediante un heartbeat a los secundario (esclavos), que se actualizan (con un intervalo de tiempo) al encontrar cambios. se caracteriza porque el nodo primario no es estático, se escoge mediante una votación interna. aunque se pueden configurar prioridades dentro de cada nodo, de manera predeterminada cualquier nodo puede ser primario. de este modo, si se pierde la disponibilidad del primario, se sigue manteniendo el sistema, sin tener que restablecer nada. en este sistema la configuración mínima es de 3 nodos, un primario, un secundario y un nodo árbitro. que no será primario nunca, solo se encarga de mantener la conexión y aportar su voto en la elección del maestro. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "1c29ceaed071cc86298c79e566233ea5": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.859,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.873,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. gracias al sharding los datos están distribuidos en todos los nodos con el fin de aumentar la capacidad; así pues, los shard son un replica-set que almacenan esa información para que siempre esté disponible y consistente. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.836,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. gracias al sharding los datos están distribuidos en todos los nodos con el fin de aumentar la capacidad; así pues, los shard son un replica-set que almacenan esa información para que siempre esté disponible y consistente. por eso en caso, de que el nodo maestro falle está disponible el nodo esclavo con la misma información del maestro y un árbitro que es el encargado asignar al nodo secundario reemplazar al nodo primario mientras este vuelve a tener disponibilidad. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.844,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. gracias al sharding los datos están distribuidos en todos los nodos con el fin de aumentar la capacidad; así pues, los shard son un replica-set que almacenan esa información para que siempre esté disponible y consistente. por eso en caso, de que el nodo maestro falle está disponible el nodo esclavo con la misma información del maestro y un árbitro que es el encargado asignar al nodo secundario reemplazar al nodo primario mientras este vuelve a tener disponibilidad. la diferencia entre el replica-set y el mongodump es que este ultimo de lo único que se encarga es de crear una copia de respaldo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.805,
                                            "Frase": "la diferencia entre el replica-set y el mongodump es que este ultimo de lo único que se encarga es de crear una copia de respaldo. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.833,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. gracias al sharding los datos están distribuidos en todos los nodos con el fin de aumentar la capacidad; así pues, los shard son un replica-set que almacenan esa información para que siempre esté disponible y consistente. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.833,
                                            "Frase": "esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. gracias al sharding los datos están distribuidos en todos los nodos con el fin de aumentar la capacidad; así pues, los shard son un replica-set que almacenan esa información para que siempre esté disponible y consistente. por eso en caso, de que el nodo maestro falle está disponible el nodo esclavo con la misma información del maestro y un árbitro que es el encargado asignar al nodo secundario reemplazar al nodo primario mientras este vuelve a tener disponibilidad. la diferencia entre el replica-set y el mongodump es que este ultimo de lo único que se encarga es de crear una copia de respaldo. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.838,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. gracias al sharding los datos están distribuidos en todos los nodos con el fin de aumentar la capacidad; así pues, los shard son un replica-set que almacenan esa información para que siempre esté disponible y consistente. por eso en caso, de que el nodo maestro falle está disponible el nodo esclavo con la misma información del maestro y un árbitro que es el encargado asignar al nodo secundario reemplazar al nodo primario mientras este vuelve a tener disponibilidad. la diferencia entre el replica-set y el mongodump es que este ultimo de lo único que se encarga es de crear una copia de respaldo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "por eso en caso, de que el nodo maestro falle está disponible el nodo esclavo con la misma información del maestro y un árbitro que es el encargado asignar al nodo secundario reemplazar al nodo primario mientras este vuelve a tener disponibilidad. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "por eso en caso, de que el nodo maestro falle está disponible el nodo esclavo con la misma información del maestro y un árbitro que es el encargado asignar al nodo secundario reemplazar al nodo primario mientras este vuelve a tener disponibilidad. la diferencia entre el replica-set y el mongodump es que este ultimo de lo único que se encarga es de crear una copia de respaldo. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. gracias al sharding los datos están distribuidos en todos los nodos con el fin de aumentar la capacidad; así pues, los shard son un replica-set que almacenan esa información para que siempre esté disponible y consistente. por eso en caso, de que el nodo maestro falle está disponible el nodo esclavo con la misma información del maestro y un árbitro que es el encargado asignar al nodo secundario reemplazar al nodo primario mientras este vuelve a tener disponibilidad. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. gracias al sharding los datos están distribuidos en todos los nodos con el fin de aumentar la capacidad; así pues, los shard son un replica-set que almacenan esa información para que siempre esté disponible y consistente. por eso en caso, de que el nodo maestro falle está disponible el nodo esclavo con la misma información del maestro y un árbitro que es el encargado asignar al nodo secundario reemplazar al nodo primario mientras este vuelve a tener disponibilidad. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. gracias al sharding los datos están distribuidos en todos los nodos con el fin de aumentar la capacidad; así pues, los shard son un replica-set que almacenan esa información para que siempre esté disponible y consistente. por eso en caso, de que el nodo maestro falle está disponible el nodo esclavo con la misma información del maestro y un árbitro que es el encargado asignar al nodo secundario reemplazar al nodo primario mientras este vuelve a tener disponibilidad. la diferencia entre el replica-set y el mongodump es que este ultimo de lo único que se encarga es de crear una copia de respaldo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.845,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. gracias al sharding los datos están distribuidos en todos los nodos con el fin de aumentar la capacidad; así pues, los shard son un replica-set que almacenan esa información para que siempre esté disponible y consistente. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.862,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. gracias al sharding los datos están distribuidos en todos los nodos con el fin de aumentar la capacidad; así pues, los shard son un replica-set que almacenan esa información para que siempre esté disponible y consistente. por eso en caso, de que el nodo maestro falle está disponible el nodo esclavo con la misma información del maestro y un árbitro que es el encargado asignar al nodo secundario reemplazar al nodo primario mientras este vuelve a tener disponibilidad. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.875,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. gracias al sharding los datos están distribuidos en todos los nodos con el fin de aumentar la capacidad; así pues, los shard son un replica-set que almacenan esa información para que siempre esté disponible y consistente. por eso en caso, de que el nodo maestro falle está disponible el nodo esclavo con la misma información del maestro y un árbitro que es el encargado asignar al nodo secundario reemplazar al nodo primario mientras este vuelve a tener disponibilidad. la diferencia entre el replica-set y el mongodump es que este ultimo de lo único que se encarga es de crear una copia de respaldo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.96,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. gracias al sharding los datos están distribuidos en todos los nodos con el fin de aumentar la capacidad; así pues, los shard son un replica-set que almacenan esa información para que siempre esté disponible y consistente. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. gracias al sharding los datos están distribuidos en todos los nodos con el fin de aumentar la capacidad; así pues, los shard son un replica-set que almacenan esa información para que siempre esté disponible y consistente. por eso en caso, de que el nodo maestro falle está disponible el nodo esclavo con la misma información del maestro y un árbitro que es el encargado asignar al nodo secundario reemplazar al nodo primario mientras este vuelve a tener disponibilidad. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "la arquitectura replica-set permite tener un nodo de respaldo en caso de indisponibilidad del nodo principal y así mismo de tener un gestor que se encargue de arbitrar esta arquitectura cuando se presenta una situación de estas. esta arquitectura constas de un nodo maestro (principal), un esclavo (secundario) y un árbitro. gracias al sharding los datos están distribuidos en todos los nodos con el fin de aumentar la capacidad; así pues, los shard son un replica-set que almacenan esa información para que siempre esté disponible y consistente. por eso en caso, de que el nodo maestro falle está disponible el nodo esclavo con la misma información del maestro y un árbitro que es el encargado asignar al nodo secundario reemplazar al nodo primario mientras este vuelve a tener disponibilidad. la diferencia entre el replica-set y el mongodump es que este ultimo de lo único que se encarga es de crear una copia de respaldo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "9f13cf7e7d7fdd1d30c1220707501993": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.841,
                                            "Frase": "entre la conexión de los nodos existe un hearbeat el cual permite la constante comunicación entre ellos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.8,
                                            "Frase": "para grandes volúmenes de datos (big data), la base de datos se maneja por medio de clústeres, los cuales permiten particionar los datos y distribuirlas en los diferentes nodos. cada uno de estos nodos estará ejecutando réplicas cada cierto tiempo (configuración del administrador) en otro sub-nodo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.834,
                                            "Frase": "cada uno de estos nodos estará ejecutando réplicas cada cierto tiempo (configuración del administrador) en otro sub-nodo. de esta manera, si alguno de los nodos se ve interrumpido (se cae) la disponibilidad de la información no se verá afectada. entre la conexión de los nodos existe un hearbeat el cual permite la constante comunicación entre ellos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.854,
                                            "Frase": "para grandes volúmenes de datos (big data), la base de datos se maneja por medio de clústeres, los cuales permiten particionar los datos y distribuirlas en los diferentes nodos. cada uno de estos nodos estará ejecutando réplicas cada cierto tiempo (configuración del administrador) en otro sub-nodo. de esta manera, si alguno de los nodos se ve interrumpido (se cae) la disponibilidad de la información no se verá afectada. entre la conexión de los nodos existe un hearbeat el cual permite la constante comunicación entre ellos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.757,
                                            "Frase": "entre la conexión de los nodos existe un hearbeat el cual permite la constante comunicación entre ellos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.68,
                                            "Frase": "de esta manera, si alguno de los nodos se ve interrumpido (se cae) la disponibilidad de la información no se verá afectada. entre la conexión de los nodos existe un hearbeat el cual permite la constante comunicación entre ellos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.727,
                                            "Frase": "cada uno de estos nodos estará ejecutando réplicas cada cierto tiempo (configuración del administrador) en otro sub-nodo. de esta manera, si alguno de los nodos se ve interrumpido (se cae) la disponibilidad de la información no se verá afectada. entre la conexión de los nodos existe un hearbeat el cual permite la constante comunicación entre ellos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.691,
                                            "Frase": "para grandes volúmenes de datos (big data), la base de datos se maneja por medio de clústeres, los cuales permiten particionar los datos y distribuirlas en los diferentes nodos. cada uno de estos nodos estará ejecutando réplicas cada cierto tiempo (configuración del administrador) en otro sub-nodo. de esta manera, si alguno de los nodos se ve interrumpido (se cae) la disponibilidad de la información no se verá afectada. entre la conexión de los nodos existe un hearbeat el cual permite la constante comunicación entre ellos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.824,
                                            "Frase": "entre la conexión de los nodos existe un hearbeat el cual permite la constante comunicación entre ellos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.787,
                                            "Frase": "cada uno de estos nodos estará ejecutando réplicas cada cierto tiempo (configuración del administrador) en otro sub-nodo. de esta manera, si alguno de los nodos se ve interrumpido (se cae) la disponibilidad de la información no se verá afectada. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.836,
                                            "Frase": "cada uno de estos nodos estará ejecutando réplicas cada cierto tiempo (configuración del administrador) en otro sub-nodo. de esta manera, si alguno de los nodos se ve interrumpido (se cae) la disponibilidad de la información no se verá afectada. entre la conexión de los nodos existe un hearbeat el cual permite la constante comunicación entre ellos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.825,
                                            "Frase": "para grandes volúmenes de datos (big data), la base de datos se maneja por medio de clústeres, los cuales permiten particionar los datos y distribuirlas en los diferentes nodos. cada uno de estos nodos estará ejecutando réplicas cada cierto tiempo (configuración del administrador) en otro sub-nodo. de esta manera, si alguno de los nodos se ve interrumpido (se cae) la disponibilidad de la información no se verá afectada. entre la conexión de los nodos existe un hearbeat el cual permite la constante comunicación entre ellos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.827,
                                            "Frase": "para grandes volúmenes de datos (big data), la base de datos se maneja por medio de clústeres, los cuales permiten particionar los datos y distribuirlas en los diferentes nodos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.851,
                                            "Frase": "de esta manera, si alguno de los nodos se ve interrumpido (se cae) la disponibilidad de la información no se verá afectada. entre la conexión de los nodos existe un hearbeat el cual permite la constante comunicación entre ellos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.875,
                                            "Frase": "para grandes volúmenes de datos (big data), la base de datos se maneja por medio de clústeres, los cuales permiten particionar los datos y distribuirlas en los diferentes nodos. cada uno de estos nodos estará ejecutando réplicas cada cierto tiempo (configuración del administrador) en otro sub-nodo. de esta manera, si alguno de los nodos se ve interrumpido (se cae) la disponibilidad de la información no se verá afectada. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "para grandes volúmenes de datos (big data), la base de datos se maneja por medio de clústeres, los cuales permiten particionar los datos y distribuirlas en los diferentes nodos. cada uno de estos nodos estará ejecutando réplicas cada cierto tiempo (configuración del administrador) en otro sub-nodo. de esta manera, si alguno de los nodos se ve interrumpido (se cae) la disponibilidad de la información no se verá afectada. entre la conexión de los nodos existe un hearbeat el cual permite la constante comunicación entre ellos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "entre la conexión de los nodos existe un hearbeat el cual permite la constante comunicación entre ellos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.837,
                                            "Frase": "de esta manera, si alguno de los nodos se ve interrumpido (se cae) la disponibilidad de la información no se verá afectada. entre la conexión de los nodos existe un hearbeat el cual permite la constante comunicación entre ellos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "cada uno de estos nodos estará ejecutando réplicas cada cierto tiempo (configuración del administrador) en otro sub-nodo. de esta manera, si alguno de los nodos se ve interrumpido (se cae) la disponibilidad de la información no se verá afectada. entre la conexión de los nodos existe un hearbeat el cual permite la constante comunicación entre ellos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "para grandes volúmenes de datos (big data), la base de datos se maneja por medio de clústeres, los cuales permiten particionar los datos y distribuirlas en los diferentes nodos. cada uno de estos nodos estará ejecutando réplicas cada cierto tiempo (configuración del administrador) en otro sub-nodo. de esta manera, si alguno de los nodos se ve interrumpido (se cae) la disponibilidad de la información no se verá afectada. entre la conexión de los nodos existe un hearbeat el cual permite la constante comunicación entre ellos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.5,
                                 "Umbral 0.4 - 0.9": 0.5,
                                 "Umbral 0.5 - 0.9": 0.5,
                                 "Umbral 0.6 - 0.9": 0.5,
                                 "Umbral 0.7 - 0.9": 0.5,
                                 "Umbral 0.8 - 0.9": 0.375,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "6fd0cef8b483042e59a31e48ccd7b55c": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. esta nueva forma permite que la recuperación por si falla el sistema sea automática. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.828,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. esta nueva forma permite que la recuperación por si falla el sistema sea automática. a diferencia de la forma anterior en replica set no se define una instancia maestra automáticamente, sino que se hace de forma aleatoria, se crean tres nodos, el maestro y esclavo y un tercer nodo árbitro que es el que decide la instancia que será la maestra. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.844,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. esta nueva forma permite que la recuperación por si falla el sistema sea automática. a diferencia de la forma anterior en replica set no se define una instancia maestra automáticamente, sino que se hace de forma aleatoria, se crean tres nodos, el maestro y esclavo y un tercer nodo árbitro que es el que decide la instancia que será la maestra. cuando el nodo primario deja de tener disponibilidad el nodo secundario hace una restauración de la información que contiene. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.811,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad el nodo secundario hace una restauración de la información que contiene. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.742,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.758,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.75,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. esta nueva forma permite que la recuperación por si falla el sistema sea automática. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.733,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. esta nueva forma permite que la recuperación por si falla el sistema sea automática. a diferencia de la forma anterior en replica set no se define una instancia maestra automáticamente, sino que se hace de forma aleatoria, se crean tres nodos, el maestro y esclavo y un tercer nodo árbitro que es el que decide la instancia que será la maestra. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.752,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. esta nueva forma permite que la recuperación por si falla el sistema sea automática. a diferencia de la forma anterior en replica set no se define una instancia maestra automáticamente, sino que se hace de forma aleatoria, se crean tres nodos, el maestro y esclavo y un tercer nodo árbitro que es el que decide la instancia que será la maestra. cuando el nodo primario deja de tener disponibilidad el nodo secundario hace una restauración de la información que contiene. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad el nodo secundario hace una restauración de la información que contiene. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.862,
                                            "Frase": "a diferencia de la forma anterior en replica set no se define una instancia maestra automáticamente, sino que se hace de forma aleatoria, se crean tres nodos, el maestro y esclavo y un tercer nodo árbitro que es el que decide la instancia que será la maestra. cuando el nodo primario deja de tener disponibilidad el nodo secundario hace una restauración de la información que contiene. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.852,
                                            "Frase": "esta nueva forma permite que la recuperación por si falla el sistema sea automática. a diferencia de la forma anterior en replica set no se define una instancia maestra automáticamente, sino que se hace de forma aleatoria, se crean tres nodos, el maestro y esclavo y un tercer nodo árbitro que es el que decide la instancia que será la maestra. cuando el nodo primario deja de tener disponibilidad el nodo secundario hace una restauración de la información que contiene. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.87,
                                            "Frase": "replica set o conjunto de réplicas surge tras una actualización de mongodb. esta nueva forma permite que la recuperación por si falla el sistema sea automática. a diferencia de la forma anterior en replica set no se define una instancia maestra automáticamente, sino que se hace de forma aleatoria, se crean tres nodos, el maestro y esclavo y un tercer nodo árbitro que es el que decide la instancia que será la maestra. cuando el nodo primario deja de tener disponibilidad el nodo secundario hace una restauración de la información que contiene. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.852,
                                            "Frase": "antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. esta nueva forma permite que la recuperación por si falla el sistema sea automática. a diferencia de la forma anterior en replica set no se define una instancia maestra automáticamente, sino que se hace de forma aleatoria, se crean tres nodos, el maestro y esclavo y un tercer nodo árbitro que es el que decide la instancia que será la maestra. cuando el nodo primario deja de tener disponibilidad el nodo secundario hace una restauración de la información que contiene. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.863,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. esta nueva forma permite que la recuperación por si falla el sistema sea automática. a diferencia de la forma anterior en replica set no se define una instancia maestra automáticamente, sino que se hace de forma aleatoria, se crean tres nodos, el maestro y esclavo y un tercer nodo árbitro que es el que decide la instancia que será la maestra. cuando el nodo primario deja de tener disponibilidad el nodo secundario hace una restauración de la información que contiene. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. esta nueva forma permite que la recuperación por si falla el sistema sea automática. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. esta nueva forma permite que la recuperación por si falla el sistema sea automática. a diferencia de la forma anterior en replica set no se define una instancia maestra automáticamente, sino que se hace de forma aleatoria, se crean tres nodos, el maestro y esclavo y un tercer nodo árbitro que es el que decide la instancia que será la maestra. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. esta nueva forma permite que la recuperación por si falla el sistema sea automática. a diferencia de la forma anterior en replica set no se define una instancia maestra automáticamente, sino que se hace de forma aleatoria, se crean tres nodos, el maestro y esclavo y un tercer nodo árbitro que es el que decide la instancia que será la maestra. cuando el nodo primario deja de tener disponibilidad el nodo secundario hace una restauración de la información que contiene. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad el nodo secundario hace una restauración de la información que contiene. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. esta nueva forma permite que la recuperación por si falla el sistema sea automática. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. esta nueva forma permite que la recuperación por si falla el sistema sea automática. a diferencia de la forma anterior en replica set no se define una instancia maestra automáticamente, sino que se hace de forma aleatoria, se crean tres nodos, el maestro y esclavo y un tercer nodo árbitro que es el que decide la instancia que será la maestra. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "la replicación es una característica de mongodb cuya función es la copia de los datos y para aumentar su disponibilidad y posible recuperación en caso de un fallo. antes se componía de una sentencia maestro que escribía y se aplicaba en la instancia esclavo. replica set o conjunto de réplicas surge tras una actualización de mongodb. esta nueva forma permite que la recuperación por si falla el sistema sea automática. a diferencia de la forma anterior en replica set no se define una instancia maestra automáticamente, sino que se hace de forma aleatoria, se crean tres nodos, el maestro y esclavo y un tercer nodo árbitro que es el que decide la instancia que será la maestra. cuando el nodo primario deja de tener disponibilidad el nodo secundario hace una restauración de la información que contiene. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "10cafedb98461e0cc713b7e186bb343d": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "el replica-set es un esquema de replicación que se recomienda en mongodb para mantener de forma automatizada la tolerancia ante fallos en la base de datos, por tanto, su función es facilitar la alta disponibilidad de la db, para una configuración mínimo es necesario contar con 3 servers: 2 en modo principal y secundario respectivamente y un servidor en modo arbitro, administrando quien es el activo, por tanto, cuando falla el primario, el árbitro asigna el nuevo server. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "el replica-set es un esquema de replicación que se recomienda en mongodb para mantener de forma automatizada la tolerancia ante fallos en la base de datos, por tanto, su función es facilitar la alta disponibilidad de la db, para una configuración mínimo es necesario contar con 3 servers: 2 en modo principal y secundario respectivamente y un servidor en modo arbitro, administrando quien es el activo, por tanto, cuando falla el primario, el árbitro asigna el nuevo server. respecto a la diferencia con mongodump, este ultimo es utilizado para realizar backups lanzados a la base de datos, mientras replica-set es utilizado para mantener replicas en dbs principal y secundario, que ayuden a dar alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.846,
                                            "Frase": "el replica-set es un esquema de replicación que se recomienda en mongodb para mantener de forma automatizada la tolerancia ante fallos en la base de datos, por tanto, su función es facilitar la alta disponibilidad de la db, para una configuración mínimo es necesario contar con 3 servers: 2 en modo principal y secundario respectivamente y un servidor en modo arbitro, administrando quien es el activo, por tanto, cuando falla el primario, el árbitro asigna el nuevo server. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.815,
                                            "Frase": "el replica-set es un esquema de replicación que se recomienda en mongodb para mantener de forma automatizada la tolerancia ante fallos en la base de datos, por tanto, su función es facilitar la alta disponibilidad de la db, para una configuración mínimo es necesario contar con 3 servers: 2 en modo principal y secundario respectivamente y un servidor en modo arbitro, administrando quien es el activo, por tanto, cuando falla el primario, el árbitro asigna el nuevo server. respecto a la diferencia con mongodump, este ultimo es utilizado para realizar backups lanzados a la base de datos, mientras replica-set es utilizado para mantener replicas en dbs principal y secundario, que ayuden a dar alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "el replica-set es un esquema de replicación que se recomienda en mongodb para mantener de forma automatizada la tolerancia ante fallos en la base de datos, por tanto, su función es facilitar la alta disponibilidad de la db, para una configuración mínimo es necesario contar con 3 servers: 2 en modo principal y secundario respectivamente y un servidor en modo arbitro, administrando quien es el activo, por tanto, cuando falla el primario, el árbitro asigna el nuevo server. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "el replica-set es un esquema de replicación que se recomienda en mongodb para mantener de forma automatizada la tolerancia ante fallos en la base de datos, por tanto, su función es facilitar la alta disponibilidad de la db, para una configuración mínimo es necesario contar con 3 servers: 2 en modo principal y secundario respectivamente y un servidor en modo arbitro, administrando quien es el activo, por tanto, cuando falla el primario, el árbitro asigna el nuevo server. respecto a la diferencia con mongodump, este ultimo es utilizado para realizar backups lanzados a la base de datos, mientras replica-set es utilizado para mantener replicas en dbs principal y secundario, que ayuden a dar alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "respecto a la diferencia con mongodump, este ultimo es utilizado para realizar backups lanzados a la base de datos, mientras replica-set es utilizado para mantener replicas en dbs principal y secundario, que ayuden a dar alta disponibilidad. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "el replica-set es un esquema de replicación que se recomienda en mongodb para mantener de forma automatizada la tolerancia ante fallos en la base de datos, por tanto, su función es facilitar la alta disponibilidad de la db, para una configuración mínimo es necesario contar con 3 servers: 2 en modo principal y secundario respectivamente y un servidor en modo arbitro, administrando quien es el activo, por tanto, cuando falla el primario, el árbitro asigna el nuevo server. respecto a la diferencia con mongodump, este ultimo es utilizado para realizar backups lanzados a la base de datos, mientras replica-set es utilizado para mantener replicas en dbs principal y secundario, que ayuden a dar alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.957,
                                            "Frase": "el replica-set es un esquema de replicación que se recomienda en mongodb para mantener de forma automatizada la tolerancia ante fallos en la base de datos, por tanto, su función es facilitar la alta disponibilidad de la db, para una configuración mínimo es necesario contar con 3 servers: 2 en modo principal y secundario respectivamente y un servidor en modo arbitro, administrando quien es el activo, por tanto, cuando falla el primario, el árbitro asigna el nuevo server. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.957,
                                            "Frase": "el replica-set es un esquema de replicación que se recomienda en mongodb para mantener de forma automatizada la tolerancia ante fallos en la base de datos, por tanto, su función es facilitar la alta disponibilidad de la db, para una configuración mínimo es necesario contar con 3 servers: 2 en modo principal y secundario respectivamente y un servidor en modo arbitro, administrando quien es el activo, por tanto, cuando falla el primario, el árbitro asigna el nuevo server. respecto a la diferencia con mongodump, este ultimo es utilizado para realizar backups lanzados a la base de datos, mientras replica-set es utilizado para mantener replicas en dbs principal y secundario, que ayuden a dar alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "45cc2481407de2e39e65d84dbe9a36bb": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "replica-set es un refinamiento del modelo maestro-esclavo, sirve para mantener alta disponibilidad de los datos almacenados en la base de datos de mongo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "replica-set es un refinamiento del modelo maestro-esclavo, sirve para mantener alta disponibilidad de los datos almacenados en la base de datos de mongo. la configuración mínima cuenta con 3 nodos: principal, secundario y árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "replica-set es un refinamiento del modelo maestro-esclavo, sirve para mantener alta disponibilidad de los datos almacenados en la base de datos de mongo. la configuración mínima cuenta con 3 nodos: principal, secundario y árbitro. cuando el nodo principal o primario deja de tener disponibilidad el nodo secundario pasa a ser el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "replica-set es un refinamiento del modelo maestro-esclavo, sirve para mantener alta disponibilidad de los datos almacenados en la base de datos de mongo. la configuración mínima cuenta con 3 nodos: principal, secundario y árbitro. cuando el nodo principal o primario deja de tener disponibilidad el nodo secundario pasa a ser el primario. mongodump es una forma de realizar backups de los datos almacenados en mongodb en un momento especifico cuando se realice, con el replica-set tenemos las réplicas en tiempo real, estamos respaldando la información de forma que conforme se vaya escribiendo en el nodo principal esta se replicará de manera inmediata al secundario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.807,
                                            "Frase": "replica-set es un refinamiento del modelo maestro-esclavo, sirve para mantener alta disponibilidad de los datos almacenados en la base de datos de mongo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.808,
                                            "Frase": "replica-set es un refinamiento del modelo maestro-esclavo, sirve para mantener alta disponibilidad de los datos almacenados en la base de datos de mongo. la configuración mínima cuenta con 3 nodos: principal, secundario y árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.846,
                                            "Frase": "replica-set es un refinamiento del modelo maestro-esclavo, sirve para mantener alta disponibilidad de los datos almacenados en la base de datos de mongo. la configuración mínima cuenta con 3 nodos: principal, secundario y árbitro. cuando el nodo principal o primario deja de tener disponibilidad el nodo secundario pasa a ser el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.808,
                                            "Frase": "replica-set es un refinamiento del modelo maestro-esclavo, sirve para mantener alta disponibilidad de los datos almacenados en la base de datos de mongo. la configuración mínima cuenta con 3 nodos: principal, secundario y árbitro. cuando el nodo principal o primario deja de tener disponibilidad el nodo secundario pasa a ser el primario. mongodump es una forma de realizar backups de los datos almacenados en mongodb en un momento especifico cuando se realice, con el replica-set tenemos las réplicas en tiempo real, estamos respaldando la información de forma que conforme se vaya escribiendo en el nodo principal esta se replicará de manera inmediata al secundario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "cuando el nodo principal o primario deja de tener disponibilidad el nodo secundario pasa a ser el primario. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "la configuración mínima cuenta con 3 nodos: principal, secundario y árbitro. cuando el nodo principal o primario deja de tener disponibilidad el nodo secundario pasa a ser el primario. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "la configuración mínima cuenta con 3 nodos: principal, secundario y árbitro. cuando el nodo principal o primario deja de tener disponibilidad el nodo secundario pasa a ser el primario. mongodump es una forma de realizar backups de los datos almacenados en mongodb en un momento especifico cuando se realice, con el replica-set tenemos las réplicas en tiempo real, estamos respaldando la información de forma que conforme se vaya escribiendo en el nodo principal esta se replicará de manera inmediata al secundario. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "replica-set es un refinamiento del modelo maestro-esclavo, sirve para mantener alta disponibilidad de los datos almacenados en la base de datos de mongo. la configuración mínima cuenta con 3 nodos: principal, secundario y árbitro. cuando el nodo principal o primario deja de tener disponibilidad el nodo secundario pasa a ser el primario. mongodump es una forma de realizar backups de los datos almacenados en mongodb en un momento especifico cuando se realice, con el replica-set tenemos las réplicas en tiempo real, estamos respaldando la información de forma que conforme se vaya escribiendo en el nodo principal esta se replicará de manera inmediata al secundario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "replica-set es un refinamiento del modelo maestro-esclavo, sirve para mantener alta disponibilidad de los datos almacenados en la base de datos de mongo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.899,
                                            "Frase": "replica-set es un refinamiento del modelo maestro-esclavo, sirve para mantener alta disponibilidad de los datos almacenados en la base de datos de mongo. la configuración mínima cuenta con 3 nodos: principal, secundario y árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.883,
                                            "Frase": "la configuración mínima cuenta con 3 nodos: principal, secundario y árbitro. cuando el nodo principal o primario deja de tener disponibilidad el nodo secundario pasa a ser el primario. mongodump es una forma de realizar backups de los datos almacenados en mongodb en un momento especifico cuando se realice, con el replica-set tenemos las réplicas en tiempo real, estamos respaldando la información de forma que conforme se vaya escribiendo en el nodo principal esta se replicará de manera inmediata al secundario. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "replica-set es un refinamiento del modelo maestro-esclavo, sirve para mantener alta disponibilidad de los datos almacenados en la base de datos de mongo. la configuración mínima cuenta con 3 nodos: principal, secundario y árbitro. cuando el nodo principal o primario deja de tener disponibilidad el nodo secundario pasa a ser el primario. mongodump es una forma de realizar backups de los datos almacenados en mongodb en un momento especifico cuando se realice, con el replica-set tenemos las réplicas en tiempo real, estamos respaldando la información de forma que conforme se vaya escribiendo en el nodo principal esta se replicará de manera inmediata al secundario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "replica-set es un refinamiento del modelo maestro-esclavo, sirve para mantener alta disponibilidad de los datos almacenados en la base de datos de mongo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "replica-set es un refinamiento del modelo maestro-esclavo, sirve para mantener alta disponibilidad de los datos almacenados en la base de datos de mongo. la configuración mínima cuenta con 3 nodos: principal, secundario y árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.967,
                                            "Frase": "replica-set es un refinamiento del modelo maestro-esclavo, sirve para mantener alta disponibilidad de los datos almacenados en la base de datos de mongo. la configuración mínima cuenta con 3 nodos: principal, secundario y árbitro. cuando el nodo principal o primario deja de tener disponibilidad el nodo secundario pasa a ser el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.964,
                                            "Frase": "replica-set es un refinamiento del modelo maestro-esclavo, sirve para mantener alta disponibilidad de los datos almacenados en la base de datos de mongo. la configuración mínima cuenta con 3 nodos: principal, secundario y árbitro. cuando el nodo principal o primario deja de tener disponibilidad el nodo secundario pasa a ser el primario. mongodump es una forma de realizar backups de los datos almacenados en mongodb en un momento especifico cuando se realice, con el replica-set tenemos las réplicas en tiempo real, estamos respaldando la información de forma que conforme se vaya escribiendo en el nodo principal esta se replicará de manera inmediata al secundario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "12e04dc237e84fb96ae79107c483c380": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.849,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.83,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.802,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. este tipo de arquitectura no tiene los nodos asignados de manera fija, si no que van cambiando a medida que sea necesario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.816,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. este tipo de arquitectura no tiene los nodos asignados de manera fija, si no que van cambiando a medida que sea necesario. cuando el nodo primario deja de tener disponibilidad, otro nodo es asignado en su lugar. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.815,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. este tipo de arquitectura no tiene los nodos asignados de manera fija, si no que van cambiando a medida que sea necesario. cuando el nodo primario deja de tener disponibilidad, otro nodo es asignado en su lugar. la principal diferencia con mongodump, es que en un replica-set, los datos están siendo replicados constantemente y con mongodump, lo que tenemos es una copia hecha de los datos, como una foto en el momento que se tomaron. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.8,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, otro nodo es asignado en su lugar. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.77,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, otro nodo es asignado en su lugar. la principal diferencia con mongodump, es que en un replica-set, los datos están siendo replicados constantemente y con mongodump, lo que tenemos es una copia hecha de los datos, como una foto en el momento que se tomaron. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.735,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. este tipo de arquitectura no tiene los nodos asignados de manera fija, si no que van cambiando a medida que sea necesario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.762,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. este tipo de arquitectura no tiene los nodos asignados de manera fija, si no que van cambiando a medida que sea necesario. cuando el nodo primario deja de tener disponibilidad, otro nodo es asignado en su lugar. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.758,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. este tipo de arquitectura no tiene los nodos asignados de manera fija, si no que van cambiando a medida que sea necesario. cuando el nodo primario deja de tener disponibilidad, otro nodo es asignado en su lugar. la principal diferencia con mongodump, es que en un replica-set, los datos están siendo replicados constantemente y con mongodump, lo que tenemos es una copia hecha de los datos, como una foto en el momento que se tomaron. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, otro nodo es asignado en su lugar. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. este tipo de arquitectura no tiene los nodos asignados de manera fija, si no que van cambiando a medida que sea necesario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. este tipo de arquitectura no tiene los nodos asignados de manera fija, si no que van cambiando a medida que sea necesario. cuando el nodo primario deja de tener disponibilidad, otro nodo es asignado en su lugar. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. este tipo de arquitectura no tiene los nodos asignados de manera fija, si no que van cambiando a medida que sea necesario. cuando el nodo primario deja de tener disponibilidad, otro nodo es asignado en su lugar. la principal diferencia con mongodump, es que en un replica-set, los datos están siendo replicados constantemente y con mongodump, lo que tenemos es una copia hecha de los datos, como una foto en el momento que se tomaron. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "la principal diferencia con mongodump, es que en un replica-set, los datos están siendo replicados constantemente y con mongodump, lo que tenemos es una copia hecha de los datos, como una foto en el momento que se tomaron. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, otro nodo es asignado en su lugar. la principal diferencia con mongodump, es que en un replica-set, los datos están siendo replicados constantemente y con mongodump, lo que tenemos es una copia hecha de los datos, como una foto en el momento que se tomaron. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. este tipo de arquitectura no tiene los nodos asignados de manera fija, si no que van cambiando a medida que sea necesario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. este tipo de arquitectura no tiene los nodos asignados de manera fija, si no que van cambiando a medida que sea necesario. cuando el nodo primario deja de tener disponibilidad, otro nodo es asignado en su lugar. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. este tipo de arquitectura no tiene los nodos asignados de manera fija, si no que van cambiando a medida que sea necesario. cuando el nodo primario deja de tener disponibilidad, otro nodo es asignado en su lugar. la principal diferencia con mongodump, es que en un replica-set, los datos están siendo replicados constantemente y con mongodump, lo que tenemos es una copia hecha de los datos, como una foto en el momento que se tomaron. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. este tipo de arquitectura no tiene los nodos asignados de manera fija, si no que van cambiando a medida que sea necesario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. este tipo de arquitectura no tiene los nodos asignados de manera fija, si no que van cambiando a medida que sea necesario. cuando el nodo primario deja de tener disponibilidad, otro nodo es asignado en su lugar. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "la arquitectura replica-set en mongodb, su función principal es tener los datos disponibles en todo momento para ofrecer una mayor consistencia de los datosconsta mínimo de una configuración de tres nodos: dos en donde se dividen en primario y secundario en donde el primario hace una replicación de los datos en el secundario. y tenemos uno llamado árbitro que es el que se encarga de asignar el nodo primario cuando sea necesario. este tipo de arquitectura no tiene los nodos asignados de manera fija, si no que van cambiando a medida que sea necesario. cuando el nodo primario deja de tener disponibilidad, otro nodo es asignado en su lugar. la principal diferencia con mongodump, es que en un replica-set, los datos están siendo replicados constantemente y con mongodump, lo que tenemos es una copia hecha de los datos, como una foto en el momento que se tomaron. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "cd6e6f55c5f29dadd7af0d590e68bdc1": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.807,
                                            "Frase": "la arquitectura replica-set en mongodb, el cual se basa en una replicación de servidores para tener en todo momento respaldo de los datos y disponibilidad en todo momento a los mismos, cuando existe algún fallo de red en el sistema. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.801,
                                            "Frase": "la arquitectura replica-set en mongodb, el cual se basa en una replicación de servidores para tener en todo momento respaldo de los datos y disponibilidad en todo momento a los mismos, cuando existe algún fallo de red en el sistema. al estar configurado por lo mínimo por 3 servidores, uno primario (administrador) y otros 2 secundarios dentro del cual uno de ellos debe actuar como árbitro, el cual decidirá en caso de fallo del primario, qué secundario se convierte en primario (disponibilidad en todo momento de cada nodo disponible para acceder a los datos). ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.815,
                                            "Frase": "la arquitectura replica-set en mongodb, el cual se basa en una replicación de servidores para tener en todo momento respaldo de los datos y disponibilidad en todo momento a los mismos, cuando existe algún fallo de red en el sistema. al estar configurado por lo mínimo por 3 servidores, uno primario (administrador) y otros 2 secundarios dentro del cual uno de ellos debe actuar como árbitro, el cual decidirá en caso de fallo del primario, qué secundario se convierte en primario (disponibilidad en todo momento de cada nodo disponible para acceder a los datos). la diferencia con mongodump, es que no es un volcado de datos a otra base de datos, sino que cada nodo es una instancia a los datos, por lo que se puede tener la otra ventaja sobre balaceo de carga y todo esto es transparente al cliente. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.691,
                                            "Frase": "al estar configurado por lo mínimo por 3 servidores, uno primario (administrador) y otros 2 secundarios dentro del cual uno de ellos debe actuar como árbitro, el cual decidirá en caso de fallo del primario, qué secundario se convierte en primario (disponibilidad en todo momento de cada nodo disponible para acceder a los datos). ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.733,
                                            "Frase": "al estar configurado por lo mínimo por 3 servidores, uno primario (administrador) y otros 2 secundarios dentro del cual uno de ellos debe actuar como árbitro, el cual decidirá en caso de fallo del primario, qué secundario se convierte en primario (disponibilidad en todo momento de cada nodo disponible para acceder a los datos). la diferencia con mongodump, es que no es un volcado de datos a otra base de datos, sino que cada nodo es una instancia a los datos, por lo que se puede tener la otra ventaja sobre balaceo de carga y todo esto es transparente al cliente. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.729,
                                            "Frase": "la arquitectura replica-set en mongodb, el cual se basa en una replicación de servidores para tener en todo momento respaldo de los datos y disponibilidad en todo momento a los mismos, cuando existe algún fallo de red en el sistema. al estar configurado por lo mínimo por 3 servidores, uno primario (administrador) y otros 2 secundarios dentro del cual uno de ellos debe actuar como árbitro, el cual decidirá en caso de fallo del primario, qué secundario se convierte en primario (disponibilidad en todo momento de cada nodo disponible para acceder a los datos). la diferencia con mongodump, es que no es un volcado de datos a otra base de datos, sino que cada nodo es una instancia a los datos, por lo que se puede tener la otra ventaja sobre balaceo de carga y todo esto es transparente al cliente. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.882,
                                            "Frase": "al estar configurado por lo mínimo por 3 servidores, uno primario (administrador) y otros 2 secundarios dentro del cual uno de ellos debe actuar como árbitro, el cual decidirá en caso de fallo del primario, qué secundario se convierte en primario (disponibilidad en todo momento de cada nodo disponible para acceder a los datos). ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "la arquitectura replica-set en mongodb, el cual se basa en una replicación de servidores para tener en todo momento respaldo de los datos y disponibilidad en todo momento a los mismos, cuando existe algún fallo de red en el sistema. al estar configurado por lo mínimo por 3 servidores, uno primario (administrador) y otros 2 secundarios dentro del cual uno de ellos debe actuar como árbitro, el cual decidirá en caso de fallo del primario, qué secundario se convierte en primario (disponibilidad en todo momento de cada nodo disponible para acceder a los datos). ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.892,
                                            "Frase": "la arquitectura replica-set en mongodb, el cual se basa en una replicación de servidores para tener en todo momento respaldo de los datos y disponibilidad en todo momento a los mismos, cuando existe algún fallo de red en el sistema. al estar configurado por lo mínimo por 3 servidores, uno primario (administrador) y otros 2 secundarios dentro del cual uno de ellos debe actuar como árbitro, el cual decidirá en caso de fallo del primario, qué secundario se convierte en primario (disponibilidad en todo momento de cada nodo disponible para acceder a los datos). la diferencia con mongodump, es que no es un volcado de datos a otra base de datos, sino que cada nodo es una instancia a los datos, por lo que se puede tener la otra ventaja sobre balaceo de carga y todo esto es transparente al cliente. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "la arquitectura replica-set en mongodb, el cual se basa en una replicación de servidores para tener en todo momento respaldo de los datos y disponibilidad en todo momento a los mismos, cuando existe algún fallo de red en el sistema. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "al estar configurado por lo mínimo por 3 servidores, uno primario (administrador) y otros 2 secundarios dentro del cual uno de ellos debe actuar como árbitro, el cual decidirá en caso de fallo del primario, qué secundario se convierte en primario (disponibilidad en todo momento de cada nodo disponible para acceder a los datos). la diferencia con mongodump, es que no es un volcado de datos a otra base de datos, sino que cada nodo es una instancia a los datos, por lo que se puede tener la otra ventaja sobre balaceo de carga y todo esto es transparente al cliente. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "la arquitectura replica-set en mongodb, el cual se basa en una replicación de servidores para tener en todo momento respaldo de los datos y disponibilidad en todo momento a los mismos, cuando existe algún fallo de red en el sistema. al estar configurado por lo mínimo por 3 servidores, uno primario (administrador) y otros 2 secundarios dentro del cual uno de ellos debe actuar como árbitro, el cual decidirá en caso de fallo del primario, qué secundario se convierte en primario (disponibilidad en todo momento de cada nodo disponible para acceder a los datos). la diferencia con mongodump, es que no es un volcado de datos a otra base de datos, sino que cada nodo es una instancia a los datos, por lo que se puede tener la otra ventaja sobre balaceo de carga y todo esto es transparente al cliente. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "la arquitectura replica-set en mongodb, el cual se basa en una replicación de servidores para tener en todo momento respaldo de los datos y disponibilidad en todo momento a los mismos, cuando existe algún fallo de red en el sistema. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.899,
                                            "Frase": "la arquitectura replica-set en mongodb, el cual se basa en una replicación de servidores para tener en todo momento respaldo de los datos y disponibilidad en todo momento a los mismos, cuando existe algún fallo de red en el sistema. al estar configurado por lo mínimo por 3 servidores, uno primario (administrador) y otros 2 secundarios dentro del cual uno de ellos debe actuar como árbitro, el cual decidirá en caso de fallo del primario, qué secundario se convierte en primario (disponibilidad en todo momento de cada nodo disponible para acceder a los datos). ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "la arquitectura replica-set en mongodb, el cual se basa en una replicación de servidores para tener en todo momento respaldo de los datos y disponibilidad en todo momento a los mismos, cuando existe algún fallo de red en el sistema. al estar configurado por lo mínimo por 3 servidores, uno primario (administrador) y otros 2 secundarios dentro del cual uno de ellos debe actuar como árbitro, el cual decidirá en caso de fallo del primario, qué secundario se convierte en primario (disponibilidad en todo momento de cada nodo disponible para acceder a los datos). la diferencia con mongodump, es que no es un volcado de datos a otra base de datos, sino que cada nodo es una instancia a los datos, por lo que se puede tener la otra ventaja sobre balaceo de carga y todo esto es transparente al cliente. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "de5298c05b3228e27288d4bad0d259b5": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.837,
                                            "Frase": "su configuración mínima tiene tres nodos (primario, secundario y arbitro), ya que si el nodo primario deja de tener disponibilidad el nodo secundario que actúa como réplica del primario estará disponible, a diferencia de mongodump que realiza una copia de seguridad de los datos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.831,
                                            "Frase": "este modelo nos permite una recuperación a fallos de forma automática, donde una de las principales características es que no se define un nodo maestro estáticamente, es decir, se asigna al azar dependiendo de la disponibilidad del nodo. su configuración mínima tiene tres nodos (primario, secundario y arbitro), ya que si el nodo primario deja de tener disponibilidad el nodo secundario que actúa como réplica del primario estará disponible, a diferencia de mongodump que realiza una copia de seguridad de los datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.773,
                                            "Frase": "su configuración mínima tiene tres nodos (primario, secundario y arbitro), ya que si el nodo primario deja de tener disponibilidad el nodo secundario que actúa como réplica del primario estará disponible, a diferencia de mongodump que realiza una copia de seguridad de los datos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.784,
                                            "Frase": "este modelo nos permite una recuperación a fallos de forma automática, donde una de las principales características es que no se define un nodo maestro estáticamente, es decir, se asigna al azar dependiendo de la disponibilidad del nodo. su configuración mínima tiene tres nodos (primario, secundario y arbitro), ya que si el nodo primario deja de tener disponibilidad el nodo secundario que actúa como réplica del primario estará disponible, a diferencia de mongodump que realiza una copia de seguridad de los datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "su configuración mínima tiene tres nodos (primario, secundario y arbitro), ya que si el nodo primario deja de tener disponibilidad el nodo secundario que actúa como réplica del primario estará disponible, a diferencia de mongodump que realiza una copia de seguridad de los datos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "este modelo nos permite una recuperación a fallos de forma automática, donde una de las principales características es que no se define un nodo maestro estáticamente, es decir, se asigna al azar dependiendo de la disponibilidad del nodo. su configuración mínima tiene tres nodos (primario, secundario y arbitro), ya que si el nodo primario deja de tener disponibilidad el nodo secundario que actúa como réplica del primario estará disponible, a diferencia de mongodump que realiza una copia de seguridad de los datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "este modelo nos permite una recuperación a fallos de forma automática, donde una de las principales características es que no se define un nodo maestro estáticamente, es decir, se asigna al azar dependiendo de la disponibilidad del nodo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "este modelo nos permite una recuperación a fallos de forma automática, donde una de las principales características es que no se define un nodo maestro estáticamente, es decir, se asigna al azar dependiendo de la disponibilidad del nodo. su configuración mínima tiene tres nodos (primario, secundario y arbitro), ya que si el nodo primario deja de tener disponibilidad el nodo secundario que actúa como réplica del primario estará disponible, a diferencia de mongodump que realiza una copia de seguridad de los datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "su configuración mínima tiene tres nodos (primario, secundario y arbitro), ya que si el nodo primario deja de tener disponibilidad el nodo secundario que actúa como réplica del primario estará disponible, a diferencia de mongodump que realiza una copia de seguridad de los datos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "este modelo nos permite una recuperación a fallos de forma automática, donde una de las principales características es que no se define un nodo maestro estáticamente, es decir, se asigna al azar dependiendo de la disponibilidad del nodo. su configuración mínima tiene tres nodos (primario, secundario y arbitro), ya que si el nodo primario deja de tener disponibilidad el nodo secundario que actúa como réplica del primario estará disponible, a diferencia de mongodump que realiza una copia de seguridad de los datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "809380c58fbf2d187a3ebff91f37b229": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.86,
                                            "Frase": "nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. mongodump es una copia de los datos en un momento específico del tiempo , replicaset es una copia viva y actualizada al momento. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.85,
                                            "Frase": "por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. mongodump es una copia de los datos en un momento específico del tiempo , replicaset es una copia viva y actualizada al momento. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.852,
                                            "Frase": "la función de un replica  set es el respaldo. nuestro servidor de datos conectado por red, puede caer en algún momento dejando de estar así disponible, es por ello a ese servidor que llamaremos ahora nodo primario, estará conectado a otro servidor o nodo secundario que se encargará de hacer una copia viva, es decir de estar actualizado con respecto al contenido del nodo primario. en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.82,
                                            "Frase": "la función de un replica  set es el respaldo. nuestro servidor de datos conectado por red, puede caer en algún momento dejando de estar así disponible, es por ello a ese servidor que llamaremos ahora nodo primario, estará conectado a otro servidor o nodo secundario que se encargará de hacer una copia viva, es decir de estar actualizado con respecto al contenido del nodo primario. en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.827,
                                            "Frase": "la función de un replica  set es el respaldo. nuestro servidor de datos conectado por red, puede caer en algún momento dejando de estar así disponible, es por ello a ese servidor que llamaremos ahora nodo primario, estará conectado a otro servidor o nodo secundario que se encargará de hacer una copia viva, es decir de estar actualizado con respecto al contenido del nodo primario. en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. mongodump es una copia de los datos en un momento específico del tiempo , replicaset es una copia viva y actualizada al momento. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "la función de un replica  set es el respaldo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.859,
                                            "Frase": "por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.874,
                                            "Frase": "por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. mongodump es una copia de los datos en un momento específico del tiempo , replicaset es una copia viva y actualizada al momento. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.87,
                                            "Frase": "en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. mongodump es una copia de los datos en un momento específico del tiempo , replicaset es una copia viva y actualizada al momento. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.85,
                                            "Frase": "la función de un replica  set es el respaldo. nuestro servidor de datos conectado por red, puede caer en algún momento dejando de estar así disponible, es por ello a ese servidor que llamaremos ahora nodo primario, estará conectado a otro servidor o nodo secundario que se encargará de hacer una copia viva, es decir de estar actualizado con respecto al contenido del nodo primario. en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.857,
                                            "Frase": "la función de un replica  set es el respaldo. nuestro servidor de datos conectado por red, puede caer en algún momento dejando de estar así disponible, es por ello a ese servidor que llamaremos ahora nodo primario, estará conectado a otro servidor o nodo secundario que se encargará de hacer una copia viva, es decir de estar actualizado con respecto al contenido del nodo primario. en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. mongodump es una copia de los datos en un momento específico del tiempo , replicaset es una copia viva y actualizada al momento. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.958,
                                            "Frase": "en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "la función de un replica  set es el respaldo. nuestro servidor de datos conectado por red, puede caer en algún momento dejando de estar así disponible, es por ello a ese servidor que llamaremos ahora nodo primario, estará conectado a otro servidor o nodo secundario que se encargará de hacer una copia viva, es decir de estar actualizado con respecto al contenido del nodo primario. en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "la función de un replica  set es el respaldo. nuestro servidor de datos conectado por red, puede caer en algún momento dejando de estar así disponible, es por ello a ese servidor que llamaremos ahora nodo primario, estará conectado a otro servidor o nodo secundario que se encargará de hacer una copia viva, es decir de estar actualizado con respecto al contenido del nodo primario. en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "la función de un replica  set es el respaldo. nuestro servidor de datos conectado por red, puede caer en algún momento dejando de estar así disponible, es por ello a ese servidor que llamaremos ahora nodo primario, estará conectado a otro servidor o nodo secundario que se encargará de hacer una copia viva, es decir de estar actualizado con respecto al contenido del nodo primario. en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. mongodump es una copia de los datos en un momento específico del tiempo , replicaset es una copia viva y actualizada al momento. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.833,
                                            "Frase": "nuestro servidor de datos conectado por red, puede caer en algún momento dejando de estar así disponible, es por ello a ese servidor que llamaremos ahora nodo primario, estará conectado a otro servidor o nodo secundario que se encargará de hacer una copia viva, es decir de estar actualizado con respecto al contenido del nodo primario. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.874,
                                            "Frase": "por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.86,
                                            "Frase": "nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. mongodump es una copia de los datos en un momento específico del tiempo , replicaset es una copia viva y actualizada al momento. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.863,
                                            "Frase": "por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. mongodump es una copia de los datos en un momento específico del tiempo , replicaset es una copia viva y actualizada al momento. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.838,
                                            "Frase": "la función de un replica  set es el respaldo. nuestro servidor de datos conectado por red, puede caer en algún momento dejando de estar así disponible, es por ello a ese servidor que llamaremos ahora nodo primario, estará conectado a otro servidor o nodo secundario que se encargará de hacer una copia viva, es decir de estar actualizado con respecto al contenido del nodo primario. en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.838,
                                            "Frase": "nuestro servidor de datos conectado por red, puede caer en algún momento dejando de estar así disponible, es por ello a ese servidor que llamaremos ahora nodo primario, estará conectado a otro servidor o nodo secundario que se encargará de hacer una copia viva, es decir de estar actualizado con respecto al contenido del nodo primario. en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. mongodump es una copia de los datos en un momento específico del tiempo , replicaset es una copia viva y actualizada al momento. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.835,
                                            "Frase": "la función de un replica  set es el respaldo. nuestro servidor de datos conectado por red, puede caer en algún momento dejando de estar así disponible, es por ello a ese servidor que llamaremos ahora nodo primario, estará conectado a otro servidor o nodo secundario que se encargará de hacer una copia viva, es decir de estar actualizado con respecto al contenido del nodo primario. en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. mongodump es una copia de los datos en un momento específico del tiempo , replicaset es una copia viva y actualizada al momento. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.953,
                                            "Frase": "por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.958,
                                            "Frase": "nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. mongodump es una copia de los datos en un momento específico del tiempo , replicaset es una copia viva y actualizada al momento. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. mongodump es una copia de los datos en un momento específico del tiempo , replicaset es una copia viva y actualizada al momento. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "la función de un replica  set es el respaldo. nuestro servidor de datos conectado por red, puede caer en algún momento dejando de estar así disponible, es por ello a ese servidor que llamaremos ahora nodo primario, estará conectado a otro servidor o nodo secundario que se encargará de hacer una copia viva, es decir de estar actualizado con respecto al contenido del nodo primario. en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "la función de un replica  set es el respaldo. nuestro servidor de datos conectado por red, puede caer en algún momento dejando de estar así disponible, es por ello a ese servidor que llamaremos ahora nodo primario, estará conectado a otro servidor o nodo secundario que se encargará de hacer una copia viva, es decir de estar actualizado con respecto al contenido del nodo primario. en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "la función de un replica  set es el respaldo. nuestro servidor de datos conectado por red, puede caer en algún momento dejando de estar así disponible, es por ello a ese servidor que llamaremos ahora nodo primario, estará conectado a otro servidor o nodo secundario que se encargará de hacer una copia viva, es decir de estar actualizado con respecto al contenido del nodo primario. en el caso de caída del nodo primario, es el nodo segundario (en el caso de tener sólo un servidor más) el que tomaría el lugar del nodo primario para abastecer al cliente. por lo que la configuración mínima es un nodo primario y uno secundario. nota: la toma de puesto del primario al secundario en caso de caída de red es compleja,  y depende de votación ( también de otros parámetros configurables) . normalmente , además del primario y del segundario se suele añadir un arbitro al conjunto replicaset que no es un servidor para almacenar datos si no un mecanismo para desempatar y asegurar que en caso de caída de red el segundario ocupe el sitio del primario. mongodump es una copia de los datos en un momento específico del tiempo , replicaset es una copia viva y actualizada al momento. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "1e7e71f02edee795c440039bec2a9229": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "la función de un replica-set es la de implementar un esquema de redundancia y tolerancia a fallos, en base a la implementación de la réplica. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "la función de un replica-set es la de implementar un esquema de redundancia y tolerancia a fallos, en base a la implementación de la réplica. la configuración mínima consta de 3 nodos cuyos roles son: primario, secundario y arbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "la función de un replica-set es la de implementar un esquema de redundancia y tolerancia a fallos, en base a la implementación de la réplica. la configuración mínima consta de 3 nodos cuyos roles son: primario, secundario y arbitro. cuando el nodo primario deja de tener disponibilidad, el arbitro coordina y gestiona todas las acciones necesarias para que el nodo secundario pase a reemplazar al primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "la función de un replica-set es la de implementar un esquema de redundancia y tolerancia a fallos, en base a la implementación de la réplica. la configuración mínima consta de 3 nodos cuyos roles son: primario, secundario y arbitro. cuando el nodo primario deja de tener disponibilidad, el arbitro coordina y gestiona todas las acciones necesarias para que el nodo secundario pase a reemplazar al primario. la diferencia con mongodump es que este es más bien una herramienta y no una arquitectura de replicación como lo es replica-set; mongodump genera un archivo de respaldo que, en el caso de ser necesario, deberá ser restaurado a una base de datos destino, lo que toma tiempo e implica una latencia mayor para que los sistemas estén operativos nuevamente en el escenario de un fallo de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.783,
                                            "Frase": "la diferencia con mongodump es que este es más bien una herramienta y no una arquitectura de replicación como lo es replica-set; mongodump genera un archivo de respaldo que, en el caso de ser necesario, deberá ser restaurado a una base de datos destino, lo que toma tiempo e implica una latencia mayor para que los sistemas estén operativos nuevamente en el escenario de un fallo de la base de datos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.784,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, el arbitro coordina y gestiona todas las acciones necesarias para que el nodo secundario pase a reemplazar al primario. la diferencia con mongodump es que este es más bien una herramienta y no una arquitectura de replicación como lo es replica-set; mongodump genera un archivo de respaldo que, en el caso de ser necesario, deberá ser restaurado a una base de datos destino, lo que toma tiempo e implica una latencia mayor para que los sistemas estén operativos nuevamente en el escenario de un fallo de la base de datos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.799,
                                            "Frase": "la función de un replica-set es la de implementar un esquema de redundancia y tolerancia a fallos, en base a la implementación de la réplica. la configuración mínima consta de 3 nodos cuyos roles son: primario, secundario y arbitro. cuando el nodo primario deja de tener disponibilidad, el arbitro coordina y gestiona todas las acciones necesarias para que el nodo secundario pase a reemplazar al primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.812,
                                            "Frase": "la función de un replica-set es la de implementar un esquema de redundancia y tolerancia a fallos, en base a la implementación de la réplica. la configuración mínima consta de 3 nodos cuyos roles son: primario, secundario y arbitro. cuando el nodo primario deja de tener disponibilidad, el arbitro coordina y gestiona todas las acciones necesarias para que el nodo secundario pase a reemplazar al primario. la diferencia con mongodump es que este es más bien una herramienta y no una arquitectura de replicación como lo es replica-set; mongodump genera un archivo de respaldo que, en el caso de ser necesario, deberá ser restaurado a una base de datos destino, lo que toma tiempo e implica una latencia mayor para que los sistemas estén operativos nuevamente en el escenario de un fallo de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, el arbitro coordina y gestiona todas las acciones necesarias para que el nodo secundario pase a reemplazar al primario. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "la configuración mínima consta de 3 nodos cuyos roles son: primario, secundario y arbitro. cuando el nodo primario deja de tener disponibilidad, el arbitro coordina y gestiona todas las acciones necesarias para que el nodo secundario pase a reemplazar al primario. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "la configuración mínima consta de 3 nodos cuyos roles son: primario, secundario y arbitro. cuando el nodo primario deja de tener disponibilidad, el arbitro coordina y gestiona todas las acciones necesarias para que el nodo secundario pase a reemplazar al primario. la diferencia con mongodump es que este es más bien una herramienta y no una arquitectura de replicación como lo es replica-set; mongodump genera un archivo de respaldo que, en el caso de ser necesario, deberá ser restaurado a una base de datos destino, lo que toma tiempo e implica una latencia mayor para que los sistemas estén operativos nuevamente en el escenario de un fallo de la base de datos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "la función de un replica-set es la de implementar un esquema de redundancia y tolerancia a fallos, en base a la implementación de la réplica. la configuración mínima consta de 3 nodos cuyos roles son: primario, secundario y arbitro. cuando el nodo primario deja de tener disponibilidad, el arbitro coordina y gestiona todas las acciones necesarias para que el nodo secundario pase a reemplazar al primario. la diferencia con mongodump es que este es más bien una herramienta y no una arquitectura de replicación como lo es replica-set; mongodump genera un archivo de respaldo que, en el caso de ser necesario, deberá ser restaurado a una base de datos destino, lo que toma tiempo e implica una latencia mayor para que los sistemas estén operativos nuevamente en el escenario de un fallo de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "la diferencia con mongodump es que este es más bien una herramienta y no una arquitectura de replicación como lo es replica-set; mongodump genera un archivo de respaldo que, en el caso de ser necesario, deberá ser restaurado a una base de datos destino, lo que toma tiempo e implica una latencia mayor para que los sistemas estén operativos nuevamente en el escenario de un fallo de la base de datos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, el arbitro coordina y gestiona todas las acciones necesarias para que el nodo secundario pase a reemplazar al primario. la diferencia con mongodump es que este es más bien una herramienta y no una arquitectura de replicación como lo es replica-set; mongodump genera un archivo de respaldo que, en el caso de ser necesario, deberá ser restaurado a una base de datos destino, lo que toma tiempo e implica una latencia mayor para que los sistemas estén operativos nuevamente en el escenario de un fallo de la base de datos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "la configuración mínima consta de 3 nodos cuyos roles son: primario, secundario y arbitro. cuando el nodo primario deja de tener disponibilidad, el arbitro coordina y gestiona todas las acciones necesarias para que el nodo secundario pase a reemplazar al primario. la diferencia con mongodump es que este es más bien una herramienta y no una arquitectura de replicación como lo es replica-set; mongodump genera un archivo de respaldo que, en el caso de ser necesario, deberá ser restaurado a una base de datos destino, lo que toma tiempo e implica una latencia mayor para que los sistemas estén operativos nuevamente en el escenario de un fallo de la base de datos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "la función de un replica-set es la de implementar un esquema de redundancia y tolerancia a fallos, en base a la implementación de la réplica. la configuración mínima consta de 3 nodos cuyos roles son: primario, secundario y arbitro. cuando el nodo primario deja de tener disponibilidad, el arbitro coordina y gestiona todas las acciones necesarias para que el nodo secundario pase a reemplazar al primario. la diferencia con mongodump es que este es más bien una herramienta y no una arquitectura de replicación como lo es replica-set; mongodump genera un archivo de respaldo que, en el caso de ser necesario, deberá ser restaurado a una base de datos destino, lo que toma tiempo e implica una latencia mayor para que los sistemas estén operativos nuevamente en el escenario de un fallo de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "la diferencia con mongodump es que este es más bien una herramienta y no una arquitectura de replicación como lo es replica-set; mongodump genera un archivo de respaldo que, en el caso de ser necesario, deberá ser restaurado a una base de datos destino, lo que toma tiempo e implica una latencia mayor para que los sistemas estén operativos nuevamente en el escenario de un fallo de la base de datos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, el arbitro coordina y gestiona todas las acciones necesarias para que el nodo secundario pase a reemplazar al primario. la diferencia con mongodump es que este es más bien una herramienta y no una arquitectura de replicación como lo es replica-set; mongodump genera un archivo de respaldo que, en el caso de ser necesario, deberá ser restaurado a una base de datos destino, lo que toma tiempo e implica una latencia mayor para que los sistemas estén operativos nuevamente en el escenario de un fallo de la base de datos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.953,
                                            "Frase": "la función de un replica-set es la de implementar un esquema de redundancia y tolerancia a fallos, en base a la implementación de la réplica. la configuración mínima consta de 3 nodos cuyos roles son: primario, secundario y arbitro. cuando el nodo primario deja de tener disponibilidad, el arbitro coordina y gestiona todas las acciones necesarias para que el nodo secundario pase a reemplazar al primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.963,
                                            "Frase": "la función de un replica-set es la de implementar un esquema de redundancia y tolerancia a fallos, en base a la implementación de la réplica. la configuración mínima consta de 3 nodos cuyos roles son: primario, secundario y arbitro. cuando el nodo primario deja de tener disponibilidad, el arbitro coordina y gestiona todas las acciones necesarias para que el nodo secundario pase a reemplazar al primario. la diferencia con mongodump es que este es más bien una herramienta y no una arquitectura de replicación como lo es replica-set; mongodump genera un archivo de respaldo que, en el caso de ser necesario, deberá ser restaurado a una base de datos destino, lo que toma tiempo e implica una latencia mayor para que los sistemas estén operativos nuevamente en el escenario de un fallo de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "1c349c3eb06025e5ccc0a215cc9ad35f": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "la arquitectura replica set es una evolución del sistema de replicación de archivos maestro-esclavo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "la arquitectura replica set es una evolución del sistema de replicación de archivos maestro-esclavo. con la arquitectura replica-set somos capaces de tener toda la información en tiempo real duplicada en diferentes nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.848,
                                            "Frase": "la arquitectura replica set es una evolución del sistema de replicación de archivos maestro-esclavo. con la arquitectura replica-set somos capaces de tener toda la información en tiempo real duplicada en diferentes nodos. una correcta arquitectura de replica-set debe contar con mínimo tres nodos que se comunican cada dos segundos: árbitro (que no almacena datos sino que decide qué otro nodo es el primario), primario (principal fuente de acceso a los datos) y secundario (que replica todo lo que hace el nodo primario). ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "la arquitectura replica set es una evolución del sistema de replicación de archivos maestro-esclavo. con la arquitectura replica-set somos capaces de tener toda la información en tiempo real duplicada en diferentes nodos. una correcta arquitectura de replica-set debe contar con mínimo tres nodos que se comunican cada dos segundos: árbitro (que no almacena datos sino que decide qué otro nodo es el primario), primario (principal fuente de acceso a los datos) y secundario (que replica todo lo que hace el nodo primario). mongodump, sin embargo, se usa para crear una copia de seguridad de una instancia en ejecución según la necesidad (colecciones completas, base de datos) en un momento de tiempo determinado. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.778,
                                            "Frase": "la arquitectura replica set es una evolución del sistema de replicación de archivos maestro-esclavo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.763,
                                            "Frase": "una correcta arquitectura de replica-set debe contar con mínimo tres nodos que se comunican cada dos segundos: árbitro (que no almacena datos sino que decide qué otro nodo es el primario), primario (principal fuente de acceso a los datos) y secundario (que replica todo lo que hace el nodo primario). mongodump, sin embargo, se usa para crear una copia de seguridad de una instancia en ejecución según la necesidad (colecciones completas, base de datos) en un momento de tiempo determinado. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.767,
                                            "Frase": "la arquitectura replica set es una evolución del sistema de replicación de archivos maestro-esclavo. con la arquitectura replica-set somos capaces de tener toda la información en tiempo real duplicada en diferentes nodos. una correcta arquitectura de replica-set debe contar con mínimo tres nodos que se comunican cada dos segundos: árbitro (que no almacena datos sino que decide qué otro nodo es el primario), primario (principal fuente de acceso a los datos) y secundario (que replica todo lo que hace el nodo primario). ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.783,
                                            "Frase": "la arquitectura replica set es una evolución del sistema de replicación de archivos maestro-esclavo. con la arquitectura replica-set somos capaces de tener toda la información en tiempo real duplicada en diferentes nodos. una correcta arquitectura de replica-set debe contar con mínimo tres nodos que se comunican cada dos segundos: árbitro (que no almacena datos sino que decide qué otro nodo es el primario), primario (principal fuente de acceso a los datos) y secundario (que replica todo lo que hace el nodo primario). mongodump, sin embargo, se usa para crear una copia de seguridad de una instancia en ejecución según la necesidad (colecciones completas, base de datos) en un momento de tiempo determinado. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.843,
                                            "Frase": "mongodump, sin embargo, se usa para crear una copia de seguridad de una instancia en ejecución según la necesidad (colecciones completas, base de datos) en un momento de tiempo determinado. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.87,
                                            "Frase": "una correcta arquitectura de replica-set debe contar con mínimo tres nodos que se comunican cada dos segundos: árbitro (que no almacena datos sino que decide qué otro nodo es el primario), primario (principal fuente de acceso a los datos) y secundario (que replica todo lo que hace el nodo primario). mongodump, sin embargo, se usa para crear una copia de seguridad de una instancia en ejecución según la necesidad (colecciones completas, base de datos) en un momento de tiempo determinado. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.871,
                                            "Frase": "con la arquitectura replica-set somos capaces de tener toda la información en tiempo real duplicada en diferentes nodos. una correcta arquitectura de replica-set debe contar con mínimo tres nodos que se comunican cada dos segundos: árbitro (que no almacena datos sino que decide qué otro nodo es el primario), primario (principal fuente de acceso a los datos) y secundario (que replica todo lo que hace el nodo primario). mongodump, sin embargo, se usa para crear una copia de seguridad de una instancia en ejecución según la necesidad (colecciones completas, base de datos) en un momento de tiempo determinado. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.873,
                                            "Frase": "la arquitectura replica set es una evolución del sistema de replicación de archivos maestro-esclavo. con la arquitectura replica-set somos capaces de tener toda la información en tiempo real duplicada en diferentes nodos. una correcta arquitectura de replica-set debe contar con mínimo tres nodos que se comunican cada dos segundos: árbitro (que no almacena datos sino que decide qué otro nodo es el primario), primario (principal fuente de acceso a los datos) y secundario (que replica todo lo que hace el nodo primario). mongodump, sin embargo, se usa para crear una copia de seguridad de una instancia en ejecución según la necesidad (colecciones completas, base de datos) en un momento de tiempo determinado. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "mongodump, sin embargo, se usa para crear una copia de seguridad de una instancia en ejecución según la necesidad (colecciones completas, base de datos) en un momento de tiempo determinado. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "la arquitectura replica set es una evolución del sistema de replicación de archivos maestro-esclavo. con la arquitectura replica-set somos capaces de tener toda la información en tiempo real duplicada en diferentes nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "con la arquitectura replica-set somos capaces de tener toda la información en tiempo real duplicada en diferentes nodos. una correcta arquitectura de replica-set debe contar con mínimo tres nodos que se comunican cada dos segundos: árbitro (que no almacena datos sino que decide qué otro nodo es el primario), primario (principal fuente de acceso a los datos) y secundario (que replica todo lo que hace el nodo primario). mongodump, sin embargo, se usa para crear una copia de seguridad de una instancia en ejecución según la necesidad (colecciones completas, base de datos) en un momento de tiempo determinado. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "la arquitectura replica set es una evolución del sistema de replicación de archivos maestro-esclavo. con la arquitectura replica-set somos capaces de tener toda la información en tiempo real duplicada en diferentes nodos. una correcta arquitectura de replica-set debe contar con mínimo tres nodos que se comunican cada dos segundos: árbitro (que no almacena datos sino que decide qué otro nodo es el primario), primario (principal fuente de acceso a los datos) y secundario (que replica todo lo que hace el nodo primario). mongodump, sin embargo, se usa para crear una copia de seguridad de una instancia en ejecución según la necesidad (colecciones completas, base de datos) en un momento de tiempo determinado. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "mongodump, sin embargo, se usa para crear una copia de seguridad de una instancia en ejecución según la necesidad (colecciones completas, base de datos) en un momento de tiempo determinado. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "una correcta arquitectura de replica-set debe contar con mínimo tres nodos que se comunican cada dos segundos: árbitro (que no almacena datos sino que decide qué otro nodo es el primario), primario (principal fuente de acceso a los datos) y secundario (que replica todo lo que hace el nodo primario). mongodump, sin embargo, se usa para crear una copia de seguridad de una instancia en ejecución según la necesidad (colecciones completas, base de datos) en un momento de tiempo determinado. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "con la arquitectura replica-set somos capaces de tener toda la información en tiempo real duplicada en diferentes nodos. una correcta arquitectura de replica-set debe contar con mínimo tres nodos que se comunican cada dos segundos: árbitro (que no almacena datos sino que decide qué otro nodo es el primario), primario (principal fuente de acceso a los datos) y secundario (que replica todo lo que hace el nodo primario). mongodump, sin embargo, se usa para crear una copia de seguridad de una instancia en ejecución según la necesidad (colecciones completas, base de datos) en un momento de tiempo determinado. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "la arquitectura replica set es una evolución del sistema de replicación de archivos maestro-esclavo. con la arquitectura replica-set somos capaces de tener toda la información en tiempo real duplicada en diferentes nodos. una correcta arquitectura de replica-set debe contar con mínimo tres nodos que se comunican cada dos segundos: árbitro (que no almacena datos sino que decide qué otro nodo es el primario), primario (principal fuente de acceso a los datos) y secundario (que replica todo lo que hace el nodo primario). mongodump, sin embargo, se usa para crear una copia de seguridad de una instancia en ejecución según la necesidad (colecciones completas, base de datos) en un momento de tiempo determinado. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "035c2f163c323880b81f7ba756ef9989": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "el objetivo de replicación es la disponibilidad y garantía. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "el objetivo de replicación es la disponibilidad y garantía. la configuración mínima se debe componer de 3 nodos, incluido la primaria, pero es posible configurar la cantidad de nodos. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "replica-set se refiere al proceso de replicación/ redundancia de datos basado en maestro-esclavo. el objetivo de replicación es la disponibilidad y garantía. la configuración mínima se debe componer de 3 nodos, incluido la primaria, pero es posible configurar la cantidad de nodos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "el objetivo de replicación es la disponibilidad y garantía. la configuración mínima se debe componer de 3 nodos, incluido la primaria, pero es posible configurar la cantidad de nodos. cuando el nodo primaria deja de tener disponibilidad actúa, existe un mecanismo de acción, uno de los nodos actúa como árbitro para asignar a otro nodo como primaria hasta que se reestablezca el que se cayó. la principal diferencia entre mongodump y replica set es que las réplicas-set continuamente se actualizan con la última información de la base principal, en caso de caída de la base principal es posible levantar uno de los nodos replicas como primario en poco tiempo; a diferencia de mongodump solamente contiene información solamente hasta la fecha en la que se sacó el respaldo y no la última versión, con este respaldo no es posible levantar en caso de caída de la primaria con datos de última versión en poco tiempo. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "replica-set se refiere al proceso de replicación/ redundancia de datos basado en maestro-esclavo. el objetivo de replicación es la disponibilidad y garantía. la configuración mínima se debe componer de 3 nodos, incluido la primaria, pero es posible configurar la cantidad de nodos. cuando el nodo primaria deja de tener disponibilidad actúa, existe un mecanismo de acción, uno de los nodos actúa como árbitro para asignar a otro nodo como primaria hasta que se reestablezca el que se cayó. la principal diferencia entre mongodump y replica set es que las réplicas-set continuamente se actualizan con la última información de la base principal, en caso de caída de la base principal es posible levantar uno de los nodos replicas como primario en poco tiempo; a diferencia de mongodump solamente contiene información solamente hasta la fecha en la que se sacó el respaldo y no la última versión, con este respaldo no es posible levantar en caso de caída de la primaria con datos de última versión en poco tiempo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.803,
                                            "Frase": "el objetivo de replicación es la disponibilidad y garantía. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.784,
                                            "Frase": "replica-set se refiere al proceso de replicación/ redundancia de datos basado en maestro-esclavo. el objetivo de replicación es la disponibilidad y garantía. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.785,
                                            "Frase": "el objetivo de replicación es la disponibilidad y garantía. la configuración mínima se debe componer de 3 nodos, incluido la primaria, pero es posible configurar la cantidad de nodos. cuando el nodo primaria deja de tener disponibilidad actúa, existe un mecanismo de acción, uno de los nodos actúa como árbitro para asignar a otro nodo como primaria hasta que se reestablezca el que se cayó. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.781,
                                            "Frase": "replica-set se refiere al proceso de replicación/ redundancia de datos basado en maestro-esclavo. el objetivo de replicación es la disponibilidad y garantía. la configuración mínima se debe componer de 3 nodos, incluido la primaria, pero es posible configurar la cantidad de nodos. cuando el nodo primaria deja de tener disponibilidad actúa, existe un mecanismo de acción, uno de los nodos actúa como árbitro para asignar a otro nodo como primaria hasta que se reestablezca el que se cayó. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.748,
                                            "Frase": "replica-set se refiere al proceso de replicación/ redundancia de datos basado en maestro-esclavo. el objetivo de replicación es la disponibilidad y garantía. la configuración mínima se debe componer de 3 nodos, incluido la primaria, pero es posible configurar la cantidad de nodos. cuando el nodo primaria deja de tener disponibilidad actúa, existe un mecanismo de acción, uno de los nodos actúa como árbitro para asignar a otro nodo como primaria hasta que se reestablezca el que se cayó. la principal diferencia entre mongodump y replica set es que las réplicas-set continuamente se actualizan con la última información de la base principal, en caso de caída de la base principal es posible levantar uno de los nodos replicas como primario en poco tiempo; a diferencia de mongodump solamente contiene información solamente hasta la fecha en la que se sacó el respaldo y no la última versión, con este respaldo no es posible levantar en caso de caída de la primaria con datos de última versión en poco tiempo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "cuando el nodo primaria deja de tener disponibilidad actúa, existe un mecanismo de acción, uno de los nodos actúa como árbitro para asignar a otro nodo como primaria hasta que se reestablezca el que se cayó. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "la configuración mínima se debe componer de 3 nodos, incluido la primaria, pero es posible configurar la cantidad de nodos. cuando el nodo primaria deja de tener disponibilidad actúa, existe un mecanismo de acción, uno de los nodos actúa como árbitro para asignar a otro nodo como primaria hasta que se reestablezca el que se cayó. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "el objetivo de replicación es la disponibilidad y garantía. la configuración mínima se debe componer de 3 nodos, incluido la primaria, pero es posible configurar la cantidad de nodos. cuando el nodo primaria deja de tener disponibilidad actúa, existe un mecanismo de acción, uno de los nodos actúa como árbitro para asignar a otro nodo como primaria hasta que se reestablezca el que se cayó. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "replica-set se refiere al proceso de replicación/ redundancia de datos basado en maestro-esclavo. el objetivo de replicación es la disponibilidad y garantía. la configuración mínima se debe componer de 3 nodos, incluido la primaria, pero es posible configurar la cantidad de nodos. cuando el nodo primaria deja de tener disponibilidad actúa, existe un mecanismo de acción, uno de los nodos actúa como árbitro para asignar a otro nodo como primaria hasta que se reestablezca el que se cayó. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.877,
                                            "Frase": "replica-set se refiere al proceso de replicación/ redundancia de datos basado en maestro-esclavo. el objetivo de replicación es la disponibilidad y garantía. la configuración mínima se debe componer de 3 nodos, incluido la primaria, pero es posible configurar la cantidad de nodos. cuando el nodo primaria deja de tener disponibilidad actúa, existe un mecanismo de acción, uno de los nodos actúa como árbitro para asignar a otro nodo como primaria hasta que se reestablezca el que se cayó. la principal diferencia entre mongodump y replica set es que las réplicas-set continuamente se actualizan con la última información de la base principal, en caso de caída de la base principal es posible levantar uno de los nodos replicas como primario en poco tiempo; a diferencia de mongodump solamente contiene información solamente hasta la fecha en la que se sacó el respaldo y no la última versión, con este respaldo no es posible levantar en caso de caída de la primaria con datos de última versión en poco tiempo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "la principal diferencia entre mongodump y replica set es que las réplicas-set continuamente se actualizan con la última información de la base principal, en caso de caída de la base principal es posible levantar uno de los nodos replicas como primario en poco tiempo; a diferencia de mongodump solamente contiene información solamente hasta la fecha en la que se sacó el respaldo y no la última versión, con este respaldo no es posible levantar en caso de caída de la primaria con datos de última versión en poco tiempo. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "cuando el nodo primaria deja de tener disponibilidad actúa, existe un mecanismo de acción, uno de los nodos actúa como árbitro para asignar a otro nodo como primaria hasta que se reestablezca el que se cayó. la principal diferencia entre mongodump y replica set es que las réplicas-set continuamente se actualizan con la última información de la base principal, en caso de caída de la base principal es posible levantar uno de los nodos replicas como primario en poco tiempo; a diferencia de mongodump solamente contiene información solamente hasta la fecha en la que se sacó el respaldo y no la última versión, con este respaldo no es posible levantar en caso de caída de la primaria con datos de última versión en poco tiempo. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "la configuración mínima se debe componer de 3 nodos, incluido la primaria, pero es posible configurar la cantidad de nodos. cuando el nodo primaria deja de tener disponibilidad actúa, existe un mecanismo de acción, uno de los nodos actúa como árbitro para asignar a otro nodo como primaria hasta que se reestablezca el que se cayó. la principal diferencia entre mongodump y replica set es que las réplicas-set continuamente se actualizan con la última información de la base principal, en caso de caída de la base principal es posible levantar uno de los nodos replicas como primario en poco tiempo; a diferencia de mongodump solamente contiene información solamente hasta la fecha en la que se sacó el respaldo y no la última versión, con este respaldo no es posible levantar en caso de caída de la primaria con datos de última versión en poco tiempo. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "el objetivo de replicación es la disponibilidad y garantía. la configuración mínima se debe componer de 3 nodos, incluido la primaria, pero es posible configurar la cantidad de nodos. cuando el nodo primaria deja de tener disponibilidad actúa, existe un mecanismo de acción, uno de los nodos actúa como árbitro para asignar a otro nodo como primaria hasta que se reestablezca el que se cayó. la principal diferencia entre mongodump y replica set es que las réplicas-set continuamente se actualizan con la última información de la base principal, en caso de caída de la base principal es posible levantar uno de los nodos replicas como primario en poco tiempo; a diferencia de mongodump solamente contiene información solamente hasta la fecha en la que se sacó el respaldo y no la última versión, con este respaldo no es posible levantar en caso de caída de la primaria con datos de última versión en poco tiempo. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "replica-set se refiere al proceso de replicación/ redundancia de datos basado en maestro-esclavo. el objetivo de replicación es la disponibilidad y garantía. la configuración mínima se debe componer de 3 nodos, incluido la primaria, pero es posible configurar la cantidad de nodos. cuando el nodo primaria deja de tener disponibilidad actúa, existe un mecanismo de acción, uno de los nodos actúa como árbitro para asignar a otro nodo como primaria hasta que se reestablezca el que se cayó. la principal diferencia entre mongodump y replica set es que las réplicas-set continuamente se actualizan con la última información de la base principal, en caso de caída de la base principal es posible levantar uno de los nodos replicas como primario en poco tiempo; a diferencia de mongodump solamente contiene información solamente hasta la fecha en la que se sacó el respaldo y no la última versión, con este respaldo no es posible levantar en caso de caída de la primaria con datos de última versión en poco tiempo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "el objetivo de replicación es la disponibilidad y garantía. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "replica-set se refiere al proceso de replicación/ redundancia de datos basado en maestro-esclavo. el objetivo de replicación es la disponibilidad y garantía. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "el objetivo de replicación es la disponibilidad y garantía. la configuración mínima se debe componer de 3 nodos, incluido la primaria, pero es posible configurar la cantidad de nodos. cuando el nodo primaria deja de tener disponibilidad actúa, existe un mecanismo de acción, uno de los nodos actúa como árbitro para asignar a otro nodo como primaria hasta que se reestablezca el que se cayó. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "replica-set se refiere al proceso de replicación/ redundancia de datos basado en maestro-esclavo. el objetivo de replicación es la disponibilidad y garantía. la configuración mínima se debe componer de 3 nodos, incluido la primaria, pero es posible configurar la cantidad de nodos. cuando el nodo primaria deja de tener disponibilidad actúa, existe un mecanismo de acción, uno de los nodos actúa como árbitro para asignar a otro nodo como primaria hasta que se reestablezca el que se cayó. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "replica-set se refiere al proceso de replicación/ redundancia de datos basado en maestro-esclavo. el objetivo de replicación es la disponibilidad y garantía. la configuración mínima se debe componer de 3 nodos, incluido la primaria, pero es posible configurar la cantidad de nodos. cuando el nodo primaria deja de tener disponibilidad actúa, existe un mecanismo de acción, uno de los nodos actúa como árbitro para asignar a otro nodo como primaria hasta que se reestablezca el que se cayó. la principal diferencia entre mongodump y replica set es que las réplicas-set continuamente se actualizan con la última información de la base principal, en caso de caída de la base principal es posible levantar uno de los nodos replicas como primario en poco tiempo; a diferencia de mongodump solamente contiene información solamente hasta la fecha en la que se sacó el respaldo y no la última versión, con este respaldo no es posible levantar en caso de caída de la primaria con datos de última versión en poco tiempo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "108bd04ed6e2ad2619970763de1776ef": {
                      "minipregunta0": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta1": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta2": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta3": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "respuesta_completa": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      }
           },
           "61d68c1e8cd66a2cff6b98a539a30d37": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.899,
                                            "Frase": "una arquitectura réplica-set permite implementar, tal como indica su nombre, la replicación de datos de una base de datos a otra. esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "una arquitectura réplica-set permite implementar, tal como indica su nombre, la replicación de datos de una base de datos a otra. esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "una arquitectura réplica-set permite implementar, tal como indica su nombre, la replicación de datos de una base de datos a otra. esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "una arquitectura réplica-set permite implementar, tal como indica su nombre, la replicación de datos de una base de datos a otra. esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. cuando el nodo primario deja de tener disponibilidad, el nodo secundario asume su función. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "una arquitectura réplica-set permite implementar, tal como indica su nombre, la replicación de datos de una base de datos a otra. esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. cuando el nodo primario deja de tener disponibilidad, el nodo secundario asume su función. la principal diferencia con mongodump es que éste realiza una copia de seguridad de los datos cuando se ejecuta el correspondiente comando, mientras que la arquitectura réplica-set se encuentra constantemente replicando los datos entre los dos nodos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.817,
                                            "Frase": "la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.835,
                                            "Frase": "la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.849,
                                            "Frase": "esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.849,
                                            "Frase": "esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. cuando el nodo primario deja de tener disponibilidad, el nodo secundario asume su función. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.828,
                                            "Frase": "una arquitectura réplica-set permite implementar, tal como indica su nombre, la replicación de datos de una base de datos a otra. esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. cuando el nodo primario deja de tener disponibilidad, el nodo secundario asume su función. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.792,
                                            "Frase": "una arquitectura réplica-set permite implementar, tal como indica su nombre, la replicación de datos de una base de datos a otra. esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. cuando el nodo primario deja de tener disponibilidad, el nodo secundario asume su función. la principal diferencia con mongodump es que éste realiza una copia de seguridad de los datos cuando se ejecuta el correspondiente comando, mientras que la arquitectura réplica-set se encuentra constantemente replicando los datos entre los dos nodos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, el nodo secundario asume su función. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. cuando el nodo primario deja de tener disponibilidad, el nodo secundario asume su función. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.96,
                                            "Frase": "la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. cuando el nodo primario deja de tener disponibilidad, el nodo secundario asume su función. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.966,
                                            "Frase": "esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. cuando el nodo primario deja de tener disponibilidad, el nodo secundario asume su función. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "una arquitectura réplica-set permite implementar, tal como indica su nombre, la replicación de datos de una base de datos a otra. esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. cuando el nodo primario deja de tener disponibilidad, el nodo secundario asume su función. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "una arquitectura réplica-set permite implementar, tal como indica su nombre, la replicación de datos de una base de datos a otra. esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. cuando el nodo primario deja de tener disponibilidad, el nodo secundario asume su función. la principal diferencia con mongodump es que éste realiza una copia de seguridad de los datos cuando se ejecuta el correspondiente comando, mientras que la arquitectura réplica-set se encuentra constantemente replicando los datos entre los dos nodos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "una arquitectura réplica-set permite implementar, tal como indica su nombre, la replicación de datos de una base de datos a otra. esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "una arquitectura réplica-set permite implementar, tal como indica su nombre, la replicación de datos de una base de datos a otra. esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "una arquitectura réplica-set permite implementar, tal como indica su nombre, la replicación de datos de una base de datos a otra. esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. cuando el nodo primario deja de tener disponibilidad, el nodo secundario asume su función. la principal diferencia con mongodump es que éste realiza una copia de seguridad de los datos cuando se ejecuta el correspondiente comando, mientras que la arquitectura réplica-set se encuentra constantemente replicando los datos entre los dos nodos. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "una arquitectura réplica-set permite implementar, tal como indica su nombre, la replicación de datos de una base de datos a otra. esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. cuando el nodo primario deja de tener disponibilidad, el nodo secundario asume su función. la principal diferencia con mongodump es que éste realiza una copia de seguridad de los datos cuando se ejecuta el correspondiente comando, mientras que la arquitectura réplica-set se encuentra constantemente replicando los datos entre los dos nodos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.969,
                                            "Frase": "esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.978,
                                            "Frase": "esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.975,
                                            "Frase": "esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. cuando el nodo primario deja de tener disponibilidad, el nodo secundario asume su función. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.976,
                                            "Frase": "una arquitectura réplica-set permite implementar, tal como indica su nombre, la replicación de datos de una base de datos a otra. esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. cuando el nodo primario deja de tener disponibilidad, el nodo secundario asume su función. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.965,
                                            "Frase": "una arquitectura réplica-set permite implementar, tal como indica su nombre, la replicación de datos de una base de datos a otra. esto, además de para tener una base de datos como respaldo, sirve como método de recuperación automático de datos cuando se produce un fallo. la arquitectura de réplica-set necesita como mínimo tres nodos; el primario, el secundario y el árbitro. la función del nodo árbitro es la de decidir cuál de los otros dos nodos es el primario y cuál el secundario. cuando el nodo primario deja de tener disponibilidad, el nodo secundario asume su función. la principal diferencia con mongodump es que éste realiza una copia de seguridad de los datos cuando se ejecuta el correspondiente comando, mientras que la arquitectura réplica-set se encuentra constantemente replicando los datos entre los dos nodos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "091cbf16b7d7bad3e5df864638c62903": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "para poder establecer una función de alta disponibilidad es necesario configurar un formato de replica-set. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.87,
                                            "Frase": "toda base de datos necesita un esquema de alta disponibilidad, eso quiere decir que ante una falla del servidor activo de mongodb un segundo servidor debería tomar las tareas solicitadas por los clientes, eso asegura el funcionamiento de las aplicaciones que consumen datos de mongodb. para poder establecer una función de alta disponibilidad es necesario configurar un formato de replica-set. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.877,
                                            "Frase": "para poder establecer una función de alta disponibilidad es necesario configurar un formato de replica-set. las características de un ambiente en alta disponibilidad requieren como configuración mínima 3 nodos de base de datos (1 servidor mongodb activo, 1 servidor de mongodb pasivo y un monitoreador del funcionamiento de la base de datos); este último identificará cuando el servidor activo no responda y le dirá al servidor pasivo que se active entregándole todas las tareas a partir de ese momento. sin embargo, los servidores de por si, no aseguran que la data sea transportada entre ellos, aquí es donde el replicador de datos funciona, se encargará de mantener las dos bases de datos mongo sincronizadas con los datos más recientes de forma que cuanto se active el pasivo, este tenga la toda la data, esta sincronización es casi en tiempo real y esta es su principal diferencia con el mongodump. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "toda base de datos necesita un esquema de alta disponibilidad, eso quiere decir que ante una falla del servidor activo de mongodb un segundo servidor debería tomar las tareas solicitadas por los clientes, eso asegura el funcionamiento de las aplicaciones que consumen datos de mongodb. para poder establecer una función de alta disponibilidad es necesario configurar un formato de replica-set. las características de un ambiente en alta disponibilidad requieren como configuración mínima 3 nodos de base de datos (1 servidor mongodb activo, 1 servidor de mongodb pasivo y un monitoreador del funcionamiento de la base de datos); este último identificará cuando el servidor activo no responda y le dirá al servidor pasivo que se active entregándole todas las tareas a partir de ese momento. sin embargo, los servidores de por si, no aseguran que la data sea transportada entre ellos, aquí es donde el replicador de datos funciona, se encargará de mantener las dos bases de datos mongo sincronizadas con los datos más recientes de forma que cuanto se active el pasivo, este tenga la toda la data, esta sincronización es casi en tiempo real y esta es su principal diferencia con el mongodump. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.841,
                                            "Frase": "para poder establecer una función de alta disponibilidad es necesario configurar un formato de replica-set. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.813,
                                            "Frase": "para poder establecer una función de alta disponibilidad es necesario configurar un formato de replica-set. las características de un ambiente en alta disponibilidad requieren como configuración mínima 3 nodos de base de datos (1 servidor mongodb activo, 1 servidor de mongodb pasivo y un monitoreador del funcionamiento de la base de datos); este último identificará cuando el servidor activo no responda y le dirá al servidor pasivo que se active entregándole todas las tareas a partir de ese momento. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.802,
                                            "Frase": "toda base de datos necesita un esquema de alta disponibilidad, eso quiere decir que ante una falla del servidor activo de mongodb un segundo servidor debería tomar las tareas solicitadas por los clientes, eso asegura el funcionamiento de las aplicaciones que consumen datos de mongodb. para poder establecer una función de alta disponibilidad es necesario configurar un formato de replica-set. las características de un ambiente en alta disponibilidad requieren como configuración mínima 3 nodos de base de datos (1 servidor mongodb activo, 1 servidor de mongodb pasivo y un monitoreador del funcionamiento de la base de datos); este último identificará cuando el servidor activo no responda y le dirá al servidor pasivo que se active entregándole todas las tareas a partir de ese momento. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.788,
                                            "Frase": "toda base de datos necesita un esquema de alta disponibilidad, eso quiere decir que ante una falla del servidor activo de mongodb un segundo servidor debería tomar las tareas solicitadas por los clientes, eso asegura el funcionamiento de las aplicaciones que consumen datos de mongodb. para poder establecer una función de alta disponibilidad es necesario configurar un formato de replica-set. las características de un ambiente en alta disponibilidad requieren como configuración mínima 3 nodos de base de datos (1 servidor mongodb activo, 1 servidor de mongodb pasivo y un monitoreador del funcionamiento de la base de datos); este último identificará cuando el servidor activo no responda y le dirá al servidor pasivo que se active entregándole todas las tareas a partir de ese momento. sin embargo, los servidores de por si, no aseguran que la data sea transportada entre ellos, aquí es donde el replicador de datos funciona, se encargará de mantener las dos bases de datos mongo sincronizadas con los datos más recientes de forma que cuanto se active el pasivo, este tenga la toda la data, esta sincronización es casi en tiempo real y esta es su principal diferencia con el mongodump. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "las características de un ambiente en alta disponibilidad requieren como configuración mínima 3 nodos de base de datos (1 servidor mongodb activo, 1 servidor de mongodb pasivo y un monitoreador del funcionamiento de la base de datos); este último identificará cuando el servidor activo no responda y le dirá al servidor pasivo que se active entregándole todas las tareas a partir de ese momento. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "para poder establecer una función de alta disponibilidad es necesario configurar un formato de replica-set. las características de un ambiente en alta disponibilidad requieren como configuración mínima 3 nodos de base de datos (1 servidor mongodb activo, 1 servidor de mongodb pasivo y un monitoreador del funcionamiento de la base de datos); este último identificará cuando el servidor activo no responda y le dirá al servidor pasivo que se active entregándole todas las tareas a partir de ese momento. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "toda base de datos necesita un esquema de alta disponibilidad, eso quiere decir que ante una falla del servidor activo de mongodb un segundo servidor debería tomar las tareas solicitadas por los clientes, eso asegura el funcionamiento de las aplicaciones que consumen datos de mongodb. para poder establecer una función de alta disponibilidad es necesario configurar un formato de replica-set. las características de un ambiente en alta disponibilidad requieren como configuración mínima 3 nodos de base de datos (1 servidor mongodb activo, 1 servidor de mongodb pasivo y un monitoreador del funcionamiento de la base de datos); este último identificará cuando el servidor activo no responda y le dirá al servidor pasivo que se active entregándole todas las tareas a partir de ese momento. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "toda base de datos necesita un esquema de alta disponibilidad, eso quiere decir que ante una falla del servidor activo de mongodb un segundo servidor debería tomar las tareas solicitadas por los clientes, eso asegura el funcionamiento de las aplicaciones que consumen datos de mongodb. para poder establecer una función de alta disponibilidad es necesario configurar un formato de replica-set. las características de un ambiente en alta disponibilidad requieren como configuración mínima 3 nodos de base de datos (1 servidor mongodb activo, 1 servidor de mongodb pasivo y un monitoreador del funcionamiento de la base de datos); este último identificará cuando el servidor activo no responda y le dirá al servidor pasivo que se active entregándole todas las tareas a partir de ese momento. sin embargo, los servidores de por si, no aseguran que la data sea transportada entre ellos, aquí es donde el replicador de datos funciona, se encargará de mantener las dos bases de datos mongo sincronizadas con los datos más recientes de forma que cuanto se active el pasivo, este tenga la toda la data, esta sincronización es casi en tiempo real y esta es su principal diferencia con el mongodump. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "sin embargo, los servidores de por si, no aseguran que la data sea transportada entre ellos, aquí es donde el replicador de datos funciona, se encargará de mantener las dos bases de datos mongo sincronizadas con los datos más recientes de forma que cuanto se active el pasivo, este tenga la toda la data, esta sincronización es casi en tiempo real y esta es su principal diferencia con el mongodump. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "las características de un ambiente en alta disponibilidad requieren como configuración mínima 3 nodos de base de datos (1 servidor mongodb activo, 1 servidor de mongodb pasivo y un monitoreador del funcionamiento de la base de datos); este último identificará cuando el servidor activo no responda y le dirá al servidor pasivo que se active entregándole todas las tareas a partir de ese momento. sin embargo, los servidores de por si, no aseguran que la data sea transportada entre ellos, aquí es donde el replicador de datos funciona, se encargará de mantener las dos bases de datos mongo sincronizadas con los datos más recientes de forma que cuanto se active el pasivo, este tenga la toda la data, esta sincronización es casi en tiempo real y esta es su principal diferencia con el mongodump. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "para poder establecer una función de alta disponibilidad es necesario configurar un formato de replica-set. las características de un ambiente en alta disponibilidad requieren como configuración mínima 3 nodos de base de datos (1 servidor mongodb activo, 1 servidor de mongodb pasivo y un monitoreador del funcionamiento de la base de datos); este último identificará cuando el servidor activo no responda y le dirá al servidor pasivo que se active entregándole todas las tareas a partir de ese momento. sin embargo, los servidores de por si, no aseguran que la data sea transportada entre ellos, aquí es donde el replicador de datos funciona, se encargará de mantener las dos bases de datos mongo sincronizadas con los datos más recientes de forma que cuanto se active el pasivo, este tenga la toda la data, esta sincronización es casi en tiempo real y esta es su principal diferencia con el mongodump. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "toda base de datos necesita un esquema de alta disponibilidad, eso quiere decir que ante una falla del servidor activo de mongodb un segundo servidor debería tomar las tareas solicitadas por los clientes, eso asegura el funcionamiento de las aplicaciones que consumen datos de mongodb. para poder establecer una función de alta disponibilidad es necesario configurar un formato de replica-set. las características de un ambiente en alta disponibilidad requieren como configuración mínima 3 nodos de base de datos (1 servidor mongodb activo, 1 servidor de mongodb pasivo y un monitoreador del funcionamiento de la base de datos); este último identificará cuando el servidor activo no responda y le dirá al servidor pasivo que se active entregándole todas las tareas a partir de ese momento. sin embargo, los servidores de por si, no aseguran que la data sea transportada entre ellos, aquí es donde el replicador de datos funciona, se encargará de mantener las dos bases de datos mongo sincronizadas con los datos más recientes de forma que cuanto se active el pasivo, este tenga la toda la data, esta sincronización es casi en tiempo real y esta es su principal diferencia con el mongodump. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "toda base de datos necesita un esquema de alta disponibilidad, eso quiere decir que ante una falla del servidor activo de mongodb un segundo servidor debería tomar las tareas solicitadas por los clientes, eso asegura el funcionamiento de las aplicaciones que consumen datos de mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "las características de un ambiente en alta disponibilidad requieren como configuración mínima 3 nodos de base de datos (1 servidor mongodb activo, 1 servidor de mongodb pasivo y un monitoreador del funcionamiento de la base de datos); este último identificará cuando el servidor activo no responda y le dirá al servidor pasivo que se active entregándole todas las tareas a partir de ese momento. sin embargo, los servidores de por si, no aseguran que la data sea transportada entre ellos, aquí es donde el replicador de datos funciona, se encargará de mantener las dos bases de datos mongo sincronizadas con los datos más recientes de forma que cuanto se active el pasivo, este tenga la toda la data, esta sincronización es casi en tiempo real y esta es su principal diferencia con el mongodump. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "para poder establecer una función de alta disponibilidad es necesario configurar un formato de replica-set. las características de un ambiente en alta disponibilidad requieren como configuración mínima 3 nodos de base de datos (1 servidor mongodb activo, 1 servidor de mongodb pasivo y un monitoreador del funcionamiento de la base de datos); este último identificará cuando el servidor activo no responda y le dirá al servidor pasivo que se active entregándole todas las tareas a partir de ese momento. sin embargo, los servidores de por si, no aseguran que la data sea transportada entre ellos, aquí es donde el replicador de datos funciona, se encargará de mantener las dos bases de datos mongo sincronizadas con los datos más recientes de forma que cuanto se active el pasivo, este tenga la toda la data, esta sincronización es casi en tiempo real y esta es su principal diferencia con el mongodump. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.953,
                                            "Frase": "toda base de datos necesita un esquema de alta disponibilidad, eso quiere decir que ante una falla del servidor activo de mongodb un segundo servidor debería tomar las tareas solicitadas por los clientes, eso asegura el funcionamiento de las aplicaciones que consumen datos de mongodb. para poder establecer una función de alta disponibilidad es necesario configurar un formato de replica-set. las características de un ambiente en alta disponibilidad requieren como configuración mínima 3 nodos de base de datos (1 servidor mongodb activo, 1 servidor de mongodb pasivo y un monitoreador del funcionamiento de la base de datos); este último identificará cuando el servidor activo no responda y le dirá al servidor pasivo que se active entregándole todas las tareas a partir de ese momento. sin embargo, los servidores de por si, no aseguran que la data sea transportada entre ellos, aquí es donde el replicador de datos funciona, se encargará de mantener las dos bases de datos mongo sincronizadas con los datos más recientes de forma que cuanto se active el pasivo, este tenga la toda la data, esta sincronización es casi en tiempo real y esta es su principal diferencia con el mongodump. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "e482f876fe630637ed1c6110c29ffe5c": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.789,
                                            "Frase": "para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.813,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.794,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.752,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.745,
                                            "Frase": "para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.755,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.754,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. este proceso es instantáneo y además no se pierden los datos, por lo que asegura alta disponibilidad y consistencia de los datos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.76,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. este proceso es instantáneo y además no se pierden los datos, por lo que asegura alta disponibilidad y consistencia de los datos. la diferencia con mongodump es que no hace falta realizar backup periódicos, ya que los datos son replicados entre nodos de forma automática. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.771,
                                            "Frase": "para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.803,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.796,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.744,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.719,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.727,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.71,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. este proceso es instantáneo y además no se pierden los datos, por lo que asegura alta disponibilidad y consistencia de los datos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.703,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. este proceso es instantáneo y además no se pierden los datos, por lo que asegura alta disponibilidad y consistencia de los datos. la diferencia con mongodump es que no hace falta realizar backup periódicos, ya que los datos son replicados entre nodos de forma automática. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. este proceso es instantáneo y además no se pierden los datos, por lo que asegura alta disponibilidad y consistencia de los datos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. este proceso es instantáneo y además no se pierden los datos, por lo que asegura alta disponibilidad y consistencia de los datos. la diferencia con mongodump es que no hace falta realizar backup periódicos, ya que los datos son replicados entre nodos de forma automática. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "la diferencia con mongodump es que no hace falta realizar backup periódicos, ya que los datos son replicados entre nodos de forma automática. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.868,
                                            "Frase": "en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. este proceso es instantáneo y además no se pierden los datos, por lo que asegura alta disponibilidad y consistencia de los datos. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. este proceso es instantáneo y además no se pierden los datos, por lo que asegura alta disponibilidad y consistencia de los datos. la diferencia con mongodump es que no hace falta realizar backup periódicos, ya que los datos son replicados entre nodos de forma automática. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.873,
                                            "Frase": "cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. este proceso es instantáneo y además no se pierden los datos, por lo que asegura alta disponibilidad y consistencia de los datos. la diferencia con mongodump es que no hace falta realizar backup periódicos, ya que los datos son replicados entre nodos de forma automática. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.868,
                                            "Frase": "en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. este proceso es instantáneo y además no se pierden los datos, por lo que asegura alta disponibilidad y consistencia de los datos. la diferencia con mongodump es que no hace falta realizar backup periódicos, ya que los datos son replicados entre nodos de forma automática. para restaurar un backup hace falta el comando mongorestore, por lo que el backup podría no tener los datos actualizados. además, para restaurar los datos, las bases de datos no estarían operativas hasta que no se hiciera la restauración. ",
                                            "Lineas": "Lines 6 - 10"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.863,
                                            "Frase": "este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. este proceso es instantáneo y además no se pierden los datos, por lo que asegura alta disponibilidad y consistencia de los datos. la diferencia con mongodump es que no hace falta realizar backup periódicos, ya que los datos son replicados entre nodos de forma automática. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.867,
                                            "Frase": "para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. este proceso es instantáneo y además no se pierden los datos, por lo que asegura alta disponibilidad y consistencia de los datos. la diferencia con mongodump es que no hace falta realizar backup periódicos, ya que los datos son replicados entre nodos de forma automática. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.871,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. este proceso es instantáneo y además no se pierden los datos, por lo que asegura alta disponibilidad y consistencia de los datos. la diferencia con mongodump es que no hace falta realizar backup periódicos, ya que los datos son replicados entre nodos de forma automática. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. este proceso es instantáneo y además no se pierden los datos, por lo que asegura alta disponibilidad y consistencia de los datos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "una arquitectura replica-set en mongodb sigue el paradigma maestro-esclavo. para definir la arquitectura, son necesarios al menos tres nodos, un nodo denominado árbitro que se encarga de asignar de manera aleatoria el nodo principal. este nodo principal sería el maestro en el paradigma maestro-esclavo, y es en este nodo es donde se consultan, insertan, modifican y borran los datos. el tercer nodo sería el secundario, que se encarga de replicar todos los datos que se van creando, actualizando y borrando en el nodo principal. cada dos segundos se envían pings entre los nodos para detectar que siguen operativos. en caso de que el nodo principal no esté disponible, el nodo árbitro asigna como nodo principal a uno de los disponibles de forma aleatoria. este proceso es instantáneo y además no se pierden los datos, por lo que asegura alta disponibilidad y consistencia de los datos. la diferencia con mongodump es que no hace falta realizar backup periódicos, ya que los datos son replicados entre nodos de forma automática. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "775baaf92e27ec5c2dd4636a2ebdcc6a": {
                      "minipregunta0": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta1": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta2": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta3": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "respuesta_completa": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      }
           },
           "056bdb4edcb6f1fa3cb6e7ede99d87e6": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.859,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.855,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.846,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.826,
                                            "Frase": "podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.842,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.8,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. si por alguna razón este nodo primario se cae, pierde comunicación, se inicia rápidamente las elecciones para elegir un nodo primario que lo remplace. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.805,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. si por alguna razón este nodo primario se cae, pierde comunicación, se inicia rápidamente las elecciones para elegir un nodo primario que lo remplace. en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.817,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. si por alguna razón este nodo primario se cae, pierde comunicación, se inicia rápidamente las elecciones para elegir un nodo primario que lo remplace. en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. la principal diferencia entre un replica-set y mongodump, es que mongodump genera una foto de los datos en un determinado momento. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.854,
                                            "Frase": "la principal diferencia entre un replica-set y mongodump, es que mongodump genera una foto de los datos en un determinado momento. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. la principal diferencia entre un replica-set y mongodump, es que mongodump genera una foto de los datos en un determinado momento. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.836,
                                            "Frase": "en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. la principal diferencia entre un replica-set y mongodump, es que mongodump genera una foto de los datos en un determinado momento. además, no garantiza disponibilidad continua del servicio, solo es una alternativa que permite hacer un backup de la información existente en la base de datos en un tiempo t; backup que puede ser cargado al servidor en caso de que sea necesario pero requerirá de la acción un humana o proceso configurado para que lo haga en caso que sea necesario. ",
                                            "Lineas": "Lines 7 - 9"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.835,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.834,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.824,
                                            "Frase": "el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. si por alguna razón este nodo primario se cae, pierde comunicación, se inicia rápidamente las elecciones para elegir un nodo primario que lo remplace. en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. la principal diferencia entre un replica-set y mongodump, es que mongodump genera una foto de los datos en un determinado momento. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.83,
                                            "Frase": "podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. si por alguna razón este nodo primario se cae, pierde comunicación, se inicia rápidamente las elecciones para elegir un nodo primario que lo remplace. en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. la principal diferencia entre un replica-set y mongodump, es que mongodump genera una foto de los datos en un determinado momento. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.836,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. si por alguna razón este nodo primario se cae, pierde comunicación, se inicia rápidamente las elecciones para elegir un nodo primario que lo remplace. en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. la principal diferencia entre un replica-set y mongodump, es que mongodump genera una foto de los datos en un determinado momento. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.953,
                                            "Frase": "en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.958,
                                            "Frase": "el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. si por alguna razón este nodo primario se cae, pierde comunicación, se inicia rápidamente las elecciones para elegir un nodo primario que lo remplace. en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. la principal diferencia entre un replica-set y mongodump, es que mongodump genera una foto de los datos en un determinado momento. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. si por alguna razón este nodo primario se cae, pierde comunicación, se inicia rápidamente las elecciones para elegir un nodo primario que lo remplace. en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. si por alguna razón este nodo primario se cae, pierde comunicación, se inicia rápidamente las elecciones para elegir un nodo primario que lo remplace. en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. la principal diferencia entre un replica-set y mongodump, es que mongodump genera una foto de los datos en un determinado momento. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "además, no garantiza disponibilidad continua del servicio, solo es una alternativa que permite hacer un backup de la información existente en la base de datos en un tiempo t; backup que puede ser cargado al servidor en caso de que sea necesario pero requerirá de la acción un humana o proceso configurado para que lo haga en caso que sea necesario. ",
                                            "Lineas": "Line 9"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "la principal diferencia entre un replica-set y mongodump, es que mongodump genera una foto de los datos en un determinado momento. además, no garantiza disponibilidad continua del servicio, solo es una alternativa que permite hacer un backup de la información existente en la base de datos en un tiempo t; backup que puede ser cargado al servidor en caso de que sea necesario pero requerirá de la acción un humana o proceso configurado para que lo haga en caso que sea necesario. ",
                                            "Lineas": "Lines 8 - 9"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. la principal diferencia entre un replica-set y mongodump, es que mongodump genera una foto de los datos en un determinado momento. además, no garantiza disponibilidad continua del servicio, solo es una alternativa que permite hacer un backup de la información existente en la base de datos en un tiempo t; backup que puede ser cargado al servidor en caso de que sea necesario pero requerirá de la acción un humana o proceso configurado para que lo haga en caso que sea necesario. ",
                                            "Lineas": "Lines 7 - 9"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.877,
                                            "Frase": "si por alguna razón este nodo primario se cae, pierde comunicación, se inicia rápidamente las elecciones para elegir un nodo primario que lo remplace. en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. la principal diferencia entre un replica-set y mongodump, es que mongodump genera una foto de los datos en un determinado momento. además, no garantiza disponibilidad continua del servicio, solo es una alternativa que permite hacer un backup de la información existente en la base de datos en un tiempo t; backup que puede ser cargado al servidor en caso de que sea necesario pero requerirá de la acción un humana o proceso configurado para que lo haga en caso que sea necesario. ",
                                            "Lineas": "Lines 6 - 9"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. si por alguna razón este nodo primario se cae, pierde comunicación, se inicia rápidamente las elecciones para elegir un nodo primario que lo remplace. en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. la principal diferencia entre un replica-set y mongodump, es que mongodump genera una foto de los datos en un determinado momento. además, no garantiza disponibilidad continua del servicio, solo es una alternativa que permite hacer un backup de la información existente en la base de datos en un tiempo t; backup que puede ser cargado al servidor en caso de que sea necesario pero requerirá de la acción un humana o proceso configurado para que lo haga en caso que sea necesario. ",
                                            "Lineas": "Lines 5 - 9"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.874,
                                            "Frase": "para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. si por alguna razón este nodo primario se cae, pierde comunicación, se inicia rápidamente las elecciones para elegir un nodo primario que lo remplace. en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. la principal diferencia entre un replica-set y mongodump, es que mongodump genera una foto de los datos en un determinado momento. además, no garantiza disponibilidad continua del servicio, solo es una alternativa que permite hacer un backup de la información existente en la base de datos en un tiempo t; backup que puede ser cargado al servidor en caso de que sea necesario pero requerirá de la acción un humana o proceso configurado para que lo haga en caso que sea necesario. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.869,
                                            "Frase": "el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. si por alguna razón este nodo primario se cae, pierde comunicación, se inicia rápidamente las elecciones para elegir un nodo primario que lo remplace. en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. la principal diferencia entre un replica-set y mongodump, es que mongodump genera una foto de los datos en un determinado momento. además, no garantiza disponibilidad continua del servicio, solo es una alternativa que permite hacer un backup de la información existente en la base de datos en un tiempo t; backup que puede ser cargado al servidor en caso de que sea necesario pero requerirá de la acción un humana o proceso configurado para que lo haga en caso que sea necesario. ",
                                            "Lineas": "Lines 3 - 9"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. si por alguna razón este nodo primario se cae, pierde comunicación, se inicia rápidamente las elecciones para elegir un nodo primario que lo remplace. en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. la principal diferencia entre un replica-set y mongodump, es que mongodump genera una foto de los datos en un determinado momento. además, no garantiza disponibilidad continua del servicio, solo es una alternativa que permite hacer un backup de la información existente en la base de datos en un tiempo t; backup que puede ser cargado al servidor en caso de que sea necesario pero requerirá de la acción un humana o proceso configurado para que lo haga en caso que sea necesario. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. si por alguna razón este nodo primario se cae, pierde comunicación, se inicia rápidamente las elecciones para elegir un nodo primario que lo remplace. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. si por alguna razón este nodo primario se cae, pierde comunicación, se inicia rápidamente las elecciones para elegir un nodo primario que lo remplace. en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "en mongodb un replica-set nos permite la realización de replicas del contenido almacenado en nuestro servidor. podríamos decir que un replica-set es una manera de garantizar que tenemos una copia realizada en tiempo real  de nuestros datos. el replica ser nos permite minimizar el impacto ante la caída del servidor ya que otro miembro del replica set puede cambiar de rol y mantener activo el servicio. para tener una configuración idónea se requieren al menos 3 o mas servidores, donde uno de ellos será el primario, otros secundarios y un árbitro, el cual tiene voto en la elección del nodo primario, pero no es un elemento replicador. en el momento de iniciar el servicio, cualquiera de los servidores puede ser el nodo primario, que es el encargado de recibir y gestionar las peticiones de lectura y escritura. si por alguna razón este nodo primario se cae, pierde comunicación, se inicia rápidamente las elecciones para elegir un nodo primario que lo remplace. en caso de pérdida de disponibilidad de empate que sean un numero par de servidores o que exista un empate el árbitro es quien da el voto definitivo. la principal diferencia entre un replica-set y mongodump, es que mongodump genera una foto de los datos en un determinado momento. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "9865961c9c88f130777ac271505834de": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replica-set se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replica-set se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.84,
                                            "Frase": "se solicitan 3 nodos que son definidos como nodo principal, nodos secundarios en donde uno de estos nodos se comporta como árbitro para selección del nodo principal. continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replica-set se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.84,
                                            "Frase": "es un grupo de instancia de mongo que contiene el mismo conjunto de datos. replica set cuya función fundamental es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se solicitan 3 nodos que son definidos como nodo principal, nodos secundarios en donde uno de estos nodos se comporta como árbitro para selección del nodo principal. continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.855,
                                            "Frase": "es un grupo de instancia de mongo que contiene el mismo conjunto de datos. replica set cuya función fundamental es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se solicitan 3 nodos que son definidos como nodo principal, nodos secundarios en donde uno de estos nodos se comporta como árbitro para selección del nodo principal. continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replica-set se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "es un grupo de instancia de mongo que contiene el mismo conjunto de datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.838,
                                            "Frase": "continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.819,
                                            "Frase": "continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replica-set se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.765,
                                            "Frase": "es un grupo de instancia de mongo que contiene el mismo conjunto de datos. replica set cuya función fundamental es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se solicitan 3 nodos que son definidos como nodo principal, nodos secundarios en donde uno de estos nodos se comporta como árbitro para selección del nodo principal. continua el nodo que está configurado como árbitro para seleccionar un nodo principal. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.792,
                                            "Frase": "es un grupo de instancia de mongo que contiene el mismo conjunto de datos. replica set cuya función fundamental es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se solicitan 3 nodos que son definidos como nodo principal, nodos secundarios en donde uno de estos nodos se comporta como árbitro para selección del nodo principal. continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.787,
                                            "Frase": "es un grupo de instancia de mongo que contiene el mismo conjunto de datos. replica set cuya función fundamental es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se solicitan 3 nodos que son definidos como nodo principal, nodos secundarios en donde uno de estos nodos se comporta como árbitro para selección del nodo principal. continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replica-set se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "es un grupo de instancia de mongo que contiene el mismo conjunto de datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "es un grupo de instancia de mongo que contiene el mismo conjunto de datos. replica set cuya función fundamental es replicar las definiciones que contiene el nodo principal a los nodos secundarios. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replica-set se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "es un grupo de instancia de mongo que contiene el mismo conjunto de datos. replica set cuya función fundamental es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se solicitan 3 nodos que son definidos como nodo principal, nodos secundarios en donde uno de estos nodos se comporta como árbitro para selección del nodo principal. continua el nodo que está configurado como árbitro para seleccionar un nodo principal. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "es un grupo de instancia de mongo que contiene el mismo conjunto de datos. replica set cuya función fundamental es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se solicitan 3 nodos que son definidos como nodo principal, nodos secundarios en donde uno de estos nodos se comporta como árbitro para selección del nodo principal. continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "es un grupo de instancia de mongo que contiene el mismo conjunto de datos. replica set cuya función fundamental es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se solicitan 3 nodos que son definidos como nodo principal, nodos secundarios en donde uno de estos nodos se comporta como árbitro para selección del nodo principal. continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replica-set se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.848,
                                            "Frase": "mientras que replica-set se encarga de la alta disponibilidad. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replica-set se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replica-set se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "se solicitan 3 nodos que son definidos como nodo principal, nodos secundarios en donde uno de estos nodos se comporta como árbitro para selección del nodo principal. continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replica-set se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "replica set cuya función fundamental es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se solicitan 3 nodos que son definidos como nodo principal, nodos secundarios en donde uno de estos nodos se comporta como árbitro para selección del nodo principal. continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replica-set se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "es un grupo de instancia de mongo que contiene el mismo conjunto de datos. replica set cuya función fundamental es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se solicitan 3 nodos que son definidos como nodo principal, nodos secundarios en donde uno de estos nodos se comporta como árbitro para selección del nodo principal. continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replica-set se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "es un grupo de instancia de mongo que contiene el mismo conjunto de datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.964,
                                            "Frase": "continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replica-set se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "se solicitan 3 nodos que son definidos como nodo principal, nodos secundarios en donde uno de estos nodos se comporta como árbitro para selección del nodo principal. continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replica-set se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "es un grupo de instancia de mongo que contiene el mismo conjunto de datos. replica set cuya función fundamental es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se solicitan 3 nodos que son definidos como nodo principal, nodos secundarios en donde uno de estos nodos se comporta como árbitro para selección del nodo principal. continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "es un grupo de instancia de mongo que contiene el mismo conjunto de datos. replica set cuya función fundamental es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se solicitan 3 nodos que son definidos como nodo principal, nodos secundarios en donde uno de estos nodos se comporta como árbitro para selección del nodo principal. continua el nodo que está configurado como árbitro para seleccionar un nodo principal. mongodump es deslucido para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replica-set se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "624a61346ee721323b887af8fed7eac7": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "una de ellas es la capacidad de replicación o redundancia de los datos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "mongodb proporciona varios mecanismos de respaldo para los datos. una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "mongodb proporciona varios mecanismos de respaldo para los datos. una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "mongodb proporciona varios mecanismos de respaldo para los datos. una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "mongodb proporciona varios mecanismos de respaldo para los datos. una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.892,
                                            "Frase": "mongodb proporciona varios mecanismos de respaldo para los datos. una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. la votación se llevará a cabo si el nodo primario deja de estar disponible. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. la votación se llevará a cabo si el nodo primario deja de estar disponible. para comprobar el estado del sistema, los nodos se hacen ping entre ellos cada 2 segundos. la diferencia de este método de replicación respecto a mongodump, es que mongodump crea una copia de seguridad que puede restaurarse en otro mongo utilizando mongorestore. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.817,
                                            "Frase": "en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.845,
                                            "Frase": "para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.838,
                                            "Frase": "para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.841,
                                            "Frase": "una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.829,
                                            "Frase": "mongodb proporciona varios mecanismos de respaldo para los datos. una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.821,
                                            "Frase": "mongodb proporciona varios mecanismos de respaldo para los datos. una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.81,
                                            "Frase": "mongodb proporciona varios mecanismos de respaldo para los datos. una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. la votación se llevará a cabo si el nodo primario deja de estar disponible. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.813,
                                            "Frase": "para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. la votación se llevará a cabo si el nodo primario deja de estar disponible. para comprobar el estado del sistema, los nodos se hacen ping entre ellos cada 2 segundos. la diferencia de este método de replicación respecto a mongodump, es que mongodump crea una copia de seguridad que puede restaurarse en otro mongo utilizando mongorestore. replica-set proporciona una replicación completa de un nodo primario para poder sustituirse inmediatamente en caso de que deje de estar disponible. ",
                                            "Lineas": "Lines 3 - 10"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.953,
                                            "Frase": "en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.953,
                                            "Frase": "en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.953,
                                            "Frase": "para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. la votación se llevará a cabo si el nodo primario deja de estar disponible. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. la votación se llevará a cabo si el nodo primario deja de estar disponible. para comprobar el estado del sistema, los nodos se hacen ping entre ellos cada 2 segundos. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. la votación se llevará a cabo si el nodo primario deja de estar disponible. para comprobar el estado del sistema, los nodos se hacen ping entre ellos cada 2 segundos. la diferencia de este método de replicación respecto a mongodump, es que mongodump crea una copia de seguridad que puede restaurarse en otro mongo utilizando mongorestore. replica-set proporciona una replicación completa de un nodo primario para poder sustituirse inmediatamente en caso de que deje de estar disponible. ",
                                            "Lineas": "Lines 4 - 10"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. la votación se llevará a cabo si el nodo primario deja de estar disponible. para comprobar el estado del sistema, los nodos se hacen ping entre ellos cada 2 segundos. la diferencia de este método de replicación respecto a mongodump, es que mongodump crea una copia de seguridad que puede restaurarse en otro mongo utilizando mongorestore. replica-set proporciona una replicación completa de un nodo primario para poder sustituirse inmediatamente en caso de que deje de estar disponible. ",
                                            "Lineas": "Lines 3 - 10"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "la diferencia de este método de replicación respecto a mongodump, es que mongodump crea una copia de seguridad que puede restaurarse en otro mongo utilizando mongorestore. ",
                                            "Lineas": "Line 9"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "la diferencia de este método de replicación respecto a mongodump, es que mongodump crea una copia de seguridad que puede restaurarse en otro mongo utilizando mongorestore. replica-set proporciona una replicación completa de un nodo primario para poder sustituirse inmediatamente en caso de que deje de estar disponible. ",
                                            "Lineas": "Lines 9 - 10"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "para comprobar el estado del sistema, los nodos se hacen ping entre ellos cada 2 segundos. la diferencia de este método de replicación respecto a mongodump, es que mongodump crea una copia de seguridad que puede restaurarse en otro mongo utilizando mongorestore. replica-set proporciona una replicación completa de un nodo primario para poder sustituirse inmediatamente en caso de que deje de estar disponible. ",
                                            "Lineas": "Lines 8 - 10"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "mongodb proporciona varios mecanismos de respaldo para los datos. una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "mongodb proporciona varios mecanismos de respaldo para los datos. una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "mongodb proporciona varios mecanismos de respaldo para los datos. una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "mongodb proporciona varios mecanismos de respaldo para los datos. una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. la votación se llevará a cabo si el nodo primario deja de estar disponible. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. la votación se llevará a cabo si el nodo primario deja de estar disponible. para comprobar el estado del sistema, los nodos se hacen ping entre ellos cada 2 segundos. la diferencia de este método de replicación respecto a mongodump, es que mongodump crea una copia de seguridad que puede restaurarse en otro mongo utilizando mongorestore. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.957,
                                            "Frase": "para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.962,
                                            "Frase": "para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.974,
                                            "Frase": "una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.974,
                                            "Frase": "mongodb proporciona varios mecanismos de respaldo para los datos. una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.971,
                                            "Frase": "mongodb proporciona varios mecanismos de respaldo para los datos. una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.967,
                                            "Frase": "mongodb proporciona varios mecanismos de respaldo para los datos. una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. la votación se llevará a cabo si el nodo primario deja de estar disponible. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.966,
                                            "Frase": "una de ellas es la capacidad de replicación o redundancia de los datos. para ello, mongodb utiliza la arquitectura réplica-set, que es un refinamiento de la arquitectura maestro servidor. en replica-set, un nodo primario, o maestro, es elegido por el resto de los nodos en base a la disponibilidad de este. un conjunto replica-set está compuesto, en su configuración mínima por tres nodos: dos de ellos serán el primario y el secundario, nodo en el que se realiza la replicación de las operaciones sobre el nodo primario. el tercer nodo, llamado arbitrario, se encargará de decidir quién será el nodo primario, en caso de empate en la votación. la votación se llevará a cabo si el nodo primario deja de estar disponible. para comprobar el estado del sistema, los nodos se hacen ping entre ellos cada 2 segundos. la diferencia de este método de replicación respecto a mongodump, es que mongodump crea una copia de seguridad que puede restaurarse en otro mongo utilizando mongorestore. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "8cabafe2ca75e7c5847243dd2d7726e9": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "mongodump consiste en hacer una copia de la base de datos. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "la arquitectura replica-set en mongodb es una técnica de respaldo frente a fallos. en una configuración mínima hacen falta 3 nodos. uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "la arquitectura replica-set en mongodb es una técnica de respaldo frente a fallos. en una configuración mínima hacen falta 3 nodos. uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "la arquitectura replica-set en mongodb es una técnica de respaldo frente a fallos. en una configuración mínima hacen falta 3 nodos. uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. en réplica-set, si hay más de un secundario, además de servir como respaldo, también funciona como reparto de carga ya que la escritura se realiza siempre en el primario, pero la lectura puede hacerse en los secundarios. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.866,
                                            "Frase": "es un mecanismo de respaldo automático, a diferencia de mongodump. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.862,
                                            "Frase": "ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.859,
                                            "Frase": "ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.852,
                                            "Frase": "uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.849,
                                            "Frase": "en una configuración mínima hacen falta 3 nodos. uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.839,
                                            "Frase": "la arquitectura replica-set en mongodb es una técnica de respaldo frente a fallos. en una configuración mínima hacen falta 3 nodos. uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.816,
                                            "Frase": "la arquitectura replica-set en mongodb es una técnica de respaldo frente a fallos. en una configuración mínima hacen falta 3 nodos. uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.808,
                                            "Frase": "la arquitectura replica-set en mongodb es una técnica de respaldo frente a fallos. en una configuración mínima hacen falta 3 nodos. uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. en réplica-set, si hay más de un secundario, además de servir como respaldo, también funciona como reparto de carga ya que la escritura se realiza siempre en el primario, pero la lectura puede hacerse en los secundarios. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "en una configuración mínima hacen falta 3 nodos. uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. en réplica-set, si hay más de un secundario, además de servir como respaldo, también funciona como reparto de carga ya que la escritura se realiza siempre en el primario, pero la lectura puede hacerse en los secundarios. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "en una configuración mínima hacen falta 3 nodos. uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. en réplica-set, si hay más de un secundario, además de servir como respaldo, también funciona como reparto de carga ya que la escritura se realiza siempre en el primario, pero la lectura puede hacerse en los secundarios. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "en una configuración mínima hacen falta 3 nodos. uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. en réplica-set, si hay más de un secundario, además de servir como respaldo, también funciona como reparto de carga ya que la escritura se realiza siempre en el primario, pero la lectura puede hacerse en los secundarios. no todos los secundarios admiten lectura. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. en réplica-set, si hay más de un secundario, además de servir como respaldo, también funciona como reparto de carga ya que la escritura se realiza siempre en el primario, pero la lectura puede hacerse en los secundarios. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. en réplica-set, si hay más de un secundario, además de servir como respaldo, también funciona como reparto de carga ya que la escritura se realiza siempre en el primario, pero la lectura puede hacerse en los secundarios. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. en réplica-set, si hay más de un secundario, además de servir como respaldo, también funciona como reparto de carga ya que la escritura se realiza siempre en el primario, pero la lectura puede hacerse en los secundarios. no todos los secundarios admiten lectura. ",
                                            "Lineas": "Lines 6 - 9"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. en réplica-set, si hay más de un secundario, además de servir como respaldo, también funciona como reparto de carga ya que la escritura se realiza siempre en el primario, pero la lectura puede hacerse en los secundarios. no todos los secundarios admiten lectura. ",
                                            "Lineas": "Lines 5 - 9"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. en réplica-set, si hay más de un secundario, además de servir como respaldo, también funciona como reparto de carga ya que la escritura se realiza siempre en el primario, pero la lectura puede hacerse en los secundarios. no todos los secundarios admiten lectura. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "en una configuración mínima hacen falta 3 nodos. uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. en réplica-set, si hay más de un secundario, además de servir como respaldo, también funciona como reparto de carga ya que la escritura se realiza siempre en el primario, pero la lectura puede hacerse en los secundarios. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "la arquitectura replica-set en mongodb es una técnica de respaldo frente a fallos. en una configuración mínima hacen falta 3 nodos. uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. en réplica-set, si hay más de un secundario, además de servir como respaldo, también funciona como reparto de carga ya que la escritura se realiza siempre en el primario, pero la lectura puede hacerse en los secundarios. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "en réplica-set, si hay más de un secundario, además de servir como respaldo, también funciona como reparto de carga ya que la escritura se realiza siempre en el primario, pero la lectura puede hacerse en los secundarios. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.971,
                                            "Frase": "ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.968,
                                            "Frase": "uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.968,
                                            "Frase": "en una configuración mínima hacen falta 3 nodos. uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.967,
                                            "Frase": "en una configuración mínima hacen falta 3 nodos. uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.965,
                                            "Frase": "la arquitectura replica-set en mongodb es una técnica de respaldo frente a fallos. en una configuración mínima hacen falta 3 nodos. uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.964,
                                            "Frase": "la arquitectura replica-set en mongodb es una técnica de respaldo frente a fallos. en una configuración mínima hacen falta 3 nodos. uno de ellos funciona como primario, otro como secundario y el tercero como árbitro. ante caída del primario, los secundarios eligen un nuevo primario y en caso de empate, el árbrito decidiría. es un mecanismo de respaldo automático, a diferencia de mongodump. mongodump consiste en hacer una copia de la base de datos. en caso de caída, mediante mongorestore y, de forma manual, se restaura la base de datos. en réplica-set, si hay más de un secundario, además de servir como respaldo, también funciona como reparto de carga ya que la escritura se realiza siempre en el primario, pero la lectura puede hacerse en los secundarios. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "eef1f460ffd371c2e5c20d78f148817f": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.755,
                                            "Frase": "para la configuración mínima debe de tener al menos 2 nodos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.789,
                                            "Frase": "para realizar una configuración de políticas de permisos deun usuario en un entorno pelicate-set hay que realizar las configuraciones a cada uno de los nodos (principales y secundarios), ya que la réplica se realiza a los datos y no a los permisos de usuario. para la configuración mínima debe de tener al menos 2 nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.801,
                                            "Frase": "para realizar una configuración de políticas de permisos deun usuario en un entorno pelicate-set hay que realizar las configuraciones a cada uno de los nodos (principales y secundarios), ya que la réplica se realiza a los datos y no a los permisos de usuario. para la configuración mínima debe de tener al menos 2 nodos. cuando el nodo primario deja de tener disponibilidad se activa el nodo secundario y empieza a consumir de ese nodo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.708,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad se activa el nodo secundario y empieza a consumir de ese nodo. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.733,
                                            "Frase": "para la configuración mínima debe de tener al menos 2 nodos. cuando el nodo primario deja de tener disponibilidad se activa el nodo secundario y empieza a consumir de ese nodo. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.671,
                                            "Frase": "para realizar una configuración de políticas de permisos deun usuario en un entorno pelicate-set hay que realizar las configuraciones a cada uno de los nodos (principales y secundarios), ya que la réplica se realiza a los datos y no a los permisos de usuario. para la configuración mínima debe de tener al menos 2 nodos. cuando el nodo primario deja de tener disponibilidad se activa el nodo secundario y empieza a consumir de ese nodo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad se activa el nodo secundario y empieza a consumir de ese nodo. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "para la configuración mínima debe de tener al menos 2 nodos. cuando el nodo primario deja de tener disponibilidad se activa el nodo secundario y empieza a consumir de ese nodo. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.857,
                                            "Frase": "para realizar una configuración de políticas de permisos deun usuario en un entorno pelicate-set hay que realizar las configuraciones a cada uno de los nodos (principales y secundarios), ya que la réplica se realiza a los datos y no a los permisos de usuario. para la configuración mínima debe de tener al menos 2 nodos. cuando el nodo primario deja de tener disponibilidad se activa el nodo secundario y empieza a consumir de ese nodo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.877,
                                            "Frase": "para realizar una configuración de políticas de permisos deun usuario en un entorno pelicate-set hay que realizar las configuraciones a cada uno de los nodos (principales y secundarios), ya que la réplica se realiza a los datos y no a los permisos de usuario. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "para realizar una configuración de políticas de permisos deun usuario en un entorno pelicate-set hay que realizar las configuraciones a cada uno de los nodos (principales y secundarios), ya que la réplica se realiza a los datos y no a los permisos de usuario. para la configuración mínima debe de tener al menos 2 nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "para realizar una configuración de políticas de permisos deun usuario en un entorno pelicate-set hay que realizar las configuraciones a cada uno de los nodos (principales y secundarios), ya que la réplica se realiza a los datos y no a los permisos de usuario. para la configuración mínima debe de tener al menos 2 nodos. cuando el nodo primario deja de tener disponibilidad se activa el nodo secundario y empieza a consumir de ese nodo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad se activa el nodo secundario y empieza a consumir de ese nodo. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.882,
                                            "Frase": "para la configuración mínima debe de tener al menos 2 nodos. cuando el nodo primario deja de tener disponibilidad se activa el nodo secundario y empieza a consumir de ese nodo. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "para realizar una configuración de políticas de permisos deun usuario en un entorno pelicate-set hay que realizar las configuraciones a cada uno de los nodos (principales y secundarios), ya que la réplica se realiza a los datos y no a los permisos de usuario. para la configuración mínima debe de tener al menos 2 nodos. cuando el nodo primario deja de tener disponibilidad se activa el nodo secundario y empieza a consumir de ese nodo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.5,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "0cd0c28390bdb06bc0b84f864bc066c5": {
                      "minipregunta0": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta1": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta2": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta3": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "respuesta_completa": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      }
           },
           "b987f8fb47ae6497f73ee45146d8b75a": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "replicaset es una característica de mongodb que permite la replicación de los datos para incrementar su disponibilidad permitiendo la recuperación de datos frente a fallos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "replicaset es una característica de mongodb que permite la replicación de los datos para incrementar su disponibilidad permitiendo la recuperación de datos frente a fallos. la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "replicaset es una característica de mongodb que permite la replicación de los datos para incrementar su disponibilidad permitiendo la recuperación de datos frente a fallos. la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.869,
                                            "Frase": "replicaset es una característica de mongodb que permite la replicación de los datos para incrementar su disponibilidad permitiendo la recuperación de datos frente a fallos. la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. la principal diferencia con el replicaset es que mongodump interrumpe el servicio hasta que manualmente volvemos a recuperar la copia realizada, además que con esta funcionalidad podemos perder datos ya que no se replica de manera constante o en streaming como si lo hace el replicaset. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.748,
                                            "Frase": "por tanto, en caso de fallo del primario asumiría dicho rol el secundario. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.764,
                                            "Frase": "por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.785,
                                            "Frase": "sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.774,
                                            "Frase": "la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.765,
                                            "Frase": "la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.753,
                                            "Frase": "replicaset es una característica de mongodb que permite la replicación de los datos para incrementar su disponibilidad permitiendo la recuperación de datos frente a fallos. la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.743,
                                            "Frase": "replicaset es una característica de mongodb que permite la replicación de los datos para incrementar su disponibilidad permitiendo la recuperación de datos frente a fallos. la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. la principal diferencia con el replicaset es que mongodump interrumpe el servicio hasta que manualmente volvemos a recuperar la copia realizada, además que con esta funcionalidad podemos perder datos ya que no se replica de manera constante o en streaming como si lo hace el replicaset. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "por tanto, en caso de fallo del primario asumiría dicho rol el secundario. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "replicaset es una característica de mongodb que permite la replicación de los datos para incrementar su disponibilidad permitiendo la recuperación de datos frente a fallos. la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. la principal diferencia con el replicaset es que mongodump interrumpe el servicio hasta que manualmente volvemos a recuperar la copia realizada, además que con esta funcionalidad podemos perder datos ya que no se replica de manera constante o en streaming como si lo hace el replicaset. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "replicaset es una característica de mongodb que permite la replicación de los datos para incrementar su disponibilidad permitiendo la recuperación de datos frente a fallos. la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. la principal diferencia con el replicaset es que mongodump interrumpe el servicio hasta que manualmente volvemos a recuperar la copia realizada, además que con esta funcionalidad podemos perder datos ya que no se replica de manera constante o en streaming como si lo hace el replicaset. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "replicaset es una característica de mongodb que permite la replicación de los datos para incrementar su disponibilidad permitiendo la recuperación de datos frente a fallos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "replicaset es una característica de mongodb que permite la replicación de los datos para incrementar su disponibilidad permitiendo la recuperación de datos frente a fallos. la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "replicaset es una característica de mongodb que permite la replicación de los datos para incrementar su disponibilidad permitiendo la recuperación de datos frente a fallos. la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "replicaset es una característica de mongodb que permite la replicación de los datos para incrementar su disponibilidad permitiendo la recuperación de datos frente a fallos. la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "replicaset es una característica de mongodb que permite la replicación de los datos para incrementar su disponibilidad permitiendo la recuperación de datos frente a fallos. la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "replicaset es una característica de mongodb que permite la replicación de los datos para incrementar su disponibilidad permitiendo la recuperación de datos frente a fallos. la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. la principal diferencia con el replicaset es que mongodump interrumpe el servicio hasta que manualmente volvemos a recuperar la copia realizada, además que con esta funcionalidad podemos perder datos ya que no se replica de manera constante o en streaming como si lo hace el replicaset. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "replicaset es una característica de mongodb que permite la replicación de los datos para incrementar su disponibilidad permitiendo la recuperación de datos frente a fallos. la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "replicaset es una característica de mongodb que permite la replicación de los datos para incrementar su disponibilidad permitiendo la recuperación de datos frente a fallos. la arquitectura básica esta conformada por tres nodos (primario-secundario-árbitro), es decir, nodo primario recibe las operaciones de escritura y estas son replicadas al secundario automáticamente, obteniendo así los mismos datos en ambos. la selección de los roles se realiza de manera aleatoria. sin embargo, el nodo árbitro se utiliza para decidir que nodo debe ser primario en caso de que el primario deje de tener disponibilidad. por tanto, en caso de fallo del primario asumiría dicho rol el secundario. adicionalmente, mongodb tiene una funcionalidad mongodump que permite respaldar los datos actuales de la bbdd, es decir, realiza una foto fija de la misma y esta es guardada y exportada en archivos para en caso de pérdida poder recuperar la última foto/copia. la principal diferencia con el replicaset es que mongodump interrumpe el servicio hasta que manualmente volvemos a recuperar la copia realizada, además que con esta funcionalidad podemos perder datos ya que no se replica de manera constante o en streaming como si lo hace el replicaset. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "89ad3f7cd8a0f565e72fb79af368ec39": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.868,
                                            "Frase": "permite la redundancia de datos, trabaja en el modelo maestro esclavo, permite la recuperación a fallos de manera automática, no se define un nodo maestro de forma estática, es asignado al azar y se actualiza dependiendo de la disponibilidad del nodo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.851,
                                            "Frase": "permite la redundancia de datos, trabaja en el modelo maestro esclavo, permite la recuperación a fallos de manera automática, no se define un nodo maestro de forma estática, es asignado al azar y se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada es de tres nodos, dos de los tres nodos tendrán acceso a los datos mediante instancias de mongodb, uno será el nodo primario el otro trabajaría a modo de secundario replicando las operaciones que se realizan el nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.821,
                                            "Frase": "permite la redundancia de datos, trabaja en el modelo maestro esclavo, permite la recuperación a fallos de manera automática, no se define un nodo maestro de forma estática, es asignado al azar y se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada es de tres nodos, dos de los tres nodos tendrán acceso a los datos mediante instancias de mongodb, uno será el nodo primario el otro trabajaría a modo de secundario replicando las operaciones que se realizan el nodo primario. el tercer nodo, se lo llama árbitro, monitorea y es utilizado para para decidir que nodo deber ser el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.765,
                                            "Frase": "permite la redundancia de datos, trabaja en el modelo maestro esclavo, permite la recuperación a fallos de manera automática, no se define un nodo maestro de forma estática, es asignado al azar y se actualiza dependiendo de la disponibilidad del nodo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.742,
                                            "Frase": "permite la redundancia de datos, trabaja en el modelo maestro esclavo, permite la recuperación a fallos de manera automática, no se define un nodo maestro de forma estática, es asignado al azar y se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada es de tres nodos, dos de los tres nodos tendrán acceso a los datos mediante instancias de mongodb, uno será el nodo primario el otro trabajaría a modo de secundario replicando las operaciones que se realizan el nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.75,
                                            "Frase": "permite la redundancia de datos, trabaja en el modelo maestro esclavo, permite la recuperación a fallos de manera automática, no se define un nodo maestro de forma estática, es asignado al azar y se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada es de tres nodos, dos de los tres nodos tendrán acceso a los datos mediante instancias de mongodb, uno será el nodo primario el otro trabajaría a modo de secundario replicando las operaciones que se realizan el nodo primario. el tercer nodo, se lo llama árbitro, monitorea y es utilizado para para decidir que nodo deber ser el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "permite la redundancia de datos, trabaja en el modelo maestro esclavo, permite la recuperación a fallos de manera automática, no se define un nodo maestro de forma estática, es asignado al azar y se actualiza dependiendo de la disponibilidad del nodo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "la configuración mínima recomendada es de tres nodos, dos de los tres nodos tendrán acceso a los datos mediante instancias de mongodb, uno será el nodo primario el otro trabajaría a modo de secundario replicando las operaciones que se realizan el nodo primario. el tercer nodo, se lo llama árbitro, monitorea y es utilizado para para decidir que nodo deber ser el primario. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "permite la redundancia de datos, trabaja en el modelo maestro esclavo, permite la recuperación a fallos de manera automática, no se define un nodo maestro de forma estática, es asignado al azar y se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada es de tres nodos, dos de los tres nodos tendrán acceso a los datos mediante instancias de mongodb, uno será el nodo primario el otro trabajaría a modo de secundario replicando las operaciones que se realizan el nodo primario. el tercer nodo, se lo llama árbitro, monitorea y es utilizado para para decidir que nodo deber ser el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "permite la redundancia de datos, trabaja en el modelo maestro esclavo, permite la recuperación a fallos de manera automática, no se define un nodo maestro de forma estática, es asignado al azar y se actualiza dependiendo de la disponibilidad del nodo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "permite la redundancia de datos, trabaja en el modelo maestro esclavo, permite la recuperación a fallos de manera automática, no se define un nodo maestro de forma estática, es asignado al azar y se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada es de tres nodos, dos de los tres nodos tendrán acceso a los datos mediante instancias de mongodb, uno será el nodo primario el otro trabajaría a modo de secundario replicando las operaciones que se realizan el nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "permite la redundancia de datos, trabaja en el modelo maestro esclavo, permite la recuperación a fallos de manera automática, no se define un nodo maestro de forma estática, es asignado al azar y se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada es de tres nodos, dos de los tres nodos tendrán acceso a los datos mediante instancias de mongodb, uno será el nodo primario el otro trabajaría a modo de secundario replicando las operaciones que se realizan el nodo primario. el tercer nodo, se lo llama árbitro, monitorea y es utilizado para para decidir que nodo deber ser el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "permite la redundancia de datos, trabaja en el modelo maestro esclavo, permite la recuperación a fallos de manera automática, no se define un nodo maestro de forma estática, es asignado al azar y se actualiza dependiendo de la disponibilidad del nodo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "permite la redundancia de datos, trabaja en el modelo maestro esclavo, permite la recuperación a fallos de manera automática, no se define un nodo maestro de forma estática, es asignado al azar y se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada es de tres nodos, dos de los tres nodos tendrán acceso a los datos mediante instancias de mongodb, uno será el nodo primario el otro trabajaría a modo de secundario replicando las operaciones que se realizan el nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "permite la redundancia de datos, trabaja en el modelo maestro esclavo, permite la recuperación a fallos de manera automática, no se define un nodo maestro de forma estática, es asignado al azar y se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendada es de tres nodos, dos de los tres nodos tendrán acceso a los datos mediante instancias de mongodb, uno será el nodo primario el otro trabajaría a modo de secundario replicando las operaciones que se realizan el nodo primario. el tercer nodo, se lo llama árbitro, monitorea y es utilizado para para decidir que nodo deber ser el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "ad1aa306048af72b3d93c48d382e7205": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.875,
                                            "Frase": "del modelo maestro-esclavo, se creó una mejor forma de llevar el respaldo mediate un conjunto de réplicas <replica-set>, el sistema de replicación consta de 3 nodos para una configuración mínima, estos nodos son: nodo principal, nodo secundario y un nodo árbitro; cada nodo se encuentra interconectado entre sí, con esta arquitectura se soluciona problemas de recuperación a fallos y es la forma recomendada de replicación de mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "del modelo maestro-esclavo, se creó una mejor forma de llevar el respaldo mediate un conjunto de réplicas <replica-set>, el sistema de replicación consta de 3 nodos para una configuración mínima, estos nodos son: nodo principal, nodo secundario y un nodo árbitro; cada nodo se encuentra interconectado entre sí, con esta arquitectura se soluciona problemas de recuperación a fallos y es la forma recomendada de replicación de mongodb. replica-set funciona mediante un envío constante de pings entre los nodos, con esto se mantiene el control, la función del nodo árbitro es determinar que nodo es primario y cual es secundario, la replicación se realiza entre el nodo primario y secundario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.83,
                                            "Frase": "del modelo maestro-esclavo, se creó una mejor forma de llevar el respaldo mediate un conjunto de réplicas <replica-set>, el sistema de replicación consta de 3 nodos para una configuración mínima, estos nodos son: nodo principal, nodo secundario y un nodo árbitro; cada nodo se encuentra interconectado entre sí, con esta arquitectura se soluciona problemas de recuperación a fallos y es la forma recomendada de replicación de mongodb. replica-set funciona mediante un envío constante de pings entre los nodos, con esto se mantiene el control, la función del nodo árbitro es determinar que nodo es primario y cual es secundario, la replicación se realiza entre el nodo primario y secundario. si el nodo primario no se encuentra disponible un nodo secundario tomará su lugar. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.811,
                                            "Frase": "del modelo maestro-esclavo, se creó una mejor forma de llevar el respaldo mediate un conjunto de réplicas <replica-set>, el sistema de replicación consta de 3 nodos para una configuración mínima, estos nodos son: nodo principal, nodo secundario y un nodo árbitro; cada nodo se encuentra interconectado entre sí, con esta arquitectura se soluciona problemas de recuperación a fallos y es la forma recomendada de replicación de mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.822,
                                            "Frase": "del modelo maestro-esclavo, se creó una mejor forma de llevar el respaldo mediate un conjunto de réplicas <replica-set>, el sistema de replicación consta de 3 nodos para una configuración mínima, estos nodos son: nodo principal, nodo secundario y un nodo árbitro; cada nodo se encuentra interconectado entre sí, con esta arquitectura se soluciona problemas de recuperación a fallos y es la forma recomendada de replicación de mongodb. replica-set funciona mediante un envío constante de pings entre los nodos, con esto se mantiene el control, la función del nodo árbitro es determinar que nodo es primario y cual es secundario, la replicación se realiza entre el nodo primario y secundario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.818,
                                            "Frase": "del modelo maestro-esclavo, se creó una mejor forma de llevar el respaldo mediate un conjunto de réplicas <replica-set>, el sistema de replicación consta de 3 nodos para una configuración mínima, estos nodos son: nodo principal, nodo secundario y un nodo árbitro; cada nodo se encuentra interconectado entre sí, con esta arquitectura se soluciona problemas de recuperación a fallos y es la forma recomendada de replicación de mongodb. replica-set funciona mediante un envío constante de pings entre los nodos, con esto se mantiene el control, la función del nodo árbitro es determinar que nodo es primario y cual es secundario, la replicación se realiza entre el nodo primario y secundario. si el nodo primario no se encuentra disponible un nodo secundario tomará su lugar. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "replica-set funciona mediante un envío constante de pings entre los nodos, con esto se mantiene el control, la función del nodo árbitro es determinar que nodo es primario y cual es secundario, la replicación se realiza entre el nodo primario y secundario. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "del modelo maestro-esclavo, se creó una mejor forma de llevar el respaldo mediate un conjunto de réplicas <replica-set>, el sistema de replicación consta de 3 nodos para una configuración mínima, estos nodos son: nodo principal, nodo secundario y un nodo árbitro; cada nodo se encuentra interconectado entre sí, con esta arquitectura se soluciona problemas de recuperación a fallos y es la forma recomendada de replicación de mongodb. replica-set funciona mediante un envío constante de pings entre los nodos, con esto se mantiene el control, la función del nodo árbitro es determinar que nodo es primario y cual es secundario, la replicación se realiza entre el nodo primario y secundario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "del modelo maestro-esclavo, se creó una mejor forma de llevar el respaldo mediate un conjunto de réplicas <replica-set>, el sistema de replicación consta de 3 nodos para una configuración mínima, estos nodos son: nodo principal, nodo secundario y un nodo árbitro; cada nodo se encuentra interconectado entre sí, con esta arquitectura se soluciona problemas de recuperación a fallos y es la forma recomendada de replicación de mongodb. replica-set funciona mediante un envío constante de pings entre los nodos, con esto se mantiene el control, la función del nodo árbitro es determinar que nodo es primario y cual es secundario, la replicación se realiza entre el nodo primario y secundario. si el nodo primario no se encuentra disponible un nodo secundario tomará su lugar. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "del modelo maestro-esclavo, se creó una mejor forma de llevar el respaldo mediate un conjunto de réplicas <replica-set>, el sistema de replicación consta de 3 nodos para una configuración mínima, estos nodos son: nodo principal, nodo secundario y un nodo árbitro; cada nodo se encuentra interconectado entre sí, con esta arquitectura se soluciona problemas de recuperación a fallos y es la forma recomendada de replicación de mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "del modelo maestro-esclavo, se creó una mejor forma de llevar el respaldo mediate un conjunto de réplicas <replica-set>, el sistema de replicación consta de 3 nodos para una configuración mínima, estos nodos son: nodo principal, nodo secundario y un nodo árbitro; cada nodo se encuentra interconectado entre sí, con esta arquitectura se soluciona problemas de recuperación a fallos y es la forma recomendada de replicación de mongodb. replica-set funciona mediante un envío constante de pings entre los nodos, con esto se mantiene el control, la función del nodo árbitro es determinar que nodo es primario y cual es secundario, la replicación se realiza entre el nodo primario y secundario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.873,
                                            "Frase": "del modelo maestro-esclavo, se creó una mejor forma de llevar el respaldo mediate un conjunto de réplicas <replica-set>, el sistema de replicación consta de 3 nodos para una configuración mínima, estos nodos son: nodo principal, nodo secundario y un nodo árbitro; cada nodo se encuentra interconectado entre sí, con esta arquitectura se soluciona problemas de recuperación a fallos y es la forma recomendada de replicación de mongodb. replica-set funciona mediante un envío constante de pings entre los nodos, con esto se mantiene el control, la función del nodo árbitro es determinar que nodo es primario y cual es secundario, la replicación se realiza entre el nodo primario y secundario. si el nodo primario no se encuentra disponible un nodo secundario tomará su lugar. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "del modelo maestro-esclavo, se creó una mejor forma de llevar el respaldo mediate un conjunto de réplicas <replica-set>, el sistema de replicación consta de 3 nodos para una configuración mínima, estos nodos son: nodo principal, nodo secundario y un nodo árbitro; cada nodo se encuentra interconectado entre sí, con esta arquitectura se soluciona problemas de recuperación a fallos y es la forma recomendada de replicación de mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "del modelo maestro-esclavo, se creó una mejor forma de llevar el respaldo mediate un conjunto de réplicas <replica-set>, el sistema de replicación consta de 3 nodos para una configuración mínima, estos nodos son: nodo principal, nodo secundario y un nodo árbitro; cada nodo se encuentra interconectado entre sí, con esta arquitectura se soluciona problemas de recuperación a fallos y es la forma recomendada de replicación de mongodb. replica-set funciona mediante un envío constante de pings entre los nodos, con esto se mantiene el control, la función del nodo árbitro es determinar que nodo es primario y cual es secundario, la replicación se realiza entre el nodo primario y secundario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "del modelo maestro-esclavo, se creó una mejor forma de llevar el respaldo mediate un conjunto de réplicas <replica-set>, el sistema de replicación consta de 3 nodos para una configuración mínima, estos nodos son: nodo principal, nodo secundario y un nodo árbitro; cada nodo se encuentra interconectado entre sí, con esta arquitectura se soluciona problemas de recuperación a fallos y es la forma recomendada de replicación de mongodb. replica-set funciona mediante un envío constante de pings entre los nodos, con esto se mantiene el control, la función del nodo árbitro es determinar que nodo es primario y cual es secundario, la replicación se realiza entre el nodo primario y secundario. si el nodo primario no se encuentra disponible un nodo secundario tomará su lugar. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "208d7d7d84e0b19d8f001773337b4f52": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.848,
                                            "Frase": "la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.874,
                                            "Frase": "cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.851,
                                            "Frase": "un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.862,
                                            "Frase": "son necesarios para una configuración mínima 3 nodos. un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.874,
                                            "Frase": "los replica-set son un modelo que distribuyen los datos en diferentes nodos de un sistema para respaldar a la base de datos frente a fallos de la misma en lo referente a posibles pérdidas de datos. son necesarios para una configuración mínima 3 nodos. un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.851,
                                            "Frase": "la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.846,
                                            "Frase": "un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.848,
                                            "Frase": "son necesarios para una configuración mínima 3 nodos. un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "son necesarios para una configuración mínima 3 nodos. un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.815,
                                            "Frase": "los replica-set son un modelo que distribuyen los datos en diferentes nodos de un sistema para respaldar a la base de datos frente a fallos de la misma en lo referente a posibles pérdidas de datos. son necesarios para una configuración mínima 3 nodos. un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "son necesarios para una configuración mínima 3 nodos. un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "los replica-set son un modelo que distribuyen los datos en diferentes nodos de un sistema para respaldar a la base de datos frente a fallos de la misma en lo referente a posibles pérdidas de datos. son necesarios para una configuración mínima 3 nodos. un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "los replica-set son un modelo que distribuyen los datos en diferentes nodos de un sistema para respaldar a la base de datos frente a fallos de la misma en lo referente a posibles pérdidas de datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "los replica-set son un modelo que distribuyen los datos en diferentes nodos de un sistema para respaldar a la base de datos frente a fallos de la misma en lo referente a posibles pérdidas de datos. son necesarios para una configuración mínima 3 nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.883,
                                            "Frase": "los replica-set son un modelo que distribuyen los datos en diferentes nodos de un sistema para respaldar a la base de datos frente a fallos de la misma en lo referente a posibles pérdidas de datos. son necesarios para una configuración mínima 3 nodos. un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "los replica-set son un modelo que distribuyen los datos en diferentes nodos de un sistema para respaldar a la base de datos frente a fallos de la misma en lo referente a posibles pérdidas de datos. son necesarios para una configuración mínima 3 nodos. un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "los replica-set son un modelo que distribuyen los datos en diferentes nodos de un sistema para respaldar a la base de datos frente a fallos de la misma en lo referente a posibles pérdidas de datos. son necesarios para una configuración mínima 3 nodos. un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.958,
                                            "Frase": "cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.959,
                                            "Frase": "son necesarios para una configuración mínima 3 nodos. un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.958,
                                            "Frase": "los replica-set son un modelo que distribuyen los datos en diferentes nodos de un sistema para respaldar a la base de datos frente a fallos de la misma en lo referente a posibles pérdidas de datos. son necesarios para una configuración mínima 3 nodos. un nodo primario, un nodo secundario y un nodo árbitro. cuando el nodo primario deja de estar disponible por cualquier razón, otro nodo secundario debe tomar la responsabilidad de nodo primario. esta decisión se toma mediante votos de los diferentes nodos secundarios y la arbitrariedad del nodo árbitro para decidir quién será nodo primario en caso de empate. la principal diferencia con mongodump es que mongodump usa un modelo de maestro-esclavo donde el maestro es estático y los replica set usan un modelo con el maestro dinámico, dependiendo de la disponibilidad de los nodos, como se ha comentado en el anterior párrafo. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "6481bb938829a9dd38a1a52c097c5126": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.823,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.833,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. también no protege de ante borrados y/e inserciones por error. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.815,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. también no protege de ante borrados y/e inserciones por error. cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.788,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. también no protege de ante borrados y/e inserciones por error. cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. cuando vuelva el nodo que ha perdido conectividad se convertirá en nodo secundario y se sincronizará. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.814,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. también no protege de ante borrados y/e inserciones por error. cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. cuando vuelva el nodo que ha perdido conectividad se convertirá en nodo secundario y se sincronizará. replica set replica los datos entre los nodos y sirve para tener alta disponibilidad, en cambio mongodump hace una copia de seguridad de los datos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.728,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.737,
                                            "Frase": "también no protege de ante borrados y/e inserciones por error. cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.749,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. también no protege de ante borrados y/e inserciones por error. cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.733,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. también no protege de ante borrados y/e inserciones por error. cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. cuando vuelva el nodo que ha perdido conectividad se convertirá en nodo secundario y se sincronizará. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.727,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. también no protege de ante borrados y/e inserciones por error. cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. cuando vuelva el nodo que ha perdido conectividad se convertirá en nodo secundario y se sincronizará. replica set replica los datos entre los nodos y sirve para tener alta disponibilidad, en cambio mongodump hace una copia de seguridad de los datos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "también no protege de ante borrados y/e inserciones por error. cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. también no protege de ante borrados y/e inserciones por error. cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "también no protege de ante borrados y/e inserciones por error. cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. cuando vuelva el nodo que ha perdido conectividad se convertirá en nodo secundario y se sincronizará. replica set replica los datos entre los nodos y sirve para tener alta disponibilidad, en cambio mongodump hace una copia de seguridad de los datos. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. también no protege de ante borrados y/e inserciones por error. cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. cuando vuelva el nodo que ha perdido conectividad se convertirá en nodo secundario y se sincronizará. replica set replica los datos entre los nodos y sirve para tener alta disponibilidad, en cambio mongodump hace una copia de seguridad de los datos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. también no protege de ante borrados y/e inserciones por error. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. también no protege de ante borrados y/e inserciones por error. cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. también no protege de ante borrados y/e inserciones por error. cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. cuando vuelva el nodo que ha perdido conectividad se convertirá en nodo secundario y se sincronizará. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. también no protege de ante borrados y/e inserciones por error. cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. cuando vuelva el nodo que ha perdido conectividad se convertirá en nodo secundario y se sincronizará. replica set replica los datos entre los nodos y sirve para tener alta disponibilidad, en cambio mongodump hace una copia de seguridad de los datos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. también no protege de ante borrados y/e inserciones por error. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. también no protege de ante borrados y/e inserciones por error. cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. también no protege de ante borrados y/e inserciones por error. cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. cuando vuelva el nodo que ha perdido conectividad se convertirá en nodo secundario y se sincronizará. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "son la alta disponibilidad y la replicación automática de datos se necesitan 3 nodos un primario y dos secundarios ante una caída del primario, siempre tiene una copia de los dataos, muy importante los nodos secundarios pueden no estar sincronizados con el primario debido a que tienen un parámetro de tiempo de cuando se sincronizan. también no protege de ante borrados y/e inserciones por error. cuando cae el primario los secundarios tienen que decidir quién se convierte en primario por medio de votos, puede existir en la configuración un nodo arbitro solamente con este rol que decidirá el desempate. cuando vuelva el nodo que ha perdido conectividad se convertirá en nodo secundario y se sincronizará. replica set replica los datos entre los nodos y sirve para tener alta disponibilidad, en cambio mongodump hace una copia de seguridad de los datos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "2f364b354aba0283902a93554f35f1a6": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.868,
                                            "Frase": "un replica -set, se lo conoce también como shard, es el componente se encarga de guardar la información en el proceso de distribución de los datos. este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.868,
                                            "Frase": "un replica -set, se lo conoce también como shard, es el componente se encarga de guardar la información en el proceso de distribución de los datos. este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. son al menos necesarios 2 nodos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.865,
                                            "Frase": "este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. son al menos necesarios 2 nodos. y si el nodo primario cae, en seguida sube el segundo. la principal diferencia con mongodump, este crea una copia de datos offline, en cambio que los replica-set se encuentran een línea. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.859,
                                            "Frase": "un replica -set, se lo conoce también como shard, es el componente se encarga de guardar la información en el proceso de distribución de los datos. este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. son al menos necesarios 2 nodos. y si el nodo primario cae, en seguida sube el segundo. la principal diferencia con mongodump, este crea una copia de datos offline, en cambio que los replica-set se encuentran een línea. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.782,
                                            "Frase": "este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.792,
                                            "Frase": "un replica -set, se lo conoce también como shard, es el componente se encarga de guardar la información en el proceso de distribución de los datos. este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.794,
                                            "Frase": "un replica -set, se lo conoce también como shard, es el componente se encarga de guardar la información en el proceso de distribución de los datos. este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. son al menos necesarios 2 nodos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.803,
                                            "Frase": "un replica -set, se lo conoce también como shard, es el componente se encarga de guardar la información en el proceso de distribución de los datos. este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. son al menos necesarios 2 nodos. y si el nodo primario cae, en seguida sube el segundo. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.788,
                                            "Frase": "un replica -set, se lo conoce también como shard, es el componente se encarga de guardar la información en el proceso de distribución de los datos. este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. son al menos necesarios 2 nodos. y si el nodo primario cae, en seguida sube el segundo. la principal diferencia con mongodump, este crea una copia de datos offline, en cambio que los replica-set se encuentran een línea. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "un replica -set, se lo conoce también como shard, es el componente se encarga de guardar la información en el proceso de distribución de los datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "un replica -set, se lo conoce también como shard, es el componente se encarga de guardar la información en el proceso de distribución de los datos. este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. son al menos necesarios 2 nodos. y si el nodo primario cae, en seguida sube el segundo. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "un replica -set, se lo conoce también como shard, es el componente se encarga de guardar la información en el proceso de distribución de los datos. este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. son al menos necesarios 2 nodos. y si el nodo primario cae, en seguida sube el segundo. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "un replica -set, se lo conoce también como shard, es el componente se encarga de guardar la información en el proceso de distribución de los datos. este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. son al menos necesarios 2 nodos. y si el nodo primario cae, en seguida sube el segundo. la principal diferencia con mongodump, este crea una copia de datos offline, en cambio que los replica-set se encuentran een línea. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "la principal diferencia con mongodump, este crea una copia de datos offline, en cambio que los replica-set se encuentran een línea. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "un replica -set, se lo conoce también como shard, es el componente se encarga de guardar la información en el proceso de distribución de los datos. este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.882,
                                            "Frase": "un replica -set, se lo conoce también como shard, es el componente se encarga de guardar la información en el proceso de distribución de los datos. este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. son al menos necesarios 2 nodos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. son al menos necesarios 2 nodos. y si el nodo primario cae, en seguida sube el segundo. la principal diferencia con mongodump, este crea una copia de datos offline, en cambio que los replica-set se encuentran een línea. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "un replica -set, se lo conoce también como shard, es el componente se encarga de guardar la información en el proceso de distribución de los datos. este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. son al menos necesarios 2 nodos. y si el nodo primario cae, en seguida sube el segundo. la principal diferencia con mongodump, este crea una copia de datos offline, en cambio que los replica-set se encuentran een línea. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "un replica -set, se lo conoce también como shard, es el componente se encarga de guardar la información en el proceso de distribución de los datos. este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "un replica -set, se lo conoce también como shard, es el componente se encarga de guardar la información en el proceso de distribución de los datos. este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. son al menos necesarios 2 nodos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. son al menos necesarios 2 nodos. y si el nodo primario cae, en seguida sube el segundo. la principal diferencia con mongodump, este crea una copia de datos offline, en cambio que los replica-set se encuentran een línea. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "un replica -set, se lo conoce también como shard, es el componente se encarga de guardar la información en el proceso de distribución de los datos. este proceso de distribución es conocido como sharding , y mediante el réplica-set se brinda alta disponibilidad y genera consistencia de datos. son al menos necesarios 2 nodos. y si el nodo primario cae, en seguida sube el segundo. la principal diferencia con mongodump, este crea una copia de datos offline, en cambio que los replica-set se encuentran een línea. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "47335fa94919e97d7398189dafb3e5c0": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.84,
                                            "Frase": "la distribución en mongodb se hace con sharding y una arquitectura replicaset permite disponibilidad y consistencia de datos con los shards. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.83,
                                            "Frase": "la distribución en mongodb se hace con sharding y una arquitectura replicaset permite disponibilidad y consistencia de datos con los shards. esta arquitectura en mongo sigue un modelo maestro eslavo pero mejorado, ya que permite una recuperación de fallos automática, ya que la asignación de maestro se actualiza según la disponibilidad. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.803,
                                            "Frase": "la distribución en mongodb se hace con sharding y una arquitectura replicaset permite disponibilidad y consistencia de datos con los shards. esta arquitectura en mongo sigue un modelo maestro eslavo pero mejorado, ya que permite una recuperación de fallos automática, ya que la asignación de maestro se actualiza según la disponibilidad. los nodos se comunican entre ellos cada 2 segundos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.811,
                                            "Frase": "esta arquitectura en mongo sigue un modelo maestro eslavo pero mejorado, ya que permite una recuperación de fallos automática, ya que la asignación de maestro se actualiza según la disponibilidad. los nodos se comunican entre ellos cada 2 segundos. como mínimo en un replica set se recomiendan tres nodos, para que uno sea el primario, el otro replicará los datos y el tercero decide que nodo debe de ser asignado como primario. mongodump junto con mongostore es para hacer respaldo, es decir generamos una copia de seguridad y luego la volcamos. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.837,
                                            "Frase": "la distribución en mongodb se hace con sharding y una arquitectura replicaset permite disponibilidad y consistencia de datos con los shards. esta arquitectura en mongo sigue un modelo maestro eslavo pero mejorado, ya que permite una recuperación de fallos automática, ya que la asignación de maestro se actualiza según la disponibilidad. los nodos se comunican entre ellos cada 2 segundos. como mínimo en un replica set se recomiendan tres nodos, para que uno sea el primario, el otro replicará los datos y el tercero decide que nodo debe de ser asignado como primario. mongodump junto con mongostore es para hacer respaldo, es decir generamos una copia de seguridad y luego la volcamos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.723,
                                            "Frase": "mongodump junto con mongostore es para hacer respaldo, es decir generamos una copia de seguridad y luego la volcamos. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.802,
                                            "Frase": "como mínimo en un replica set se recomiendan tres nodos, para que uno sea el primario, el otro replicará los datos y el tercero decide que nodo debe de ser asignado como primario. mongodump junto con mongostore es para hacer respaldo, es decir generamos una copia de seguridad y luego la volcamos. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.768,
                                            "Frase": "los nodos se comunican entre ellos cada 2 segundos. como mínimo en un replica set se recomiendan tres nodos, para que uno sea el primario, el otro replicará los datos y el tercero decide que nodo debe de ser asignado como primario. mongodump junto con mongostore es para hacer respaldo, es decir generamos una copia de seguridad y luego la volcamos. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.765,
                                            "Frase": "esta arquitectura en mongo sigue un modelo maestro eslavo pero mejorado, ya que permite una recuperación de fallos automática, ya que la asignación de maestro se actualiza según la disponibilidad. los nodos se comunican entre ellos cada 2 segundos. como mínimo en un replica set se recomiendan tres nodos, para que uno sea el primario, el otro replicará los datos y el tercero decide que nodo debe de ser asignado como primario. mongodump junto con mongostore es para hacer respaldo, es decir generamos una copia de seguridad y luego la volcamos. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.754,
                                            "Frase": "la distribución en mongodb se hace con sharding y una arquitectura replicaset permite disponibilidad y consistencia de datos con los shards. esta arquitectura en mongo sigue un modelo maestro eslavo pero mejorado, ya que permite una recuperación de fallos automática, ya que la asignación de maestro se actualiza según la disponibilidad. los nodos se comunican entre ellos cada 2 segundos. como mínimo en un replica set se recomiendan tres nodos, para que uno sea el primario, el otro replicará los datos y el tercero decide que nodo debe de ser asignado como primario. mongodump junto con mongostore es para hacer respaldo, es decir generamos una copia de seguridad y luego la volcamos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.892,
                                            "Frase": "como mínimo en un replica set se recomiendan tres nodos, para que uno sea el primario, el otro replicará los datos y el tercero decide que nodo debe de ser asignado como primario. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "como mínimo en un replica set se recomiendan tres nodos, para que uno sea el primario, el otro replicará los datos y el tercero decide que nodo debe de ser asignado como primario. mongodump junto con mongostore es para hacer respaldo, es decir generamos una copia de seguridad y luego la volcamos. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "los nodos se comunican entre ellos cada 2 segundos. como mínimo en un replica set se recomiendan tres nodos, para que uno sea el primario, el otro replicará los datos y el tercero decide que nodo debe de ser asignado como primario. mongodump junto con mongostore es para hacer respaldo, es decir generamos una copia de seguridad y luego la volcamos. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "esta arquitectura en mongo sigue un modelo maestro eslavo pero mejorado, ya que permite una recuperación de fallos automática, ya que la asignación de maestro se actualiza según la disponibilidad. los nodos se comunican entre ellos cada 2 segundos. como mínimo en un replica set se recomiendan tres nodos, para que uno sea el primario, el otro replicará los datos y el tercero decide que nodo debe de ser asignado como primario. mongodump junto con mongostore es para hacer respaldo, es decir generamos una copia de seguridad y luego la volcamos. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "la distribución en mongodb se hace con sharding y una arquitectura replicaset permite disponibilidad y consistencia de datos con los shards. esta arquitectura en mongo sigue un modelo maestro eslavo pero mejorado, ya que permite una recuperación de fallos automática, ya que la asignación de maestro se actualiza según la disponibilidad. los nodos se comunican entre ellos cada 2 segundos. como mínimo en un replica set se recomiendan tres nodos, para que uno sea el primario, el otro replicará los datos y el tercero decide que nodo debe de ser asignado como primario. mongodump junto con mongostore es para hacer respaldo, es decir generamos una copia de seguridad y luego la volcamos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "la distribución en mongodb se hace con sharding y una arquitectura replicaset permite disponibilidad y consistencia de datos con los shards. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "la distribución en mongodb se hace con sharding y una arquitectura replicaset permite disponibilidad y consistencia de datos con los shards. esta arquitectura en mongo sigue un modelo maestro eslavo pero mejorado, ya que permite una recuperación de fallos automática, ya que la asignación de maestro se actualiza según la disponibilidad. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "la distribución en mongodb se hace con sharding y una arquitectura replicaset permite disponibilidad y consistencia de datos con los shards. esta arquitectura en mongo sigue un modelo maestro eslavo pero mejorado, ya que permite una recuperación de fallos automática, ya que la asignación de maestro se actualiza según la disponibilidad. los nodos se comunican entre ellos cada 2 segundos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "esta arquitectura en mongo sigue un modelo maestro eslavo pero mejorado, ya que permite una recuperación de fallos automática, ya que la asignación de maestro se actualiza según la disponibilidad. los nodos se comunican entre ellos cada 2 segundos. como mínimo en un replica set se recomiendan tres nodos, para que uno sea el primario, el otro replicará los datos y el tercero decide que nodo debe de ser asignado como primario. mongodump junto con mongostore es para hacer respaldo, es decir generamos una copia de seguridad y luego la volcamos. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "la distribución en mongodb se hace con sharding y una arquitectura replicaset permite disponibilidad y consistencia de datos con los shards. esta arquitectura en mongo sigue un modelo maestro eslavo pero mejorado, ya que permite una recuperación de fallos automática, ya que la asignación de maestro se actualiza según la disponibilidad. los nodos se comunican entre ellos cada 2 segundos. como mínimo en un replica set se recomiendan tres nodos, para que uno sea el primario, el otro replicará los datos y el tercero decide que nodo debe de ser asignado como primario. mongodump junto con mongostore es para hacer respaldo, es decir generamos una copia de seguridad y luego la volcamos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.851,
                                            "Frase": "esta arquitectura en mongo sigue un modelo maestro eslavo pero mejorado, ya que permite una recuperación de fallos automática, ya que la asignación de maestro se actualiza según la disponibilidad. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "como mínimo en un replica set se recomiendan tres nodos, para que uno sea el primario, el otro replicará los datos y el tercero decide que nodo debe de ser asignado como primario. mongodump junto con mongostore es para hacer respaldo, es decir generamos una copia de seguridad y luego la volcamos. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "los nodos se comunican entre ellos cada 2 segundos. como mínimo en un replica set se recomiendan tres nodos, para que uno sea el primario, el otro replicará los datos y el tercero decide que nodo debe de ser asignado como primario. mongodump junto con mongostore es para hacer respaldo, es decir generamos una copia de seguridad y luego la volcamos. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "esta arquitectura en mongo sigue un modelo maestro eslavo pero mejorado, ya que permite una recuperación de fallos automática, ya que la asignación de maestro se actualiza según la disponibilidad. los nodos se comunican entre ellos cada 2 segundos. como mínimo en un replica set se recomiendan tres nodos, para que uno sea el primario, el otro replicará los datos y el tercero decide que nodo debe de ser asignado como primario. mongodump junto con mongostore es para hacer respaldo, es decir generamos una copia de seguridad y luego la volcamos. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "la distribución en mongodb se hace con sharding y una arquitectura replicaset permite disponibilidad y consistencia de datos con los shards. esta arquitectura en mongo sigue un modelo maestro eslavo pero mejorado, ya que permite una recuperación de fallos automática, ya que la asignación de maestro se actualiza según la disponibilidad. los nodos se comunican entre ellos cada 2 segundos. como mínimo en un replica set se recomiendan tres nodos, para que uno sea el primario, el otro replicará los datos y el tercero decide que nodo debe de ser asignado como primario. mongodump junto con mongostore es para hacer respaldo, es decir generamos una copia de seguridad y luego la volcamos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "e701e12a355a589e8777a54a88d7f0a4": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "replica-set es una arquitectura que permite la alta disponibilidad y tolerancia a fallos. es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "replica-set es una arquitectura que permite la alta disponibilidad y tolerancia a fallos. es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "replica-set es una arquitectura que permite la alta disponibilidad y tolerancia a fallos. es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.874,
                                            "Frase": "replica-set es una arquitectura que permite la alta disponibilidad y tolerancia a fallos. es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). la diferencia con mongodump es que mongodump es una utilidad que se hace bajo demanda, es decir, cuando se requiera hacer una copia de respaldo simplemente se ejecuta el comando para generar la copia y luego se importa. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "replica-set es una arquitectura que permite la alta disponibilidad y tolerancia a fallos. es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). la diferencia con mongodump es que mongodump es una utilidad que se hace bajo demanda, es decir, cuando se requiera hacer una copia de respaldo simplemente se ejecuta el comando para generar la copia y luego se importa. por su parte, replica-set está generando copias entre los nodos de manera automática y transparente. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.774,
                                            "Frase": "para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.826,
                                            "Frase": "para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.838,
                                            "Frase": "es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.842,
                                            "Frase": "es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.837,
                                            "Frase": "replica-set es una arquitectura que permite la alta disponibilidad y tolerancia a fallos. es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.812,
                                            "Frase": "replica-set es una arquitectura que permite la alta disponibilidad y tolerancia a fallos. es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). la diferencia con mongodump es que mongodump es una utilidad que se hace bajo demanda, es decir, cuando se requiera hacer una copia de respaldo simplemente se ejecuta el comando para generar la copia y luego se importa. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.805,
                                            "Frase": "replica-set es una arquitectura que permite la alta disponibilidad y tolerancia a fallos. es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). la diferencia con mongodump es que mongodump es una utilidad que se hace bajo demanda, es decir, cuando se requiera hacer una copia de respaldo simplemente se ejecuta el comando para generar la copia y luego se importa. por su parte, replica-set está generando copias entre los nodos de manera automática y transparente. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.892,
                                            "Frase": "el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "replica-set es una arquitectura que permite la alta disponibilidad y tolerancia a fallos. es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). la diferencia con mongodump es que mongodump es una utilidad que se hace bajo demanda, es decir, cuando se requiera hacer una copia de respaldo simplemente se ejecuta el comando para generar la copia y luego se importa. por su parte, replica-set está generando copias entre los nodos de manera automática y transparente. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "replica-set es una arquitectura que permite la alta disponibilidad y tolerancia a fallos. es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). la diferencia con mongodump es que mongodump es una utilidad que se hace bajo demanda, es decir, cuando se requiera hacer una copia de respaldo simplemente se ejecuta el comando para generar la copia y luego se importa. por su parte, replica-set está generando copias entre los nodos de manera automática y transparente. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "replica-set es una arquitectura que permite la alta disponibilidad y tolerancia a fallos. es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "replica-set es una arquitectura que permite la alta disponibilidad y tolerancia a fallos. es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). la diferencia con mongodump es que mongodump es una utilidad que se hace bajo demanda, es decir, cuando se requiera hacer una copia de respaldo simplemente se ejecuta el comando para generar la copia y luego se importa. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "replica-set es una arquitectura que permite la alta disponibilidad y tolerancia a fallos. es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). la diferencia con mongodump es que mongodump es una utilidad que se hace bajo demanda, es decir, cuando se requiera hacer una copia de respaldo simplemente se ejecuta el comando para generar la copia y luego se importa. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "replica-set es una arquitectura que permite la alta disponibilidad y tolerancia a fallos. es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). la diferencia con mongodump es que mongodump es una utilidad que se hace bajo demanda, es decir, cuando se requiera hacer una copia de respaldo simplemente se ejecuta el comando para generar la copia y luego se importa. por su parte, replica-set está generando copias entre los nodos de manera automática y transparente. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.957,
                                            "Frase": "es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.962,
                                            "Frase": "es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.963,
                                            "Frase": "replica-set es una arquitectura que permite la alta disponibilidad y tolerancia a fallos. es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). la diferencia con mongodump es que mongodump es una utilidad que se hace bajo demanda, es decir, cuando se requiera hacer una copia de respaldo simplemente se ejecuta el comando para generar la copia y luego se importa. por su parte, replica-set está generando copias entre los nodos de manera automática y transparente. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "replica-set es una arquitectura que permite la alta disponibilidad y tolerancia a fallos. es la evolución de la arquitectura master/slave. la función de un replica-set es la de replicar la información entre todos los nodos que conforman el clúster de tal manera que al fallar alguno de estos, la base de datos siga operando de manera transparente para los usuarios y los datos sigan siendo consistentes. para que haya un replica set se necesita de tres (3) nodos por lo menos: un nodo principal, un nodo secundario y un nodo árbitro. el principal hace copias al(los) secundario(s) constantemente y el nodo árbitro se encarga de determinar eventualmente cuál de los nodos es el principal según sea requerido (ya que existe rotación en caso de fallas). la diferencia con mongodump es que mongodump es una utilidad que se hace bajo demanda, es decir, cuando se requiera hacer una copia de respaldo simplemente se ejecuta el comando para generar la copia y luego se importa. por su parte, replica-set está generando copias entre los nodos de manera automática y transparente. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "bb6e55e505a6234731461f16493c4a61": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "esta arquitectura es un refinamiento de la estructura maestro-esclavo. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.848,
                                            "Frase": "esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.846,
                                            "Frase": "los replica-set son una arquitectura de mongodb que permite la replicación de los datos, es decir, que los datos estén duplicados en diferentes nodos, lo que brinda tolerancia frente a los fallos y alta disponibilidad. esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.819,
                                            "Frase": "los replica-set son una arquitectura de mongodb que permite la replicación de los datos, es decir, que los datos estén duplicados en diferentes nodos, lo que brinda tolerancia frente a los fallos y alta disponibilidad. esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.813,
                                            "Frase": "los replica-set son una arquitectura de mongodb que permite la replicación de los datos, es decir, que los datos estén duplicados en diferentes nodos, lo que brinda tolerancia frente a los fallos y alta disponibilidad. esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.786,
                                            "Frase": "los replica-set son una arquitectura de mongodb que permite la replicación de los datos, es decir, que los datos estén duplicados en diferentes nodos, lo que brinda tolerancia frente a los fallos y alta disponibilidad. esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.793,
                                            "Frase": "los replica-set son una arquitectura de mongodb que permite la replicación de los datos, es decir, que los datos estén duplicados en diferentes nodos, lo que brinda tolerancia frente a los fallos y alta disponibilidad. esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.791,
                                            "Frase": "los replica-set son una arquitectura de mongodb que permite la replicación de los datos, es decir, que los datos estén duplicados en diferentes nodos, lo que brinda tolerancia frente a los fallos y alta disponibilidad. esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. cuando un nodo primario deja de estar disponible, se elige un nuevo nodo primario entre los nodos accesibles. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.862,
                                            "Frase": "esta arquitectura es un refinamiento de la estructura maestro-esclavo. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.776,
                                            "Frase": "esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.774,
                                            "Frase": "esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.742,
                                            "Frase": "esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.709,
                                            "Frase": "cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. cuando un nodo primario deja de estar disponible, se elige un nuevo nodo primario entre los nodos accesibles. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.721,
                                            "Frase": "esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.737,
                                            "Frase": "esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. cuando un nodo primario deja de estar disponible, se elige un nuevo nodo primario entre los nodos accesibles. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.714,
                                            "Frase": "los replica-set son una arquitectura de mongodb que permite la replicación de los datos, es decir, que los datos estén duplicados en diferentes nodos, lo que brinda tolerancia frente a los fallos y alta disponibilidad. esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. cuando un nodo primario deja de estar disponible, se elige un nuevo nodo primario entre los nodos accesibles. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. cuando un nodo primario deja de estar disponible, se elige un nuevo nodo primario entre los nodos accesibles. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. cuando un nodo primario deja de estar disponible, se elige un nuevo nodo primario entre los nodos accesibles. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. cuando un nodo primario deja de estar disponible, se elige un nuevo nodo primario entre los nodos accesibles. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. cuando un nodo primario deja de estar disponible, se elige un nuevo nodo primario entre los nodos accesibles. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. cuando un nodo primario deja de estar disponible, se elige un nuevo nodo primario entre los nodos accesibles. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "los replica-set son una arquitectura de mongodb que permite la replicación de los datos, es decir, que los datos estén duplicados en diferentes nodos, lo que brinda tolerancia frente a los fallos y alta disponibilidad. esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. cuando un nodo primario deja de estar disponible, se elige un nuevo nodo primario entre los nodos accesibles. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "los replica-set son una arquitectura de mongodb que permite la replicación de los datos, es decir, que los datos estén duplicados en diferentes nodos, lo que brinda tolerancia frente a los fallos y alta disponibilidad. esta arquitectura es un refinamiento de la estructura maestro-esclavo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "los replica-set son una arquitectura de mongodb que permite la replicación de los datos, es decir, que los datos estén duplicados en diferentes nodos, lo que brinda tolerancia frente a los fallos y alta disponibilidad. esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "los replica-set son una arquitectura de mongodb que permite la replicación de los datos, es decir, que los datos estén duplicados en diferentes nodos, lo que brinda tolerancia frente a los fallos y alta disponibilidad. esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "los replica-set son una arquitectura de mongodb que permite la replicación de los datos, es decir, que los datos estén duplicados en diferentes nodos, lo que brinda tolerancia frente a los fallos y alta disponibilidad. esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "los replica-set son una arquitectura de mongodb que permite la replicación de los datos, es decir, que los datos estén duplicados en diferentes nodos, lo que brinda tolerancia frente a los fallos y alta disponibilidad. esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "los replica-set son una arquitectura de mongodb que permite la replicación de los datos, es decir, que los datos estén duplicados en diferentes nodos, lo que brinda tolerancia frente a los fallos y alta disponibilidad. esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. cuando un nodo primario deja de estar disponible, se elige un nuevo nodo primario entre los nodos accesibles. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "los replica-set son una arquitectura de mongodb que permite la replicación de los datos, es decir, que los datos estén duplicados en diferentes nodos, lo que brinda tolerancia frente a los fallos y alta disponibilidad. esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. cuando un nodo primario deja de estar disponible, se elige un nuevo nodo primario entre los nodos accesibles. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "los replica-set son una arquitectura de mongodb que permite la replicación de los datos, es decir, que los datos estén duplicados en diferentes nodos, lo que brinda tolerancia frente a los fallos y alta disponibilidad. esta arquitectura es un refinamiento de la estructura maestro-esclavo. en este caso, el nodo maestro se asigna al azar y se va actualizando en función de la disponibilidad de los nodos. cada dos segundos, se envía un ping para saber qué nodos son accesibles. la función es la misma que la del comando mongodump, solo que mongodump crea una copia de seguridad de los datos en un instante, por lo que las futuras modificaciones no se copian. en cambio, en los replica-set no hay este problema, ya que los datos están replicados en todo momento. la configuración mínima de un replica-set consta de 3 nodos: dos de ellos serán los que accedan a los datos, siendo uno el primario y el otro el que replica las operaciones, mientras que el tercero, llamado árbitro, solo forma parte en las votaciones para elegir al nodo primario. cuando un nodo primario deja de estar disponible, se elige un nuevo nodo primario entre los nodos accesibles. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "658c5c5021a92cb8c740046cf06d663b": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "la diferencia con mongodump es que este esquema crea copias completas de respaldo que pueden llamarse para restablecer una condición específica de la base de datos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "cuando el nodo principal pierde disponibilidad, uno de los otros nodos asume el papel de nodo principal actualizando las transformaciones. la diferencia con mongodump es que este esquema crea copias completas de respaldo que pueden llamarse para restablecer una condición específica de la base de datos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "la configuración mínima debe ser de tres nodos, 1 principal y dos de respaldo. cuando el nodo principal pierde disponibilidad, uno de los otros nodos asume el papel de nodo principal actualizando las transformaciones. la diferencia con mongodump es que este esquema crea copias completas de respaldo que pueden llamarse para restablecer una condición específica de la base de datos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "la arquitectura en replica  set consiste en configurar un conjunto de nodos donde se replique la información base de del nodo primario, así como la descripción de las transformaciones, de manera que sirva como un sistema de respaldo ante problemas en el nodo principal. la configuración mínima debe ser de tres nodos, 1 principal y dos de respaldo. cuando el nodo principal pierde disponibilidad, uno de los otros nodos asume el papel de nodo principal actualizando las transformaciones. la diferencia con mongodump es que este esquema crea copias completas de respaldo que pueden llamarse para restablecer una condición específica de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.797,
                                            "Frase": "la arquitectura en replica  set consiste en configurar un conjunto de nodos donde se replique la información base de del nodo primario, así como la descripción de las transformaciones, de manera que sirva como un sistema de respaldo ante problemas en el nodo principal. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.8,
                                            "Frase": "la arquitectura en replica  set consiste en configurar un conjunto de nodos donde se replique la información base de del nodo primario, así como la descripción de las transformaciones, de manera que sirva como un sistema de respaldo ante problemas en el nodo principal. la configuración mínima debe ser de tres nodos, 1 principal y dos de respaldo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.795,
                                            "Frase": "la arquitectura en replica  set consiste en configurar un conjunto de nodos donde se replique la información base de del nodo primario, así como la descripción de las transformaciones, de manera que sirva como un sistema de respaldo ante problemas en el nodo principal. la configuración mínima debe ser de tres nodos, 1 principal y dos de respaldo. cuando el nodo principal pierde disponibilidad, uno de los otros nodos asume el papel de nodo principal actualizando las transformaciones. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.793,
                                            "Frase": "la arquitectura en replica  set consiste en configurar un conjunto de nodos donde se replique la información base de del nodo primario, así como la descripción de las transformaciones, de manera que sirva como un sistema de respaldo ante problemas en el nodo principal. la configuración mínima debe ser de tres nodos, 1 principal y dos de respaldo. cuando el nodo principal pierde disponibilidad, uno de los otros nodos asume el papel de nodo principal actualizando las transformaciones. la diferencia con mongodump es que este esquema crea copias completas de respaldo que pueden llamarse para restablecer una condición específica de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "cuando el nodo principal pierde disponibilidad, uno de los otros nodos asume el papel de nodo principal actualizando las transformaciones. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "cuando el nodo principal pierde disponibilidad, uno de los otros nodos asume el papel de nodo principal actualizando las transformaciones. la diferencia con mongodump es que este esquema crea copias completas de respaldo que pueden llamarse para restablecer una condición específica de la base de datos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "la arquitectura en replica  set consiste en configurar un conjunto de nodos donde se replique la información base de del nodo primario, así como la descripción de las transformaciones, de manera que sirva como un sistema de respaldo ante problemas en el nodo principal. la configuración mínima debe ser de tres nodos, 1 principal y dos de respaldo. cuando el nodo principal pierde disponibilidad, uno de los otros nodos asume el papel de nodo principal actualizando las transformaciones. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "la arquitectura en replica  set consiste en configurar un conjunto de nodos donde se replique la información base de del nodo primario, así como la descripción de las transformaciones, de manera que sirva como un sistema de respaldo ante problemas en el nodo principal. la configuración mínima debe ser de tres nodos, 1 principal y dos de respaldo. cuando el nodo principal pierde disponibilidad, uno de los otros nodos asume el papel de nodo principal actualizando las transformaciones. la diferencia con mongodump es que este esquema crea copias completas de respaldo que pueden llamarse para restablecer una condición específica de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "la diferencia con mongodump es que este esquema crea copias completas de respaldo que pueden llamarse para restablecer una condición específica de la base de datos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "cuando el nodo principal pierde disponibilidad, uno de los otros nodos asume el papel de nodo principal actualizando las transformaciones. la diferencia con mongodump es que este esquema crea copias completas de respaldo que pueden llamarse para restablecer una condición específica de la base de datos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "la configuración mínima debe ser de tres nodos, 1 principal y dos de respaldo. cuando el nodo principal pierde disponibilidad, uno de los otros nodos asume el papel de nodo principal actualizando las transformaciones. la diferencia con mongodump es que este esquema crea copias completas de respaldo que pueden llamarse para restablecer una condición específica de la base de datos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "la arquitectura en replica  set consiste en configurar un conjunto de nodos donde se replique la información base de del nodo primario, así como la descripción de las transformaciones, de manera que sirva como un sistema de respaldo ante problemas en el nodo principal. la configuración mínima debe ser de tres nodos, 1 principal y dos de respaldo. cuando el nodo principal pierde disponibilidad, uno de los otros nodos asume el papel de nodo principal actualizando las transformaciones. la diferencia con mongodump es que este esquema crea copias completas de respaldo que pueden llamarse para restablecer una condición específica de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "la arquitectura en replica  set consiste en configurar un conjunto de nodos donde se replique la información base de del nodo primario, así como la descripción de las transformaciones, de manera que sirva como un sistema de respaldo ante problemas en el nodo principal. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "cuando el nodo principal pierde disponibilidad, uno de los otros nodos asume el papel de nodo principal actualizando las transformaciones. la diferencia con mongodump es que este esquema crea copias completas de respaldo que pueden llamarse para restablecer una condición específica de la base de datos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.959,
                                            "Frase": "la arquitectura en replica  set consiste en configurar un conjunto de nodos donde se replique la información base de del nodo primario, así como la descripción de las transformaciones, de manera que sirva como un sistema de respaldo ante problemas en el nodo principal. la configuración mínima debe ser de tres nodos, 1 principal y dos de respaldo. cuando el nodo principal pierde disponibilidad, uno de los otros nodos asume el papel de nodo principal actualizando las transformaciones. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.965,
                                            "Frase": "la arquitectura en replica  set consiste en configurar un conjunto de nodos donde se replique la información base de del nodo primario, así como la descripción de las transformaciones, de manera que sirva como un sistema de respaldo ante problemas en el nodo principal. la configuración mínima debe ser de tres nodos, 1 principal y dos de respaldo. cuando el nodo principal pierde disponibilidad, uno de los otros nodos asume el papel de nodo principal actualizando las transformaciones. la diferencia con mongodump es que este esquema crea copias completas de respaldo que pueden llamarse para restablecer una condición específica de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "b05a860f2007c94a3ee35a06752a5c14": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "replica-set es una característica de mongodb que permite la redundancia de datos e incrementar la disponibilidad de los datos. esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "replica-set es una característica de mongodb que permite la redundancia de datos e incrementar la disponibilidad de los datos. esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "replica-set es una característica de mongodb que permite la redundancia de datos e incrementar la disponibilidad de los datos. esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "replica-set es una característica de mongodb que permite la redundancia de datos e incrementar la disponibilidad de los datos. esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. para este tipo de votaciones se suele asignar a uno de los dos secundarios como árbitro, con prioridad 0 sobre los demás y se encargará de desempatar. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "replica-set es una característica de mongodb que permite la redundancia de datos e incrementar la disponibilidad de los datos. esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. para este tipo de votaciones se suele asignar a uno de los dos secundarios como árbitro, con prioridad 0 sobre los demás y se encargará de desempatar. a diferencia de mongodump, que se centra sobre todo en guardar backups de los datos, replica-set es una arquitectura robusta frente a fallos, y el proceso de replicación o backup en los nodos secundarios se realiza automáticamente. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.776,
                                            "Frase": "esta arquitectura está basada en un modelo maestro-esclavo. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.778,
                                            "Frase": "esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.769,
                                            "Frase": "esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.758,
                                            "Frase": "esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.754,
                                            "Frase": "replica-set es una característica de mongodb que permite la redundancia de datos e incrementar la disponibilidad de los datos. esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.731,
                                            "Frase": "replica-set es una característica de mongodb que permite la redundancia de datos e incrementar la disponibilidad de los datos. esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. para este tipo de votaciones se suele asignar a uno de los dos secundarios como árbitro, con prioridad 0 sobre los demás y se encargará de desempatar. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.721,
                                            "Frase": "replica-set es una característica de mongodb que permite la redundancia de datos e incrementar la disponibilidad de los datos. esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. para este tipo de votaciones se suele asignar a uno de los dos secundarios como árbitro, con prioridad 0 sobre los demás y se encargará de desempatar. a diferencia de mongodump, que se centra sobre todo en guardar backups de los datos, replica-set es una arquitectura robusta frente a fallos, y el proceso de replicación o backup en los nodos secundarios se realiza automáticamente. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. para este tipo de votaciones se suele asignar a uno de los dos secundarios como árbitro, con prioridad 0 sobre los demás y se encargará de desempatar. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. para este tipo de votaciones se suele asignar a uno de los dos secundarios como árbitro, con prioridad 0 sobre los demás y se encargará de desempatar. a diferencia de mongodump, que se centra sobre todo en guardar backups de los datos, replica-set es una arquitectura robusta frente a fallos, y el proceso de replicación o backup en los nodos secundarios se realiza automáticamente. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.87,
                                            "Frase": "replica-set es una característica de mongodb que permite la redundancia de datos e incrementar la disponibilidad de los datos. esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. para este tipo de votaciones se suele asignar a uno de los dos secundarios como árbitro, con prioridad 0 sobre los demás y se encargará de desempatar. a diferencia de mongodump, que se centra sobre todo en guardar backups de los datos, replica-set es una arquitectura robusta frente a fallos, y el proceso de replicación o backup en los nodos secundarios se realiza automáticamente. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "replica-set es una característica de mongodb que permite la redundancia de datos e incrementar la disponibilidad de los datos. esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "replica-set es una característica de mongodb que permite la redundancia de datos e incrementar la disponibilidad de los datos. esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "replica-set es una característica de mongodb que permite la redundancia de datos e incrementar la disponibilidad de los datos. esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. para este tipo de votaciones se suele asignar a uno de los dos secundarios como árbitro, con prioridad 0 sobre los demás y se encargará de desempatar. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "replica-set es una característica de mongodb que permite la redundancia de datos e incrementar la disponibilidad de los datos. esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. para este tipo de votaciones se suele asignar a uno de los dos secundarios como árbitro, con prioridad 0 sobre los demás y se encargará de desempatar. a diferencia de mongodump, que se centra sobre todo en guardar backups de los datos, replica-set es una arquitectura robusta frente a fallos, y el proceso de replicación o backup en los nodos secundarios se realiza automáticamente. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.953,
                                            "Frase": "esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "replica-set es una característica de mongodb que permite la redundancia de datos e incrementar la disponibilidad de los datos. esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "replica-set es una característica de mongodb que permite la redundancia de datos e incrementar la disponibilidad de los datos. esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. para este tipo de votaciones se suele asignar a uno de los dos secundarios como árbitro, con prioridad 0 sobre los demás y se encargará de desempatar. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "replica-set es una característica de mongodb que permite la redundancia de datos e incrementar la disponibilidad de los datos. esta arquitectura está basada en un modelo maestro-esclavo. este modelo permite la recuperación de fallos de forma automática, y es la forma de implementar la replicación de datos en mongodb. la forma de configurar un replica-set es atreves de tres nodos, dos nodos serán instancias de mongod con acceso a los datos que replicarán los datos del nodo primario, mientras que uno de ellos será el nodo primario sobre el que se realizarán las consultas y modificaciones. en caso de que el nodo primario deje de tener disponibilidad, uno de los otros dos nodos secundarios pasa a ser el primario a través de una votación. para este tipo de votaciones se suele asignar a uno de los dos secundarios como árbitro, con prioridad 0 sobre los demás y se encargará de desempatar. a diferencia de mongodump, que se centra sobre todo en guardar backups de los datos, replica-set es una arquitectura robusta frente a fallos, y el proceso de replicación o backup en los nodos secundarios se realiza automáticamente. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "a5409a8056b395a7e740869a7cef05ae": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.839,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.858,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.867,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.867,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.856,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.827,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.818,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. se comunican entre ellos mediante pings constantes cada 2 segundos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.797,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. se comunican entre ellos mediante pings constantes cada 2 segundos. si el nodo primario deja de tener disponibilidad, el árbitro asigna un nuevo nodo al azar para que tenga el rol de primario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.789,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.777,
                                            "Frase": "la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.819,
                                            "Frase": "al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.802,
                                            "Frase": "al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.799,
                                            "Frase": "los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.813,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.803,
                                            "Frase": "los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. se comunican entre ellos mediante pings constantes cada 2 segundos. si el nodo primario deja de tener disponibilidad, el árbitro asigna un nuevo nodo al azar para que tenga el rol de primario. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.812,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. se comunican entre ellos mediante pings constantes cada 2 segundos. si el nodo primario deja de tener disponibilidad, el árbitro asigna un nuevo nodo al azar para que tenga el rol de primario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "se comunican entre ellos mediante pings constantes cada 2 segundos. si el nodo primario deja de tener disponibilidad, el árbitro asigna un nuevo nodo al azar para que tenga el rol de primario. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. se comunican entre ellos mediante pings constantes cada 2 segundos. si el nodo primario deja de tener disponibilidad, el árbitro asigna un nuevo nodo al azar para que tenga el rol de primario. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. se comunican entre ellos mediante pings constantes cada 2 segundos. si el nodo primario deja de tener disponibilidad, el árbitro asigna un nuevo nodo al azar para que tenga el rol de primario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.857,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.845,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.848,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. se comunican entre ellos mediante pings constantes cada 2 segundos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.82,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. se comunican entre ellos mediante pings constantes cada 2 segundos. si el nodo primario deja de tener disponibilidad, el árbitro asigna un nuevo nodo al azar para que tenga el rol de primario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. se comunican entre ellos mediante pings constantes cada 2 segundos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "el replica set es un mecanismo de seguridad mediante el cual se replican los datos en varios nodos, permite la recuperación de fallos automáticamente. los datos están duplicados en todo momento (es como una foto dinámica de los datos en la que además éstos son redundantes y están altamente disponibles). al contrario, mongodump hace una foto fija de los datos en local. la replicación sigue un modelo maestro-esclavo mejorado y necesita por lo menos 3 nodos. el maestro (nodo primario) es el que replica operaciones al nodo secundario. hay un tercer nodo llamado árbitro que asigna al azar el nodo primario. se comunican entre ellos mediante pings constantes cada 2 segundos. si el nodo primario deja de tener disponibilidad, el árbitro asigna un nuevo nodo al azar para que tenga el rol de primario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "e131a20f658a452fbd1a650d01d4281f": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. por esta razón, no todas las configuraciones son aptas para nuestro replica-set, ya que un gran numero de nodos puede ralentizar esta votación. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. por esta razón, no todas las configuraciones son aptas para nuestro replica-set, ya que un gran numero de nodos puede ralentizar esta votación. la configuración suele ser un numero impar de nodos 3 o 5, para no entrar en un bucle de empates entre dos posibles candidatos. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.857,
                                            "Frase": "la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.817,
                                            "Frase": "la configuración suele ser un numero impar de nodos 3 o 5, para no entrar en un bucle de empates entre dos posibles candidatos. mongodump es un comando para el backup sobre una base datos o colección, consiste en el copiado de los datos a nuestro entorno local. ",
                                            "Lineas": "Lines 8 - 9"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.828,
                                            "Frase": "la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.822,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.811,
                                            "Frase": "la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.813,
                                            "Frase": "esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. por esta razón, no todas las configuraciones son aptas para nuestro replica-set, ya que un gran numero de nodos puede ralentizar esta votación. la configuración suele ser un numero impar de nodos 3 o 5, para no entrar en un bucle de empates entre dos posibles candidatos. mongodump es un comando para el backup sobre una base datos o colección, consiste en el copiado de los datos a nuestro entorno local. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.806,
                                            "Frase": "la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. por esta razón, no todas las configuraciones son aptas para nuestro replica-set, ya que un gran numero de nodos puede ralentizar esta votación. la configuración suele ser un numero impar de nodos 3 o 5, para no entrar en un bucle de empates entre dos posibles candidatos. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.814,
                                            "Frase": "la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. por esta razón, no todas las configuraciones son aptas para nuestro replica-set, ya que un gran numero de nodos puede ralentizar esta votación. la configuración suele ser un numero impar de nodos 3 o 5, para no entrar en un bucle de empates entre dos posibles candidatos. mongodump es un comando para el backup sobre una base datos o colección, consiste en el copiado de los datos a nuestro entorno local. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. por esta razón, no todas las configuraciones son aptas para nuestro replica-set, ya que un gran numero de nodos puede ralentizar esta votación. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. por esta razón, no todas las configuraciones son aptas para nuestro replica-set, ya que un gran numero de nodos puede ralentizar esta votación. la configuración suele ser un numero impar de nodos 3 o 5, para no entrar en un bucle de empates entre dos posibles candidatos. mongodump es un comando para el backup sobre una base datos o colección, consiste en el copiado de los datos a nuestro entorno local. ",
                                            "Lineas": "Lines 3 - 9"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. por esta razón, no todas las configuraciones son aptas para nuestro replica-set, ya que un gran numero de nodos puede ralentizar esta votación. la configuración suele ser un numero impar de nodos 3 o 5, para no entrar en un bucle de empates entre dos posibles candidatos. mongodump es un comando para el backup sobre una base datos o colección, consiste en el copiado de los datos a nuestro entorno local. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "este comando no garantiza la disponibilidad de la base de datos y tolerancia a posibles fallos, solo se emplea como proceso de backup. ",
                                            "Lineas": "Line 10"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "mongodump es un comando para el backup sobre una base datos o colección, consiste en el copiado de los datos a nuestro entorno local. este comando no garantiza la disponibilidad de la base de datos y tolerancia a posibles fallos, solo se emplea como proceso de backup. ",
                                            "Lineas": "Lines 9 - 10"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "por esta razón, no todas las configuraciones son aptas para nuestro replica-set, ya que un gran numero de nodos puede ralentizar esta votación. la configuración suele ser un numero impar de nodos 3 o 5, para no entrar en un bucle de empates entre dos posibles candidatos. mongodump es un comando para el backup sobre una base datos o colección, consiste en el copiado de los datos a nuestro entorno local. este comando no garantiza la disponibilidad de la base de datos y tolerancia a posibles fallos, solo se emplea como proceso de backup. ",
                                            "Lineas": "Lines 7 - 10"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. por esta razón, no todas las configuraciones son aptas para nuestro replica-set, ya que un gran numero de nodos puede ralentizar esta votación. la configuración suele ser un numero impar de nodos 3 o 5, para no entrar en un bucle de empates entre dos posibles candidatos. mongodump es un comando para el backup sobre una base datos o colección, consiste en el copiado de los datos a nuestro entorno local. este comando no garantiza la disponibilidad de la base de datos y tolerancia a posibles fallos, solo se emplea como proceso de backup. ",
                                            "Lineas": "Lines 6 - 10"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. por esta razón, no todas las configuraciones son aptas para nuestro replica-set, ya que un gran numero de nodos puede ralentizar esta votación. la configuración suele ser un numero impar de nodos 3 o 5, para no entrar en un bucle de empates entre dos posibles candidatos. mongodump es un comando para el backup sobre una base datos o colección, consiste en el copiado de los datos a nuestro entorno local. este comando no garantiza la disponibilidad de la base de datos y tolerancia a posibles fallos, solo se emplea como proceso de backup. ",
                                            "Lineas": "Lines 5 - 10"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. por esta razón, no todas las configuraciones son aptas para nuestro replica-set, ya que un gran numero de nodos puede ralentizar esta votación. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. por esta razón, no todas las configuraciones son aptas para nuestro replica-set, ya que un gran numero de nodos puede ralentizar esta votación. la configuración suele ser un numero impar de nodos 3 o 5, para no entrar en un bucle de empates entre dos posibles candidatos. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.953,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.959,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.959,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. por esta razón, no todas las configuraciones son aptas para nuestro replica-set, ya que un gran numero de nodos puede ralentizar esta votación. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "un sistema replica-set en mongodb tiene como ventajas la consistencia de la base de datos resiliencia a posibles caídas o fallas de la base de datos. la estructura mínima de un replica-set son tres nodos, un nodo principal y dos secundarios. el cliente realiza lecturas y escrituras en el nodo principal, los secundarios solo se encargar de respaldar dichos datos. esto se realiza mediante un proceso de sincronismo en un intervalo corto de tiempo (2 segundos por defecto). los nodos tienen varias propiedades definidas en su configuración como delay, hidden, o arbitro. la posible caída del nodo principal deriva en proceso de votación entre los diferentes nodos dirigido por el nodo arbitro, tras la votación el mayor votado es escogido como nodo principal. por esta razón, no todas las configuraciones son aptas para nuestro replica-set, ya que un gran numero de nodos puede ralentizar esta votación. la configuración suele ser un numero impar de nodos 3 o 5, para no entrar en un bucle de empates entre dos posibles candidatos. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "f67d6366cd6c0b9e461783351902eefe": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.848,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.809,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. y el tercer nodo se llama árbitro, se utiliza solo para decidir qué nodo debe ser el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.775,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. y el tercer nodo se llama árbitro, se utiliza solo para decidir qué nodo debe ser el primario. cuando el nodo primario no tiene disponibilidad, este se cambia por el nodo con disponibilidad, para saber la disponibilidad se envían pings cada dos segundos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.802,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. y el tercer nodo se llama árbitro, se utiliza solo para decidir qué nodo debe ser el primario. cuando el nodo primario no tiene disponibilidad, este se cambia por el nodo con disponibilidad, para saber la disponibilidad se envían pings cada dos segundos. mongodump realiza una copia de seguridad de los datos conectándose a una instancia de mongod, mientras que replica-set esta directamente conectado con otro nodo en el cual se hace la replicación en cada operación automáticamente. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.702,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.697,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.714,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. y el tercer nodo se llama árbitro, se utiliza solo para decidir qué nodo debe ser el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.705,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. y el tercer nodo se llama árbitro, se utiliza solo para decidir qué nodo debe ser el primario. cuando el nodo primario no tiene disponibilidad, este se cambia por el nodo con disponibilidad, para saber la disponibilidad se envían pings cada dos segundos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.709,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. y el tercer nodo se llama árbitro, se utiliza solo para decidir qué nodo debe ser el primario. cuando el nodo primario no tiene disponibilidad, este se cambia por el nodo con disponibilidad, para saber la disponibilidad se envían pings cada dos segundos. mongodump realiza una copia de seguridad de los datos conectándose a una instancia de mongod, mientras que replica-set esta directamente conectado con otro nodo en el cual se hace la replicación en cada operación automáticamente. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.837,
                                            "Frase": "mongodump realiza una copia de seguridad de los datos conectándose a una instancia de mongod, mientras que replica-set esta directamente conectado con otro nodo en el cual se hace la replicación en cada operación automáticamente. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.865,
                                            "Frase": "cuando el nodo primario no tiene disponibilidad, este se cambia por el nodo con disponibilidad, para saber la disponibilidad se envían pings cada dos segundos. mongodump realiza una copia de seguridad de los datos conectándose a una instancia de mongod, mientras que replica-set esta directamente conectado con otro nodo en el cual se hace la replicación en cada operación automáticamente. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. y el tercer nodo se llama árbitro, se utiliza solo para decidir qué nodo debe ser el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. y el tercer nodo se llama árbitro, se utiliza solo para decidir qué nodo debe ser el primario. cuando el nodo primario no tiene disponibilidad, este se cambia por el nodo con disponibilidad, para saber la disponibilidad se envían pings cada dos segundos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. y el tercer nodo se llama árbitro, se utiliza solo para decidir qué nodo debe ser el primario. cuando el nodo primario no tiene disponibilidad, este se cambia por el nodo con disponibilidad, para saber la disponibilidad se envían pings cada dos segundos. mongodump realiza una copia de seguridad de los datos conectándose a una instancia de mongod, mientras que replica-set esta directamente conectado con otro nodo en el cual se hace la replicación en cada operación automáticamente. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "mongodump realiza una copia de seguridad de los datos conectándose a una instancia de mongod, mientras que replica-set esta directamente conectado con otro nodo en el cual se hace la replicación en cada operación automáticamente. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.875,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. y el tercer nodo se llama árbitro, se utiliza solo para decidir qué nodo debe ser el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. y el tercer nodo se llama árbitro, se utiliza solo para decidir qué nodo debe ser el primario. cuando el nodo primario no tiene disponibilidad, este se cambia por el nodo con disponibilidad, para saber la disponibilidad se envían pings cada dos segundos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. y el tercer nodo se llama árbitro, se utiliza solo para decidir qué nodo debe ser el primario. cuando el nodo primario no tiene disponibilidad, este se cambia por el nodo con disponibilidad, para saber la disponibilidad se envían pings cada dos segundos. mongodump realiza una copia de seguridad de los datos conectándose a una instancia de mongod, mientras que replica-set esta directamente conectado con otro nodo en el cual se hace la replicación en cada operación automáticamente. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "mongodump realiza una copia de seguridad de los datos conectándose a una instancia de mongod, mientras que replica-set esta directamente conectado con otro nodo en el cual se hace la replicación en cada operación automáticamente. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. y el tercer nodo se llama árbitro, se utiliza solo para decidir qué nodo debe ser el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.892,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. y el tercer nodo se llama árbitro, se utiliza solo para decidir qué nodo debe ser el primario. cuando el nodo primario no tiene disponibilidad, este se cambia por el nodo con disponibilidad, para saber la disponibilidad se envían pings cada dos segundos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "replica set permite una recuperación a fallos de forma automática, y es la forma más adecuada de implementar replicación de datos en mongodb. son necesarios 3 nodos: dos nodos son instancias de mongod con acceso a los datos, uno de los nodos será el primario y el otro replica las operaciones que se realizan en el primario. y el tercer nodo se llama árbitro, se utiliza solo para decidir qué nodo debe ser el primario. cuando el nodo primario no tiene disponibilidad, este se cambia por el nodo con disponibilidad, para saber la disponibilidad se envían pings cada dos segundos. mongodump realiza una copia de seguridad de los datos conectándose a una instancia de mongod, mientras que replica-set esta directamente conectado con otro nodo en el cual se hace la replicación en cada operación automáticamente. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.5,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "445ce3bfcc3e0e2cff35aee3923f11b9": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "replica-set genera copias redundantes de la información disponible de la partición principal en nodos réplica. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "mongodump realiza una copia completa, un volcado, de la base de datos en un momento dado, y debe ser recuperado para poder acceder a ella. en replica-set podemos acceder a la información de cualquier nodo, y no solo del principal. ",
                                            "Lineas": "Lines 9 - 10"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.849,
                                            "Frase": "solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.852,
                                            "Frase": "solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.846,
                                            "Frase": "cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. sin embargo, que deje de estar disponible una réplica no supone nada más que una menor redundancia. mongodump realiza una copia completa, un volcado, de la base de datos en un momento dado, y debe ser recuperado para poder acceder a ella. en replica-set podemos acceder a la información de cualquier nodo, y no solo del principal. ",
                                            "Lineas": "Lines 6 - 10"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.858,
                                            "Frase": "replica-set genera copias redundantes de la información disponible de la partición principal en nodos réplica. las particiones réplica pueden estar desfasadas con un tiempo de retraso, por lo demás, son copias de la principal que pueden ser accedidas por consultas. entre las réplicas existe un heartbeat que informa a las demás mientras siguen activas. solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.86,
                                            "Frase": "replica-set genera copias redundantes de la información disponible de la partición principal en nodos réplica. las particiones réplica pueden estar desfasadas con un tiempo de retraso, por lo demás, son copias de la principal que pueden ser accedidas por consultas. entre las réplicas existe un heartbeat que informa a las demás mientras siguen activas. solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.841,
                                            "Frase": "entre las réplicas existe un heartbeat que informa a las demás mientras siguen activas. solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. sin embargo, que deje de estar disponible una réplica no supone nada más que una menor redundancia. mongodump realiza una copia completa, un volcado, de la base de datos en un momento dado, y debe ser recuperado para poder acceder a ella. en replica-set podemos acceder a la información de cualquier nodo, y no solo del principal. ",
                                            "Lineas": "Lines 3 - 10"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.803,
                                            "Frase": "mongodump realiza una copia completa, un volcado, de la base de datos en un momento dado, y debe ser recuperado para poder acceder a ella. ",
                                            "Lineas": "Line 9"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.796,
                                            "Frase": "solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.836,
                                            "Frase": "solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.823,
                                            "Frase": "solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.794,
                                            "Frase": "entre las réplicas existe un heartbeat que informa a las demás mientras siguen activas. solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.805,
                                            "Frase": "solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. sin embargo, que deje de estar disponible una réplica no supone nada más que una menor redundancia. mongodump realiza una copia completa, un volcado, de la base de datos en un momento dado, y debe ser recuperado para poder acceder a ella. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.795,
                                            "Frase": "solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. sin embargo, que deje de estar disponible una réplica no supone nada más que una menor redundancia. mongodump realiza una copia completa, un volcado, de la base de datos en un momento dado, y debe ser recuperado para poder acceder a ella. en replica-set podemos acceder a la información de cualquier nodo, y no solo del principal. ",
                                            "Lineas": "Lines 4 - 10"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.782,
                                            "Frase": "entre las réplicas existe un heartbeat que informa a las demás mientras siguen activas. solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. sin embargo, que deje de estar disponible una réplica no supone nada más que una menor redundancia. mongodump realiza una copia completa, un volcado, de la base de datos en un momento dado, y debe ser recuperado para poder acceder a ella. en replica-set podemos acceder a la información de cualquier nodo, y no solo del principal. ",
                                            "Lineas": "Lines 3 - 10"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "entre las réplicas existe un heartbeat que informa a las demás mientras siguen activas. solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.899,
                                            "Frase": "las particiones réplica pueden estar desfasadas con un tiempo de retraso, por lo demás, son copias de la principal que pueden ser accedidas por consultas. entre las réplicas existe un heartbeat que informa a las demás mientras siguen activas. solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "replica-set genera copias redundantes de la información disponible de la partición principal en nodos réplica. las particiones réplica pueden estar desfasadas con un tiempo de retraso, por lo demás, son copias de la principal que pueden ser accedidas por consultas. entre las réplicas existe un heartbeat que informa a las demás mientras siguen activas. solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "entre las réplicas existe un heartbeat que informa a las demás mientras siguen activas. solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. sin embargo, que deje de estar disponible una réplica no supone nada más que una menor redundancia. mongodump realiza una copia completa, un volcado, de la base de datos en un momento dado, y debe ser recuperado para poder acceder a ella. en replica-set podemos acceder a la información de cualquier nodo, y no solo del principal. ",
                                            "Lineas": "Lines 3 - 10"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "mongodump realiza una copia completa, un volcado, de la base de datos en un momento dado, y debe ser recuperado para poder acceder a ella. ",
                                            "Lineas": "Line 9"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "replica-set genera copias redundantes de la información disponible de la partición principal en nodos réplica. las particiones réplica pueden estar desfasadas con un tiempo de retraso, por lo demás, son copias de la principal que pueden ser accedidas por consultas. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "sin embargo, que deje de estar disponible una réplica no supone nada más que una menor redundancia. mongodump realiza una copia completa, un volcado, de la base de datos en un momento dado, y debe ser recuperado para poder acceder a ella. en replica-set podemos acceder a la información de cualquier nodo, y no solo del principal. ",
                                            "Lineas": "Lines 8 - 10"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "replica-set genera copias redundantes de la información disponible de la partición principal en nodos réplica. las particiones réplica pueden estar desfasadas con un tiempo de retraso, por lo demás, son copias de la principal que pueden ser accedidas por consultas. entre las réplicas existe un heartbeat que informa a las demás mientras siguen activas. solo es necesaria una réplica, es decir, dos nodos en total, con el primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "replica-set genera copias redundantes de la información disponible de la partición principal en nodos réplica. las particiones réplica pueden estar desfasadas con un tiempo de retraso, por lo demás, son copias de la principal que pueden ser accedidas por consultas. entre las réplicas existe un heartbeat que informa a las demás mientras siguen activas. solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "replica-set genera copias redundantes de la información disponible de la partición principal en nodos réplica. las particiones réplica pueden estar desfasadas con un tiempo de retraso, por lo demás, son copias de la principal que pueden ser accedidas por consultas. entre las réplicas existe un heartbeat que informa a las demás mientras siguen activas. solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "replica-set genera copias redundantes de la información disponible de la partición principal en nodos réplica. las particiones réplica pueden estar desfasadas con un tiempo de retraso, por lo demás, son copias de la principal que pueden ser accedidas por consultas. entre las réplicas existe un heartbeat que informa a las demás mientras siguen activas. solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "replica-set genera copias redundantes de la información disponible de la partición principal en nodos réplica. las particiones réplica pueden estar desfasadas con un tiempo de retraso, por lo demás, son copias de la principal que pueden ser accedidas por consultas. entre las réplicas existe un heartbeat que informa a las demás mientras siguen activas. solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. sin embargo, que deje de estar disponible una réplica no supone nada más que una menor redundancia. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "mongodump realiza una copia completa, un volcado, de la base de datos en un momento dado, y debe ser recuperado para poder acceder a ella. ",
                                            "Lineas": "Line 9"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "mongodump realiza una copia completa, un volcado, de la base de datos en un momento dado, y debe ser recuperado para poder acceder a ella. en replica-set podemos acceder a la información de cualquier nodo, y no solo del principal. ",
                                            "Lineas": "Lines 9 - 10"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "entre las réplicas existe un heartbeat que informa a las demás mientras siguen activas. solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. sin embargo, que deje de estar disponible una réplica no supone nada más que una menor redundancia. mongodump realiza una copia completa, un volcado, de la base de datos en un momento dado, y debe ser recuperado para poder acceder a ella. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "replica-set genera copias redundantes de la información disponible de la partición principal en nodos réplica. las particiones réplica pueden estar desfasadas con un tiempo de retraso, por lo demás, son copias de la principal que pueden ser accedidas por consultas. entre las réplicas existe un heartbeat que informa a las demás mientras siguen activas. solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "entre las réplicas existe un heartbeat que informa a las demás mientras siguen activas. solo es necesaria una réplica, es decir, dos nodos en total, con el primario. cuantos más nodos, mayor disponibilidad del dato. cuando el primario deja de estar disponible se produce una elección de un nuevo primario por votación de todos los nodos. si vuelve a estarlo, el antiguo primario ahora será parte de la réplica. sin embargo, que deje de estar disponible una réplica no supone nada más que una menor redundancia. mongodump realiza una copia completa, un volcado, de la base de datos en un momento dado, y debe ser recuperado para poder acceder a ella. en replica-set podemos acceder a la información de cualquier nodo, y no solo del principal. ",
                                            "Lineas": "Lines 3 - 10"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "1168e7bb170ac71ee573c7771626e22e": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.846,
                                            "Frase": "la función principal de un replica set es la solución de fallos automáticamente, a través de replicas de al menos 3 nodos que es la configuración mínima que tiene este método que permite la disponibilidad de forma permanente, estos nodos son el master, esclavo y el arbitro, en este método el nodo maestro se asigna de forma dinámica porque cualquier nodo tiene las información necesarias para ofrecer el servicio de master , como cada 2 segundo se hace un ping para evaluar el funcionamiento de los nodos ,al detectar que el maestro no responde el arbitro designara el nuevo master de forma inmediata, la diferencia con mongodump es que este permite realizar una copia de seguridad que es como una foto instantánea,  en cambio el replica set continuamente está actualizando la información. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.807,
                                            "Frase": "la función principal de un replica set es la solución de fallos automáticamente, a través de replicas de al menos 3 nodos que es la configuración mínima que tiene este método que permite la disponibilidad de forma permanente, estos nodos son el master, esclavo y el arbitro, en este método el nodo maestro se asigna de forma dinámica porque cualquier nodo tiene las información necesarias para ofrecer el servicio de master , como cada 2 segundo se hace un ping para evaluar el funcionamiento de los nodos ,al detectar que el maestro no responde el arbitro designara el nuevo master de forma inmediata, la diferencia con mongodump es que este permite realizar una copia de seguridad que es como una foto instantánea,  en cambio el replica set continuamente está actualizando la información. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "la función principal de un replica set es la solución de fallos automáticamente, a través de replicas de al menos 3 nodos que es la configuración mínima que tiene este método que permite la disponibilidad de forma permanente, estos nodos son el master, esclavo y el arbitro, en este método el nodo maestro se asigna de forma dinámica porque cualquier nodo tiene las información necesarias para ofrecer el servicio de master , como cada 2 segundo se hace un ping para evaluar el funcionamiento de los nodos ,al detectar que el maestro no responde el arbitro designara el nuevo master de forma inmediata, la diferencia con mongodump es que este permite realizar una copia de seguridad que es como una foto instantánea,  en cambio el replica set continuamente está actualizando la información. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "la función principal de un replica set es la solución de fallos automáticamente, a través de replicas de al menos 3 nodos que es la configuración mínima que tiene este método que permite la disponibilidad de forma permanente, estos nodos son el master, esclavo y el arbitro, en este método el nodo maestro se asigna de forma dinámica porque cualquier nodo tiene las información necesarias para ofrecer el servicio de master , como cada 2 segundo se hace un ping para evaluar el funcionamiento de los nodos ,al detectar que el maestro no responde el arbitro designara el nuevo master de forma inmediata, la diferencia con mongodump es que este permite realizar una copia de seguridad que es como una foto instantánea,  en cambio el replica set continuamente está actualizando la información. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "la función principal de un replica set es la solución de fallos automáticamente, a través de replicas de al menos 3 nodos que es la configuración mínima que tiene este método que permite la disponibilidad de forma permanente, estos nodos son el master, esclavo y el arbitro, en este método el nodo maestro se asigna de forma dinámica porque cualquier nodo tiene las información necesarias para ofrecer el servicio de master , como cada 2 segundo se hace un ping para evaluar el funcionamiento de los nodos ,al detectar que el maestro no responde el arbitro designara el nuevo master de forma inmediata, la diferencia con mongodump es que este permite realizar una copia de seguridad que es como una foto instantánea,  en cambio el replica set continuamente está actualizando la información. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "8c5cc3b9f270757567b8efadbc9cb506": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.673,
                                            "Frase": "replicar la información a lo largo de los nodos del cluster, podemos configurar estas replicas, como mínimo deberíamos tener 3 nodos, si el nodo primario se cae podemos recuperar rápidamente la disponibilidad del sistema poniendo un nodo secundario que replicaría en otro nodo por eso necesitamos al menos 3 nodos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.613,
                                            "Frase": "replicar la información a lo largo de los nodos del cluster, podemos configurar estas replicas, como mínimo deberíamos tener 3 nodos, si el nodo primario se cae podemos recuperar rápidamente la disponibilidad del sistema poniendo un nodo secundario que replicaría en otro nodo por eso necesitamos al menos 3 nodos. mongodump salvo que se lo indiquemos exporta todo el servidor. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.663,
                                            "Frase": "replicar la información a lo largo de los nodos del cluster, podemos configurar estas replicas, como mínimo deberíamos tener 3 nodos, si el nodo primario se cae podemos recuperar rápidamente la disponibilidad del sistema poniendo un nodo secundario que replicaría en otro nodo por eso necesitamos al menos 3 nodos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.625,
                                            "Frase": "replicar la información a lo largo de los nodos del cluster, podemos configurar estas replicas, como mínimo deberíamos tener 3 nodos, si el nodo primario se cae podemos recuperar rápidamente la disponibilidad del sistema poniendo un nodo secundario que replicaría en otro nodo por eso necesitamos al menos 3 nodos. mongodump salvo que se lo indiquemos exporta todo el servidor. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.848,
                                            "Frase": "replicar la información a lo largo de los nodos del cluster, podemos configurar estas replicas, como mínimo deberíamos tener 3 nodos, si el nodo primario se cae podemos recuperar rápidamente la disponibilidad del sistema poniendo un nodo secundario que replicaría en otro nodo por eso necesitamos al menos 3 nodos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.82,
                                            "Frase": "replicar la información a lo largo de los nodos del cluster, podemos configurar estas replicas, como mínimo deberíamos tener 3 nodos, si el nodo primario se cae podemos recuperar rápidamente la disponibilidad del sistema poniendo un nodo secundario que replicaría en otro nodo por eso necesitamos al menos 3 nodos. mongodump salvo que se lo indiquemos exporta todo el servidor. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.797,
                                            "Frase": "replicar la información a lo largo de los nodos del cluster, podemos configurar estas replicas, como mínimo deberíamos tener 3 nodos, si el nodo primario se cae podemos recuperar rápidamente la disponibilidad del sistema poniendo un nodo secundario que replicaría en otro nodo por eso necesitamos al menos 3 nodos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.765,
                                            "Frase": "replicar la información a lo largo de los nodos del cluster, podemos configurar estas replicas, como mínimo deberíamos tener 3 nodos, si el nodo primario se cae podemos recuperar rápidamente la disponibilidad del sistema poniendo un nodo secundario que replicaría en otro nodo por eso necesitamos al menos 3 nodos. mongodump salvo que se lo indiquemos exporta todo el servidor. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.825,
                                            "Frase": "replicar la información a lo largo de los nodos del cluster, podemos configurar estas replicas, como mínimo deberíamos tener 3 nodos, si el nodo primario se cae podemos recuperar rápidamente la disponibilidad del sistema poniendo un nodo secundario que replicaría en otro nodo por eso necesitamos al menos 3 nodos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.785,
                                            "Frase": "replicar la información a lo largo de los nodos del cluster, podemos configurar estas replicas, como mínimo deberíamos tener 3 nodos, si el nodo primario se cae podemos recuperar rápidamente la disponibilidad del sistema poniendo un nodo secundario que replicaría en otro nodo por eso necesitamos al menos 3 nodos. mongodump salvo que se lo indiquemos exporta todo el servidor. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.625,
                                 "Umbral 0.4 - 0.8": 0.625,
                                 "Umbral 0.5 - 0.8": 0.625,
                                 "Umbral 0.6 - 0.8": 0.625,
                                 "Umbral 0.7 - 0.8": 0.375,
                                 "Umbral 0.3 - 0.9": 0.5,
                                 "Umbral 0.4 - 0.9": 0.5,
                                 "Umbral 0.5 - 0.9": 0.5,
                                 "Umbral 0.6 - 0.9": 0.5,
                                 "Umbral 0.7 - 0.9": 0.25,
                                 "Umbral 0.8 - 0.9": 0.125,
                                 "Umbral 0.3 - 0.7": 0.75,
                                 "Umbral 0.4 - 0.7": 0.75,
                                 "Umbral 0.5 - 0.7": 0.75,
                                 "Umbral 0.6 - 0.7": 0.75,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "dd18b61a0949d36c24926ce347eaa5ef": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "el método de sharding en mongodb permite distribuir datos en múltiples servidores, aumentando así la capacidad total del sistema. cada shard es un replica-set que permite tener los datos almacenados en distintos servidores, con el consiguiente aumento de la disponibilidad y consistencia. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "cada shard es un replica-set que permite tener los datos almacenados en distintos servidores, con el consiguiente aumento de la disponibilidad y consistencia. es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "el método de sharding en mongodb permite distribuir datos en múltiples servidores, aumentando así la capacidad total del sistema. cada shard es un replica-set que permite tener los datos almacenados en distintos servidores, con el consiguiente aumento de la disponibilidad y consistencia. es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "cada shard es un replica-set que permite tener los datos almacenados en distintos servidores, con el consiguiente aumento de la disponibilidad y consistencia. es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "el método de sharding en mongodb permite distribuir datos en múltiples servidores, aumentando así la capacidad total del sistema. cada shard es un replica-set que permite tener los datos almacenados en distintos servidores, con el consiguiente aumento de la disponibilidad y consistencia. es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.848,
                                            "Frase": "cada shard es un replica-set que permite tener los datos almacenados en distintos servidores, con el consiguiente aumento de la disponibilidad y consistencia. es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.841,
                                            "Frase": "el método de sharding en mongodb permite distribuir datos en múltiples servidores, aumentando así la capacidad total del sistema. cada shard es un replica-set que permite tener los datos almacenados en distintos servidores, con el consiguiente aumento de la disponibilidad y consistencia. es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "cada shard es un replica-set que permite tener los datos almacenados en distintos servidores, con el consiguiente aumento de la disponibilidad y consistencia. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "cada shard es un replica-set que permite tener los datos almacenados en distintos servidores, con el consiguiente aumento de la disponibilidad y consistencia. es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "el método de sharding en mongodb permite distribuir datos en múltiples servidores, aumentando así la capacidad total del sistema. cada shard es un replica-set que permite tener los datos almacenados en distintos servidores, con el consiguiente aumento de la disponibilidad y consistencia. es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "el método de sharding en mongodb permite distribuir datos en múltiples servidores, aumentando así la capacidad total del sistema. cada shard es un replica-set que permite tener los datos almacenados en distintos servidores, con el consiguiente aumento de la disponibilidad y consistencia. es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "cada shard es un replica-set que permite tener los datos almacenados en distintos servidores, con el consiguiente aumento de la disponibilidad y consistencia. es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "el método de sharding en mongodb permite distribuir datos en múltiples servidores, aumentando así la capacidad total del sistema. cada shard es un replica-set que permite tener los datos almacenados en distintos servidores, con el consiguiente aumento de la disponibilidad y consistencia. es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "cada shard es un replica-set que permite tener los datos almacenados en distintos servidores, con el consiguiente aumento de la disponibilidad y consistencia. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "el método de sharding en mongodb permite distribuir datos en múltiples servidores, aumentando así la capacidad total del sistema. cada shard es un replica-set que permite tener los datos almacenados en distintos servidores, con el consiguiente aumento de la disponibilidad y consistencia. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.961,
                                            "Frase": "la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.96,
                                            "Frase": "es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.961,
                                            "Frase": "cada shard es un replica-set que permite tener los datos almacenados en distintos servidores, con el consiguiente aumento de la disponibilidad y consistencia. es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.966,
                                            "Frase": "el método de sharding en mongodb permite distribuir datos en múltiples servidores, aumentando así la capacidad total del sistema. cada shard es un replica-set que permite tener los datos almacenados en distintos servidores, con el consiguiente aumento de la disponibilidad y consistencia. es un método para escalar horizontalmente el sistema para mejorar el rendimiento y escalabilidad. la configuración mínima de un replica-set consiste un servidor primario, un secundario y un árbitro. configurando un sharded cluster, habrá un shard de almacenaje, la interfaz de usuario query routers y los metadatos almacenados en los config servers. si un nodo primario deja de tener disponibilidad, los otros nodos replica-set secundarios reemplazarían al primario, puesto que contienen una copia o replica de los datos contenidos en el primario. la diferencia con mongodump es que esta es una herramienta que se usa para crear una copia de seguridad/respaldo de una base de datos de mongodb, mientras que los replica-set están pensados para aumentar la capacidad del sistema. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "a405e454b524415ebaa51ed8262f6555": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "mongodump tiene un propósito diferente permite generar un backup de la base de datos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.8,
                                            "Frase": "replica set es una arquitectura provista por mongo que te permite tolerancia  a fallos , alta disponibilidad y desempeño , basado en  un modelo maestro  esclavo , permite tener varios procesos mongod sobre varios nodos, la arquitectura debe tener como mínimo un nodo principal un nodo secundario que  serviría como replica y un nodo que se consideraría como árbitro , este nodo tiene la tarea determinar quién sería el nodo principal en caso de que el nodo principal cayera. mongodump tiene un propósito diferente permite generar un backup de la base de datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "mongodump tiene un propósito diferente permite generar un backup de la base de datos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.84,
                                            "Frase": "replica set es una arquitectura provista por mongo que te permite tolerancia  a fallos , alta disponibilidad y desempeño , basado en  un modelo maestro  esclavo , permite tener varios procesos mongod sobre varios nodos, la arquitectura debe tener como mínimo un nodo principal un nodo secundario que  serviría como replica y un nodo que se consideraría como árbitro , este nodo tiene la tarea determinar quién sería el nodo principal en caso de que el nodo principal cayera. mongodump tiene un propósito diferente permite generar un backup de la base de datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "replica set es una arquitectura provista por mongo que te permite tolerancia  a fallos , alta disponibilidad y desempeño , basado en  un modelo maestro  esclavo , permite tener varios procesos mongod sobre varios nodos, la arquitectura debe tener como mínimo un nodo principal un nodo secundario que  serviría como replica y un nodo que se consideraría como árbitro , este nodo tiene la tarea determinar quién sería el nodo principal en caso de que el nodo principal cayera. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "replica set es una arquitectura provista por mongo que te permite tolerancia  a fallos , alta disponibilidad y desempeño , basado en  un modelo maestro  esclavo , permite tener varios procesos mongod sobre varios nodos, la arquitectura debe tener como mínimo un nodo principal un nodo secundario que  serviría como replica y un nodo que se consideraría como árbitro , este nodo tiene la tarea determinar quién sería el nodo principal en caso de que el nodo principal cayera. mongodump tiene un propósito diferente permite generar un backup de la base de datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.835,
                                            "Frase": "replica set es una arquitectura provista por mongo que te permite tolerancia  a fallos , alta disponibilidad y desempeño , basado en  un modelo maestro  esclavo , permite tener varios procesos mongod sobre varios nodos, la arquitectura debe tener como mínimo un nodo principal un nodo secundario que  serviría como replica y un nodo que se consideraría como árbitro , este nodo tiene la tarea determinar quién sería el nodo principal en caso de que el nodo principal cayera. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.859,
                                            "Frase": "replica set es una arquitectura provista por mongo que te permite tolerancia  a fallos , alta disponibilidad y desempeño , basado en  un modelo maestro  esclavo , permite tener varios procesos mongod sobre varios nodos, la arquitectura debe tener como mínimo un nodo principal un nodo secundario que  serviría como replica y un nodo que se consideraría como árbitro , este nodo tiene la tarea determinar quién sería el nodo principal en caso de que el nodo principal cayera. mongodump tiene un propósito diferente permite generar un backup de la base de datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "mongodump tiene un propósito diferente permite generar un backup de la base de datos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "replica set es una arquitectura provista por mongo que te permite tolerancia  a fallos , alta disponibilidad y desempeño , basado en  un modelo maestro  esclavo , permite tener varios procesos mongod sobre varios nodos, la arquitectura debe tener como mínimo un nodo principal un nodo secundario que  serviría como replica y un nodo que se consideraría como árbitro , este nodo tiene la tarea determinar quién sería el nodo principal en caso de que el nodo principal cayera. mongodump tiene un propósito diferente permite generar un backup de la base de datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "5f4219073cdb4ab90af7fb878bde2ad9": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "la arquitectura replica-set es la que permite la replicación de mongodb, que tiene como función el prevenir ante daños la perdida de información de la base de datos así como mantener la disponibilidad de la misma. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "la arquitectura replica-set es la que permite la replicación de mongodb, que tiene como función el prevenir ante daños la perdida de información de la base de datos así como mantener la disponibilidad de la misma. 3 nodos son necesarios para la configuración mínima: 1 primario y 2 secundarios. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "la arquitectura replica-set es la que permite la replicación de mongodb, que tiene como función el prevenir ante daños la perdida de información de la base de datos así como mantener la disponibilidad de la misma. 3 nodos son necesarios para la configuración mínima: 1 primario y 2 secundarios. pero también existen los nodos árbitros que permiten mediante heartbeats (latidos) la verificación del funcionamiento de los demás nodos para seguir considerándolos dentro de la estructura. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "la arquitectura replica-set es la que permite la replicación de mongodb, que tiene como función el prevenir ante daños la perdida de información de la base de datos así como mantener la disponibilidad de la misma. 3 nodos son necesarios para la configuración mínima: 1 primario y 2 secundarios. pero también existen los nodos árbitros que permiten mediante heartbeats (latidos) la verificación del funcionamiento de los demás nodos para seguir considerándolos dentro de la estructura. cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "la arquitectura replica-set es la que permite la replicación de mongodb, que tiene como función el prevenir ante daños la perdida de información de la base de datos así como mantener la disponibilidad de la misma. 3 nodos son necesarios para la configuración mínima: 1 primario y 2 secundarios. pero también existen los nodos árbitros que permiten mediante heartbeats (latidos) la verificación del funcionamiento de los demás nodos para seguir considerándolos dentro de la estructura. cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. la principal  diferencia con mongodump es que este comando realiza un backup a la base de datos y luego se debe realizar un mongorestore para poder tener disponible el sistema en cambio la arquitectura del replica-set te permite una disponibilidad inmediata. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.767,
                                            "Frase": "la principal  diferencia con mongodump es que este comando realiza un backup a la base de datos y luego se debe realizar un mongorestore para poder tener disponible el sistema en cambio la arquitectura del replica-set te permite una disponibilidad inmediata. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.757,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. la principal  diferencia con mongodump es que este comando realiza un backup a la base de datos y luego se debe realizar un mongorestore para poder tener disponible el sistema en cambio la arquitectura del replica-set te permite una disponibilidad inmediata. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.753,
                                            "Frase": "pero también existen los nodos árbitros que permiten mediante heartbeats (latidos) la verificación del funcionamiento de los demás nodos para seguir considerándolos dentro de la estructura. cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. la principal  diferencia con mongodump es que este comando realiza un backup a la base de datos y luego se debe realizar un mongorestore para poder tener disponible el sistema en cambio la arquitectura del replica-set te permite una disponibilidad inmediata. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.755,
                                            "Frase": "3 nodos son necesarios para la configuración mínima: 1 primario y 2 secundarios. pero también existen los nodos árbitros que permiten mediante heartbeats (latidos) la verificación del funcionamiento de los demás nodos para seguir considerándolos dentro de la estructura. cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. la principal  diferencia con mongodump es que este comando realiza un backup a la base de datos y luego se debe realizar un mongorestore para poder tener disponible el sistema en cambio la arquitectura del replica-set te permite una disponibilidad inmediata. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.744,
                                            "Frase": "la arquitectura replica-set es la que permite la replicación de mongodb, que tiene como función el prevenir ante daños la perdida de información de la base de datos así como mantener la disponibilidad de la misma. 3 nodos son necesarios para la configuración mínima: 1 primario y 2 secundarios. pero también existen los nodos árbitros que permiten mediante heartbeats (latidos) la verificación del funcionamiento de los demás nodos para seguir considerándolos dentro de la estructura. cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. la principal  diferencia con mongodump es que este comando realiza un backup a la base de datos y luego se debe realizar un mongorestore para poder tener disponible el sistema en cambio la arquitectura del replica-set te permite una disponibilidad inmediata. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.882,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. la principal  diferencia con mongodump es que este comando realiza un backup a la base de datos y luego se debe realizar un mongorestore para poder tener disponible el sistema en cambio la arquitectura del replica-set te permite una disponibilidad inmediata. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "pero también existen los nodos árbitros que permiten mediante heartbeats (latidos) la verificación del funcionamiento de los demás nodos para seguir considerándolos dentro de la estructura. cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. la principal  diferencia con mongodump es que este comando realiza un backup a la base de datos y luego se debe realizar un mongorestore para poder tener disponible el sistema en cambio la arquitectura del replica-set te permite una disponibilidad inmediata. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.874,
                                            "Frase": "3 nodos son necesarios para la configuración mínima: 1 primario y 2 secundarios. pero también existen los nodos árbitros que permiten mediante heartbeats (latidos) la verificación del funcionamiento de los demás nodos para seguir considerándolos dentro de la estructura. cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. la principal  diferencia con mongodump es que este comando realiza un backup a la base de datos y luego se debe realizar un mongorestore para poder tener disponible el sistema en cambio la arquitectura del replica-set te permite una disponibilidad inmediata. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.849,
                                            "Frase": "la arquitectura replica-set es la que permite la replicación de mongodb, que tiene como función el prevenir ante daños la perdida de información de la base de datos así como mantener la disponibilidad de la misma. 3 nodos son necesarios para la configuración mínima: 1 primario y 2 secundarios. pero también existen los nodos árbitros que permiten mediante heartbeats (latidos) la verificación del funcionamiento de los demás nodos para seguir considerándolos dentro de la estructura. cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. la principal  diferencia con mongodump es que este comando realiza un backup a la base de datos y luego se debe realizar un mongorestore para poder tener disponible el sistema en cambio la arquitectura del replica-set te permite una disponibilidad inmediata. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.899,
                                            "Frase": "la arquitectura replica-set es la que permite la replicación de mongodb, que tiene como función el prevenir ante daños la perdida de información de la base de datos así como mantener la disponibilidad de la misma. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "pero también existen los nodos árbitros que permiten mediante heartbeats (latidos) la verificación del funcionamiento de los demás nodos para seguir considerándolos dentro de la estructura. cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "pero también existen los nodos árbitros que permiten mediante heartbeats (latidos) la verificación del funcionamiento de los demás nodos para seguir considerándolos dentro de la estructura. cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. la principal  diferencia con mongodump es que este comando realiza un backup a la base de datos y luego se debe realizar un mongorestore para poder tener disponible el sistema en cambio la arquitectura del replica-set te permite una disponibilidad inmediata. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "la arquitectura replica-set es la que permite la replicación de mongodb, que tiene como función el prevenir ante daños la perdida de información de la base de datos así como mantener la disponibilidad de la misma. 3 nodos son necesarios para la configuración mínima: 1 primario y 2 secundarios. pero también existen los nodos árbitros que permiten mediante heartbeats (latidos) la verificación del funcionamiento de los demás nodos para seguir considerándolos dentro de la estructura. cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "la arquitectura replica-set es la que permite la replicación de mongodb, que tiene como función el prevenir ante daños la perdida de información de la base de datos así como mantener la disponibilidad de la misma. 3 nodos son necesarios para la configuración mínima: 1 primario y 2 secundarios. pero también existen los nodos árbitros que permiten mediante heartbeats (latidos) la verificación del funcionamiento de los demás nodos para seguir considerándolos dentro de la estructura. cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. la principal  diferencia con mongodump es que este comando realiza un backup a la base de datos y luego se debe realizar un mongorestore para poder tener disponible el sistema en cambio la arquitectura del replica-set te permite una disponibilidad inmediata. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.892,
                                            "Frase": "la principal  diferencia con mongodump es que este comando realiza un backup a la base de datos y luego se debe realizar un mongorestore para poder tener disponible el sistema en cambio la arquitectura del replica-set te permite una disponibilidad inmediata. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "pero también existen los nodos árbitros que permiten mediante heartbeats (latidos) la verificación del funcionamiento de los demás nodos para seguir considerándolos dentro de la estructura. cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "pero también existen los nodos árbitros que permiten mediante heartbeats (latidos) la verificación del funcionamiento de los demás nodos para seguir considerándolos dentro de la estructura. cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. la principal  diferencia con mongodump es que este comando realiza un backup a la base de datos y luego se debe realizar un mongorestore para poder tener disponible el sistema en cambio la arquitectura del replica-set te permite una disponibilidad inmediata. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "3 nodos son necesarios para la configuración mínima: 1 primario y 2 secundarios. pero también existen los nodos árbitros que permiten mediante heartbeats (latidos) la verificación del funcionamiento de los demás nodos para seguir considerándolos dentro de la estructura. cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. la principal  diferencia con mongodump es que este comando realiza un backup a la base de datos y luego se debe realizar un mongorestore para poder tener disponible el sistema en cambio la arquitectura del replica-set te permite una disponibilidad inmediata. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "la arquitectura replica-set es la que permite la replicación de mongodb, que tiene como función el prevenir ante daños la perdida de información de la base de datos así como mantener la disponibilidad de la misma. 3 nodos son necesarios para la configuración mínima: 1 primario y 2 secundarios. pero también existen los nodos árbitros que permiten mediante heartbeats (latidos) la verificación del funcionamiento de los demás nodos para seguir considerándolos dentro de la estructura. cuando el nodo primario deja de tener disponibilidad inmediatamente se selecciona otro nodo como nodo primario para que continúe la disponibilidad. la principal  diferencia con mongodump es que este comando realiza un backup a la base de datos y luego se debe realizar un mongorestore para poder tener disponible el sistema en cambio la arquitectura del replica-set te permite una disponibilidad inmediata. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "ffcbd8b01551819a4204e7d1e63dfef0": {
                      "minipregunta0": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta1": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta2": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta3": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "respuesta_completa": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      }
           },
           "ed18042a7d02be0fd40259d047b3989e": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "sin embargo, cuando contamos con ficheros distribuidos dentro de un clúster de datos es imprescindible tener otro tipo de mecanismo de replicación de datos, es allí donde entra en protagonismo la opción de replica-set de mongodb, ayudando a almacenar la información distribuida en varios nodos a la vez. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "sin embargo, cuando contamos con ficheros distribuidos dentro de un clúster de datos es imprescindible tener otro tipo de mecanismo de replicación de datos, es allí donde entra en protagonismo la opción de replica-set de mongodb, ayudando a almacenar la información distribuida en varios nodos a la vez. este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.892,
                                            "Frase": "para realizar respaldos de manera local en mongodb se recurre a mongodump. sin embargo, cuando contamos con ficheros distribuidos dentro de un clúster de datos es imprescindible tener otro tipo de mecanismo de replicación de datos, es allí donde entra en protagonismo la opción de replica-set de mongodb, ayudando a almacenar la información distribuida en varios nodos a la vez. este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.877,
                                            "Frase": "para realizar respaldos de manera local en mongodb se recurre a mongodump. sin embargo, cuando contamos con ficheros distribuidos dentro de un clúster de datos es imprescindible tener otro tipo de mecanismo de replicación de datos, es allí donde entra en protagonismo la opción de replica-set de mongodb, ayudando a almacenar la información distribuida en varios nodos a la vez. este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. dentro de las ventajas principales que forman parte de esta configuración se tiene que permite la consulta paralela de información, ya que tanto el nodo primario como el secundario cuentan con la misma data, lo que se refleja una mejora en el rendimiento de las búsquedas dentro del sistema, por otro lado, ofrece respaldo aprueba de fallos en caso de cualquier contingencia. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.801,
                                            "Frase": "este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.803,
                                            "Frase": "sin embargo, cuando contamos con ficheros distribuidos dentro de un clúster de datos es imprescindible tener otro tipo de mecanismo de replicación de datos, es allí donde entra en protagonismo la opción de replica-set de mongodb, ayudando a almacenar la información distribuida en varios nodos a la vez. este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.788,
                                            "Frase": "para realizar respaldos de manera local en mongodb se recurre a mongodump. sin embargo, cuando contamos con ficheros distribuidos dentro de un clúster de datos es imprescindible tener otro tipo de mecanismo de replicación de datos, es allí donde entra en protagonismo la opción de replica-set de mongodb, ayudando a almacenar la información distribuida en varios nodos a la vez. este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.769,
                                            "Frase": "para realizar respaldos de manera local en mongodb se recurre a mongodump. sin embargo, cuando contamos con ficheros distribuidos dentro de un clúster de datos es imprescindible tener otro tipo de mecanismo de replicación de datos, es allí donde entra en protagonismo la opción de replica-set de mongodb, ayudando a almacenar la información distribuida en varios nodos a la vez. este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. dentro de las ventajas principales que forman parte de esta configuración se tiene que permite la consulta paralela de información, ya que tanto el nodo primario como el secundario cuentan con la misma data, lo que se refleja una mejora en el rendimiento de las búsquedas dentro del sistema, por otro lado, ofrece respaldo aprueba de fallos en caso de cualquier contingencia. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. dentro de las ventajas principales que forman parte de esta configuración se tiene que permite la consulta paralela de información, ya que tanto el nodo primario como el secundario cuentan con la misma data, lo que se refleja una mejora en el rendimiento de las búsquedas dentro del sistema, por otro lado, ofrece respaldo aprueba de fallos en caso de cualquier contingencia. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "sin embargo, cuando contamos con ficheros distribuidos dentro de un clúster de datos es imprescindible tener otro tipo de mecanismo de replicación de datos, es allí donde entra en protagonismo la opción de replica-set de mongodb, ayudando a almacenar la información distribuida en varios nodos a la vez. este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. dentro de las ventajas principales que forman parte de esta configuración se tiene que permite la consulta paralela de información, ya que tanto el nodo primario como el secundario cuentan con la misma data, lo que se refleja una mejora en el rendimiento de las búsquedas dentro del sistema, por otro lado, ofrece respaldo aprueba de fallos en caso de cualquier contingencia. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "para realizar respaldos de manera local en mongodb se recurre a mongodump. sin embargo, cuando contamos con ficheros distribuidos dentro de un clúster de datos es imprescindible tener otro tipo de mecanismo de replicación de datos, es allí donde entra en protagonismo la opción de replica-set de mongodb, ayudando a almacenar la información distribuida en varios nodos a la vez. este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. dentro de las ventajas principales que forman parte de esta configuración se tiene que permite la consulta paralela de información, ya que tanto el nodo primario como el secundario cuentan con la misma data, lo que se refleja una mejora en el rendimiento de las búsquedas dentro del sistema, por otro lado, ofrece respaldo aprueba de fallos en caso de cualquier contingencia. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "sin embargo, cuando contamos con ficheros distribuidos dentro de un clúster de datos es imprescindible tener otro tipo de mecanismo de replicación de datos, es allí donde entra en protagonismo la opción de replica-set de mongodb, ayudando a almacenar la información distribuida en varios nodos a la vez. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "sin embargo, cuando contamos con ficheros distribuidos dentro de un clúster de datos es imprescindible tener otro tipo de mecanismo de replicación de datos, es allí donde entra en protagonismo la opción de replica-set de mongodb, ayudando a almacenar la información distribuida en varios nodos a la vez. este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "sin embargo, cuando contamos con ficheros distribuidos dentro de un clúster de datos es imprescindible tener otro tipo de mecanismo de replicación de datos, es allí donde entra en protagonismo la opción de replica-set de mongodb, ayudando a almacenar la información distribuida en varios nodos a la vez. este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. dentro de las ventajas principales que forman parte de esta configuración se tiene que permite la consulta paralela de información, ya que tanto el nodo primario como el secundario cuentan con la misma data, lo que se refleja una mejora en el rendimiento de las búsquedas dentro del sistema, por otro lado, ofrece respaldo aprueba de fallos en caso de cualquier contingencia. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "para realizar respaldos de manera local en mongodb se recurre a mongodump. sin embargo, cuando contamos con ficheros distribuidos dentro de un clúster de datos es imprescindible tener otro tipo de mecanismo de replicación de datos, es allí donde entra en protagonismo la opción de replica-set de mongodb, ayudando a almacenar la información distribuida en varios nodos a la vez. este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. dentro de las ventajas principales que forman parte de esta configuración se tiene que permite la consulta paralela de información, ya que tanto el nodo primario como el secundario cuentan con la misma data, lo que se refleja una mejora en el rendimiento de las búsquedas dentro del sistema, por otro lado, ofrece respaldo aprueba de fallos en caso de cualquier contingencia. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.962,
                                            "Frase": "sin embargo, cuando contamos con ficheros distribuidos dentro de un clúster de datos es imprescindible tener otro tipo de mecanismo de replicación de datos, es allí donde entra en protagonismo la opción de replica-set de mongodb, ayudando a almacenar la información distribuida en varios nodos a la vez. este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "para realizar respaldos de manera local en mongodb se recurre a mongodump. sin embargo, cuando contamos con ficheros distribuidos dentro de un clúster de datos es imprescindible tener otro tipo de mecanismo de replicación de datos, es allí donde entra en protagonismo la opción de replica-set de mongodb, ayudando a almacenar la información distribuida en varios nodos a la vez. este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "para realizar respaldos de manera local en mongodb se recurre a mongodump. sin embargo, cuando contamos con ficheros distribuidos dentro de un clúster de datos es imprescindible tener otro tipo de mecanismo de replicación de datos, es allí donde entra en protagonismo la opción de replica-set de mongodb, ayudando a almacenar la información distribuida en varios nodos a la vez. este mecanismo se basa en un modelo master-slave, pero con algunas distinciones adicionales como lo es el uso de 3 nodos como configuración mínima, de los cuales uno de ellos es el arbitro que esta continuamente pendiente de la conexión entre los otros 2 nodos restantes, y así, asignar un reemplazo en caso de que el primario pierda su disponibilidad. dentro de las ventajas principales que forman parte de esta configuración se tiene que permite la consulta paralela de información, ya que tanto el nodo primario como el secundario cuentan con la misma data, lo que se refleja una mejora en el rendimiento de las búsquedas dentro del sistema, por otro lado, ofrece respaldo aprueba de fallos en caso de cualquier contingencia. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "03d07d645997a8aa7eb3d739a951dc77": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.777,
                                            "Frase": "el replica-set en mongodb es la técnica de maestro esclavo, la función principal es tener disponibilidad de la información evitando el riesgo que se pueda perder por lo que se replica en varios nodos los cuales deben ser mínimo tres. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.687,
                                            "Frase": "el replica-set en mongodb es la técnica de maestro esclavo, la función principal es tener disponibilidad de la información evitando el riesgo que se pueda perder por lo que se replica en varios nodos los cuales deben ser mínimo tres. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.832,
                                            "Frase": "el replica-set en mongodb es la técnica de maestro esclavo, la función principal es tener disponibilidad de la información evitando el riesgo que se pueda perder por lo que se replica en varios nodos los cuales deben ser mínimo tres. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "el replica-set en mongodb es la técnica de maestro esclavo, la función principal es tener disponibilidad de la información evitando el riesgo que se pueda perder por lo que se replica en varios nodos los cuales deben ser mínimo tres. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.87,
                                            "Frase": "el replica-set en mongodb es la técnica de maestro esclavo, la función principal es tener disponibilidad de la información evitando el riesgo que se pueda perder por lo que se replica en varios nodos los cuales deben ser mínimo tres. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.75,
                                 "Umbral 0.4 - 0.8": 0.75,
                                 "Umbral 0.5 - 0.8": 0.75,
                                 "Umbral 0.6 - 0.8": 0.75,
                                 "Umbral 0.7 - 0.8": 0.625,
                                 "Umbral 0.3 - 0.9": 0.5,
                                 "Umbral 0.4 - 0.9": 0.5,
                                 "Umbral 0.5 - 0.9": 0.5,
                                 "Umbral 0.6 - 0.9": 0.5,
                                 "Umbral 0.7 - 0.9": 0.375,
                                 "Umbral 0.8 - 0.9": 0.25,
                                 "Umbral 0.3 - 0.7": 0.875,
                                 "Umbral 0.4 - 0.7": 0.875,
                                 "Umbral 0.5 - 0.7": 0.875,
                                 "Umbral 0.6 - 0.7": 0.875,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "e239ae9b09713136237396d968225eb0": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.883,
                                            "Frase": "el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "la arquitectura replica-set de mongodb consiste en un modelo maestro-esclavo que permite una recuperación a fallos de forma automática. tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "la arquitectura replica-set de mongodb consiste en un modelo maestro-esclavo que permite una recuperación a fallos de forma automática. tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.786,
                                            "Frase": "hay un envío de pings cada 2 segundos para mantener el control del sistema. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.825,
                                            "Frase": "el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.833,
                                            "Frase": "en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.834,
                                            "Frase": "tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.839,
                                            "Frase": "la arquitectura replica-set de mongodb consiste en un modelo maestro-esclavo que permite una recuperación a fallos de forma automática. tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.823,
                                            "Frase": "la arquitectura replica-set de mongodb consiste en un modelo maestro-esclavo que permite una recuperación a fallos de forma automática. tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.819,
                                            "Frase": "la arquitectura replica-set de mongodb consiste en un modelo maestro-esclavo que permite una recuperación a fallos de forma automática. tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.816,
                                            "Frase": "la arquitectura replica-set de mongodb consiste en un modelo maestro-esclavo que permite una recuperación a fallos de forma automática. tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.96,
                                            "Frase": "en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.963,
                                            "Frase": "tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.959,
                                            "Frase": "la arquitectura replica-set de mongodb consiste en un modelo maestro-esclavo que permite una recuperación a fallos de forma automática. tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "la arquitectura replica-set de mongodb consiste en un modelo maestro-esclavo que permite una recuperación a fallos de forma automática. tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.965,
                                            "Frase": "la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.883,
                                            "Frase": "el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "la arquitectura replica-set de mongodb consiste en un modelo maestro-esclavo que permite una recuperación a fallos de forma automática. tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "la arquitectura replica-set de mongodb consiste en un modelo maestro-esclavo que permite una recuperación a fallos de forma automática. tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.963,
                                            "Frase": "la arquitectura replica-set de mongodb consiste en un modelo maestro-esclavo que permite una recuperación a fallos de forma automática. tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.965,
                                            "Frase": "la arquitectura replica-set de mongodb consiste en un modelo maestro-esclavo que permite una recuperación a fallos de forma automática. tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.963,
                                            "Frase": "en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.965,
                                            "Frase": "la arquitectura replica-set de mongodb consiste en un modelo maestro-esclavo que permite una recuperación a fallos de forma automática. tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.968,
                                            "Frase": "la arquitectura replica-set de mongodb consiste en un modelo maestro-esclavo que permite una recuperación a fallos de forma automática. tiene una función de respaldo dentro de mongo, para que en caso de que haya algún problema, el sistema no caiga de manera catastrófica. en su configuración mínima necesita 3 nodos, uno principal, otro secundario y el tercero que ejerce de árbitro. el nodo maestro es asignado al azar dependiendo de su disponibilidad. hay un envío de pings cada 2 segundos para mantener el control del sistema. en caso de que el nodo primario deje de estar disponible, entrará en funcionamiento el nodo secundario para que el sistema siga funcionando sin problema. la principal diferencia con mongodump es que éste solamente crea una copia de seguridad de los datos conectándose a mongo en ejecución. en cambio, el replica-set ofrece una alta disponibilidad permitiendo la redundancia de datos y mongodump no. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "aaba95ed456dd2e851afc04391b518bb": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "la arquitectura replica-set de mongodb es la interpretación que tiene mongodb para la arquitectura de maestro-esclavo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.817,
                                            "Frase": "la arquitectura replica-set de mongodb es la interpretación que tiene mongodb para la arquitectura de maestro-esclavo. en esta arquitectura se necesitan mínimo 3 máquinas una primaria donde se guardarán los datos, una replica donde se replicarán los datos almacenados en el primario y una tercera que hace la función de árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.84,
                                            "Frase": "la arquitectura replica-set de mongodb es la interpretación que tiene mongodb para la arquitectura de maestro-esclavo. en esta arquitectura se necesitan mínimo 3 máquinas una primaria donde se guardarán los datos, una replica donde se replicarán los datos almacenados en el primario y una tercera que hace la función de árbitro. cuando un nodo primario deja de tener disponibilidad entra en juego la réplica y el árbitro se encargará de buscar un nuevo nodo donde poder replicar los datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.807,
                                            "Frase": "la arquitectura replica-set de mongodb es la interpretación que tiene mongodb para la arquitectura de maestro-esclavo. en esta arquitectura se necesitan mínimo 3 máquinas una primaria donde se guardarán los datos, una replica donde se replicarán los datos almacenados en el primario y una tercera que hace la función de árbitro. cuando un nodo primario deja de tener disponibilidad entra en juego la réplica y el árbitro se encargará de buscar un nuevo nodo donde poder replicar los datos. existe una diferencia con mongodump,  y es que no se necesitara parar el sistema y levantar una nueva máquina con los datos del backup que se haya llevado a cabo con mongodump, esto se realizara de forma automática y sin la necesidad de parar nuestro sistema ya que entraría en juego nuestra replica con los datos actuales. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.798,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad entra en juego la réplica y el árbitro se encargará de buscar un nuevo nodo donde poder replicar los datos. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.692,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad entra en juego la réplica y el árbitro se encargará de buscar un nuevo nodo donde poder replicar los datos. existe una diferencia con mongodump,  y es que no se necesitara parar el sistema y levantar una nueva máquina con los datos del backup que se haya llevado a cabo con mongodump, esto se realizara de forma automática y sin la necesidad de parar nuestro sistema ya que entraría en juego nuestra replica con los datos actuales. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.727,
                                            "Frase": "la arquitectura replica-set de mongodb es la interpretación que tiene mongodb para la arquitectura de maestro-esclavo. en esta arquitectura se necesitan mínimo 3 máquinas una primaria donde se guardarán los datos, una replica donde se replicarán los datos almacenados en el primario y una tercera que hace la función de árbitro. cuando un nodo primario deja de tener disponibilidad entra en juego la réplica y el árbitro se encargará de buscar un nuevo nodo donde poder replicar los datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.69,
                                            "Frase": "la arquitectura replica-set de mongodb es la interpretación que tiene mongodb para la arquitectura de maestro-esclavo. en esta arquitectura se necesitan mínimo 3 máquinas una primaria donde se guardarán los datos, una replica donde se replicarán los datos almacenados en el primario y una tercera que hace la función de árbitro. cuando un nodo primario deja de tener disponibilidad entra en juego la réplica y el árbitro se encargará de buscar un nuevo nodo donde poder replicar los datos. existe una diferencia con mongodump,  y es que no se necesitara parar el sistema y levantar una nueva máquina con los datos del backup que se haya llevado a cabo con mongodump, esto se realizara de forma automática y sin la necesidad de parar nuestro sistema ya que entraría en juego nuestra replica con los datos actuales. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad entra en juego la réplica y el árbitro se encargará de buscar un nuevo nodo donde poder replicar los datos. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.85,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad entra en juego la réplica y el árbitro se encargará de buscar un nuevo nodo donde poder replicar los datos. existe una diferencia con mongodump,  y es que no se necesitara parar el sistema y levantar una nueva máquina con los datos del backup que se haya llevado a cabo con mongodump, esto se realizara de forma automática y sin la necesidad de parar nuestro sistema ya que entraría en juego nuestra replica con los datos actuales. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.845,
                                            "Frase": "la arquitectura replica-set de mongodb es la interpretación que tiene mongodb para la arquitectura de maestro-esclavo. en esta arquitectura se necesitan mínimo 3 máquinas una primaria donde se guardarán los datos, una replica donde se replicarán los datos almacenados en el primario y una tercera que hace la función de árbitro. cuando un nodo primario deja de tener disponibilidad entra en juego la réplica y el árbitro se encargará de buscar un nuevo nodo donde poder replicar los datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.833,
                                            "Frase": "la arquitectura replica-set de mongodb es la interpretación que tiene mongodb para la arquitectura de maestro-esclavo. en esta arquitectura se necesitan mínimo 3 máquinas una primaria donde se guardarán los datos, una replica donde se replicarán los datos almacenados en el primario y una tercera que hace la función de árbitro. cuando un nodo primario deja de tener disponibilidad entra en juego la réplica y el árbitro se encargará de buscar un nuevo nodo donde poder replicar los datos. existe una diferencia con mongodump,  y es que no se necesitara parar el sistema y levantar una nueva máquina con los datos del backup que se haya llevado a cabo con mongodump, esto se realizara de forma automática y sin la necesidad de parar nuestro sistema ya que entraría en juego nuestra replica con los datos actuales. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "existe una diferencia con mongodump,  y es que no se necesitara parar el sistema y levantar una nueva máquina con los datos del backup que se haya llevado a cabo con mongodump, esto se realizara de forma automática y sin la necesidad de parar nuestro sistema ya que entraría en juego nuestra replica con los datos actuales. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "la arquitectura replica-set de mongodb es la interpretación que tiene mongodb para la arquitectura de maestro-esclavo. en esta arquitectura se necesitan mínimo 3 máquinas una primaria donde se guardarán los datos, una replica donde se replicarán los datos almacenados en el primario y una tercera que hace la función de árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "la arquitectura replica-set de mongodb es la interpretación que tiene mongodb para la arquitectura de maestro-esclavo. en esta arquitectura se necesitan mínimo 3 máquinas una primaria donde se guardarán los datos, una replica donde se replicarán los datos almacenados en el primario y una tercera que hace la función de árbitro. cuando un nodo primario deja de tener disponibilidad entra en juego la réplica y el árbitro se encargará de buscar un nuevo nodo donde poder replicar los datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "la arquitectura replica-set de mongodb es la interpretación que tiene mongodb para la arquitectura de maestro-esclavo. en esta arquitectura se necesitan mínimo 3 máquinas una primaria donde se guardarán los datos, una replica donde se replicarán los datos almacenados en el primario y una tercera que hace la función de árbitro. cuando un nodo primario deja de tener disponibilidad entra en juego la réplica y el árbitro se encargará de buscar un nuevo nodo donde poder replicar los datos. existe una diferencia con mongodump,  y es que no se necesitara parar el sistema y levantar una nueva máquina con los datos del backup que se haya llevado a cabo con mongodump, esto se realizara de forma automática y sin la necesidad de parar nuestro sistema ya que entraría en juego nuestra replica con los datos actuales. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad entra en juego la réplica y el árbitro se encargará de buscar un nuevo nodo donde poder replicar los datos. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad entra en juego la réplica y el árbitro se encargará de buscar un nuevo nodo donde poder replicar los datos. existe una diferencia con mongodump,  y es que no se necesitara parar el sistema y levantar una nueva máquina con los datos del backup que se haya llevado a cabo con mongodump, esto se realizara de forma automática y sin la necesidad de parar nuestro sistema ya que entraría en juego nuestra replica con los datos actuales. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "la arquitectura replica-set de mongodb es la interpretación que tiene mongodb para la arquitectura de maestro-esclavo. en esta arquitectura se necesitan mínimo 3 máquinas una primaria donde se guardarán los datos, una replica donde se replicarán los datos almacenados en el primario y una tercera que hace la función de árbitro. cuando un nodo primario deja de tener disponibilidad entra en juego la réplica y el árbitro se encargará de buscar un nuevo nodo donde poder replicar los datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "la arquitectura replica-set de mongodb es la interpretación que tiene mongodb para la arquitectura de maestro-esclavo. en esta arquitectura se necesitan mínimo 3 máquinas una primaria donde se guardarán los datos, una replica donde se replicarán los datos almacenados en el primario y una tercera que hace la función de árbitro. cuando un nodo primario deja de tener disponibilidad entra en juego la réplica y el árbitro se encargará de buscar un nuevo nodo donde poder replicar los datos. existe una diferencia con mongodump,  y es que no se necesitara parar el sistema y levantar una nueva máquina con los datos del backup que se haya llevado a cabo con mongodump, esto se realizara de forma automática y sin la necesidad de parar nuestro sistema ya que entraría en juego nuestra replica con los datos actuales. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "26cfe8db9961fe19b101548db9c9d3b4": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.756,
                                            "Frase": "permite disponibilidad de la base mongo siempre, pues replica la información en varios nodos, así cuando exista un fallo en algún nodo, la información puede ser recuperada de otro modo, se sebe tener en cuenta que se debe contar con 3 nodos, un maestro y dos esclavos, cuando el nodo maestro o el nodo primario falla el árbitro elige a uno de los esclavos para que pase como maestro mongodump crea respaldos o backups hasta que se restaure el respaldo no habrá disponibilidad de los datos mientras que con replica-set permite una mayor disponibilidad. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.714,
                                            "Frase": "permite disponibilidad de la base mongo siempre, pues replica la información en varios nodos, así cuando exista un fallo en algún nodo, la información puede ser recuperada de otro modo, se sebe tener en cuenta que se debe contar con 3 nodos, un maestro y dos esclavos, cuando el nodo maestro o el nodo primario falla el árbitro elige a uno de los esclavos para que pase como maestro mongodump crea respaldos o backups hasta que se restaure el respaldo no habrá disponibilidad de los datos mientras que con replica-set permite una mayor disponibilidad. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "permite disponibilidad de la base mongo siempre, pues replica la información en varios nodos, así cuando exista un fallo en algún nodo, la información puede ser recuperada de otro modo, se sebe tener en cuenta que se debe contar con 3 nodos, un maestro y dos esclavos, cuando el nodo maestro o el nodo primario falla el árbitro elige a uno de los esclavos para que pase como maestro mongodump crea respaldos o backups hasta que se restaure el respaldo no habrá disponibilidad de los datos mientras que con replica-set permite una mayor disponibilidad. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "permite disponibilidad de la base mongo siempre, pues replica la información en varios nodos, así cuando exista un fallo en algún nodo, la información puede ser recuperada de otro modo, se sebe tener en cuenta que se debe contar con 3 nodos, un maestro y dos esclavos, cuando el nodo maestro o el nodo primario falla el árbitro elige a uno de los esclavos para que pase como maestro mongodump crea respaldos o backups hasta que se restaure el respaldo no habrá disponibilidad de los datos mientras que con replica-set permite una mayor disponibilidad. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "permite disponibilidad de la base mongo siempre, pues replica la información en varios nodos, así cuando exista un fallo en algún nodo, la información puede ser recuperada de otro modo, se sebe tener en cuenta que se debe contar con 3 nodos, un maestro y dos esclavos, cuando el nodo maestro o el nodo primario falla el árbitro elige a uno de los esclavos para que pase como maestro mongodump crea respaldos o backups hasta que se restaure el respaldo no habrá disponibilidad de los datos mientras que con replica-set permite una mayor disponibilidad. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.75,
                                 "Umbral 0.4 - 0.8": 0.75,
                                 "Umbral 0.5 - 0.8": 0.75,
                                 "Umbral 0.6 - 0.8": 0.75,
                                 "Umbral 0.7 - 0.8": 0.75,
                                 "Umbral 0.3 - 0.9": 0.5,
                                 "Umbral 0.4 - 0.9": 0.5,
                                 "Umbral 0.5 - 0.9": 0.5,
                                 "Umbral 0.6 - 0.9": 0.5,
                                 "Umbral 0.7 - 0.9": 0.5,
                                 "Umbral 0.8 - 0.9": 0.25,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "07dcf54484cec166857559a76ff4afe8": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.856,
                                            "Frase": "la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.868,
                                            "Frase": "un mecanismo que nos sirve para aumentar la disponibilidad es la replicación de información. esto, consiste en replicar o distribuir los datos de los que disponemos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.877,
                                            "Frase": "un mecanismo que nos sirve para aumentar la disponibilidad es la replicación de información. esto, consiste en replicar o distribuir los datos de los que disponemos. la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.865,
                                            "Frase": "un mecanismo que nos sirve para aumentar la disponibilidad es la replicación de información. esto, consiste en replicar o distribuir los datos de los que disponemos. la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "un mecanismo que nos sirve para aumentar la disponibilidad es la replicación de información. esto, consiste en replicar o distribuir los datos de los que disponemos. la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.859,
                                            "Frase": "esto, consiste en replicar o distribuir los datos de los que disponemos. la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.87,
                                            "Frase": "un mecanismo que nos sirve para aumentar la disponibilidad es la replicación de información. esto, consiste en replicar o distribuir los datos de los que disponemos. la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.764,
                                            "Frase": "un mecanismo que nos sirve para aumentar la disponibilidad es la replicación de información. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.783,
                                            "Frase": "en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.784,
                                            "Frase": "pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.76,
                                            "Frase": "esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.752,
                                            "Frase": "la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.742,
                                            "Frase": "esto, consiste en replicar o distribuir los datos de los que disponemos. la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.754,
                                            "Frase": "un mecanismo que nos sirve para aumentar la disponibilidad es la replicación de información. esto, consiste en replicar o distribuir los datos de los que disponemos. la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.892,
                                            "Frase": "un mecanismo que nos sirve para aumentar la disponibilidad es la replicación de información. esto, consiste en replicar o distribuir los datos de los que disponemos. la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "un mecanismo que nos sirve para aumentar la disponibilidad es la replicación de información. esto, consiste en replicar o distribuir los datos de los que disponemos. la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "un mecanismo que nos sirve para aumentar la disponibilidad es la replicación de información. esto, consiste en replicar o distribuir los datos de los que disponemos. la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "un mecanismo que nos sirve para aumentar la disponibilidad es la replicación de información. esto, consiste en replicar o distribuir los datos de los que disponemos. la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "esto, consiste en replicar o distribuir los datos de los que disponemos. la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "un mecanismo que nos sirve para aumentar la disponibilidad es la replicación de información. esto, consiste en replicar o distribuir los datos de los que disponemos. la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "esto, consiste en replicar o distribuir los datos de los que disponemos. la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "un mecanismo que nos sirve para aumentar la disponibilidad es la replicación de información. esto, consiste en replicar o distribuir los datos de los que disponemos. la arquitectura replica-set nos sirve para replicar el conjunto de datos en varias instancias o servidores para aumentar la disponibilidad de los datos. esto se consigue creando nodos que repliquen la información para que, en caso de caída de uno de los nodos o pérdida, esta siga disponible. pese a que en otras técnicas de replicación la configuración mínima consiste en dos nodos, uno principal y otro secundario, en el replica-set en mongodb la configuración está conformada por tres nodos, uno principal, otro secundario y un tercero que actúa como árbitro (desempate) en las votaciones. en caso de que el primario se caiga, el nodo secundario se convierte en primario. la principal diferencia con mongodump es que la replicación de la información es dinámica, es decir, no tienes que ejecutar un comando para realizar la copia de seguridad ni otro para recuperarla. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "9a938fd1b8fd01926c2ac3e9ebea8bad": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "un replica-set tiene la función de realizar de copias de los shards para de esta forma tener un servicio disponible y consistente. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "un replica-set tiene la función de realizar de copias de los shards para de esta forma tener un servicio disponible y consistente. para configurar un replica-set debemos tener mínimo 3 nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.816,
                                            "Frase": "un replica-set tiene la función de realizar de copias de los shards para de esta forma tener un servicio disponible y consistente. para configurar un replica-set debemos tener mínimo 3 nodos. si un nodo primario deja de tener disponibilidad tendremos más replicas en los demás nodos, por lo que podremos sustituir el nodo principal por otro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.871,
                                            "Frase": "un replica-set tiene la función de realizar de copias de los shards para de esta forma tener un servicio disponible y consistente. para configurar un replica-set debemos tener mínimo 3 nodos. si un nodo primario deja de tener disponibilidad tendremos más replicas en los demás nodos, por lo que podremos sustituir el nodo principal por otro. la principal diferencia entre mongodump y replica-set es que mongodump realiza copias de seguridad periódicas mientras que los replica-set se realizan cuando se modifica la información de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.833,
                                            "Frase": "un replica-set tiene la función de realizar de copias de los shards para de esta forma tener un servicio disponible y consistente. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.839,
                                            "Frase": "un replica-set tiene la función de realizar de copias de los shards para de esta forma tener un servicio disponible y consistente. para configurar un replica-set debemos tener mínimo 3 nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.813,
                                            "Frase": "un replica-set tiene la función de realizar de copias de los shards para de esta forma tener un servicio disponible y consistente. para configurar un replica-set debemos tener mínimo 3 nodos. si un nodo primario deja de tener disponibilidad tendremos más replicas en los demás nodos, por lo que podremos sustituir el nodo principal por otro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.783,
                                            "Frase": "un replica-set tiene la función de realizar de copias de los shards para de esta forma tener un servicio disponible y consistente. para configurar un replica-set debemos tener mínimo 3 nodos. si un nodo primario deja de tener disponibilidad tendremos más replicas en los demás nodos, por lo que podremos sustituir el nodo principal por otro. la principal diferencia entre mongodump y replica-set es que mongodump realiza copias de seguridad periódicas mientras que los replica-set se realizan cuando se modifica la información de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.859,
                                            "Frase": "un replica-set tiene la función de realizar de copias de los shards para de esta forma tener un servicio disponible y consistente. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.858,
                                            "Frase": "un replica-set tiene la función de realizar de copias de los shards para de esta forma tener un servicio disponible y consistente. para configurar un replica-set debemos tener mínimo 3 nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "un replica-set tiene la función de realizar de copias de los shards para de esta forma tener un servicio disponible y consistente. para configurar un replica-set debemos tener mínimo 3 nodos. si un nodo primario deja de tener disponibilidad tendremos más replicas en los demás nodos, por lo que podremos sustituir el nodo principal por otro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "un replica-set tiene la función de realizar de copias de los shards para de esta forma tener un servicio disponible y consistente. para configurar un replica-set debemos tener mínimo 3 nodos. si un nodo primario deja de tener disponibilidad tendremos más replicas en los demás nodos, por lo que podremos sustituir el nodo principal por otro. la principal diferencia entre mongodump y replica-set es que mongodump realiza copias de seguridad periódicas mientras que los replica-set se realizan cuando se modifica la información de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "la principal diferencia entre mongodump y replica-set es que mongodump realiza copias de seguridad periódicas mientras que los replica-set se realizan cuando se modifica la información de la base de datos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "si un nodo primario deja de tener disponibilidad tendremos más replicas en los demás nodos, por lo que podremos sustituir el nodo principal por otro. la principal diferencia entre mongodump y replica-set es que mongodump realiza copias de seguridad periódicas mientras que los replica-set se realizan cuando se modifica la información de la base de datos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "para configurar un replica-set debemos tener mínimo 3 nodos. si un nodo primario deja de tener disponibilidad tendremos más replicas en los demás nodos, por lo que podremos sustituir el nodo principal por otro. la principal diferencia entre mongodump y replica-set es que mongodump realiza copias de seguridad periódicas mientras que los replica-set se realizan cuando se modifica la información de la base de datos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "un replica-set tiene la función de realizar de copias de los shards para de esta forma tener un servicio disponible y consistente. para configurar un replica-set debemos tener mínimo 3 nodos. si un nodo primario deja de tener disponibilidad tendremos más replicas en los demás nodos, por lo que podremos sustituir el nodo principal por otro. la principal diferencia entre mongodump y replica-set es que mongodump realiza copias de seguridad periódicas mientras que los replica-set se realizan cuando se modifica la información de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "un replica-set tiene la función de realizar de copias de los shards para de esta forma tener un servicio disponible y consistente. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "un replica-set tiene la función de realizar de copias de los shards para de esta forma tener un servicio disponible y consistente. para configurar un replica-set debemos tener mínimo 3 nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "un replica-set tiene la función de realizar de copias de los shards para de esta forma tener un servicio disponible y consistente. para configurar un replica-set debemos tener mínimo 3 nodos. si un nodo primario deja de tener disponibilidad tendremos más replicas en los demás nodos, por lo que podremos sustituir el nodo principal por otro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "un replica-set tiene la función de realizar de copias de los shards para de esta forma tener un servicio disponible y consistente. para configurar un replica-set debemos tener mínimo 3 nodos. si un nodo primario deja de tener disponibilidad tendremos más replicas en los demás nodos, por lo que podremos sustituir el nodo principal por otro. la principal diferencia entre mongodump y replica-set es que mongodump realiza copias de seguridad periódicas mientras que los replica-set se realizan cuando se modifica la información de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "64128cc76e7db51256e042661fff77cb": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "replica set se trata de una arquitectura de sistemas pensada para mongodb que tiene como fin mejorar el rendimiento y robustez del sistema, convirtiéndose en un sistema de alta disponibilidad. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. la diferencia con mongodump es que mientras este crea copias de seguridad y las restaura en caso de fallo (perdiendo los datos desde la última copia), replica-set se levanta en unos minutos con la información actualizada. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. la diferencia con mongodump es que mientras este crea copias de seguridad y las restaura en caso de fallo (perdiendo los datos desde la última copia), replica-set se levanta en unos minutos con la información actualizada. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.855,
                                            "Frase": "se basa en un sistema maestro esclavo donde un nodo maestro va comunicando los cambios a su conjunto de nodos esclavos, manteniendo varias instancias actualizadas al mismo tiempo y pudiendo leer los datos de cualquiera de ellas, lo que nos permite un balanceo de carga (las escrituras se realizan a través del maestro). en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. la diferencia con mongodump es que mientras este crea copias de seguridad y las restaura en caso de fallo (perdiendo los datos desde la última copia), replica-set se levanta en unos minutos con la información actualizada. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.867,
                                            "Frase": "replica set se trata de una arquitectura de sistemas pensada para mongodb que tiene como fin mejorar el rendimiento y robustez del sistema, convirtiéndose en un sistema de alta disponibilidad. se basa en un sistema maestro esclavo donde un nodo maestro va comunicando los cambios a su conjunto de nodos esclavos, manteniendo varias instancias actualizadas al mismo tiempo y pudiendo leer los datos de cualquiera de ellas, lo que nos permite un balanceo de carga (las escrituras se realizan a través del maestro). en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. la diferencia con mongodump es que mientras este crea copias de seguridad y las restaura en caso de fallo (perdiendo los datos desde la última copia), replica-set se levanta en unos minutos con la información actualizada. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.852,
                                            "Frase": "en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.847,
                                            "Frase": "en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. la diferencia con mongodump es que mientras este crea copias de seguridad y las restaura en caso de fallo (perdiendo los datos desde la última copia), replica-set se levanta en unos minutos con la información actualizada. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.836,
                                            "Frase": "replica set se trata de una arquitectura de sistemas pensada para mongodb que tiene como fin mejorar el rendimiento y robustez del sistema, convirtiéndose en un sistema de alta disponibilidad. se basa en un sistema maestro esclavo donde un nodo maestro va comunicando los cambios a su conjunto de nodos esclavos, manteniendo varias instancias actualizadas al mismo tiempo y pudiendo leer los datos de cualquiera de ellas, lo que nos permite un balanceo de carga (las escrituras se realizan a través del maestro). en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.826,
                                            "Frase": "replica set se trata de una arquitectura de sistemas pensada para mongodb que tiene como fin mejorar el rendimiento y robustez del sistema, convirtiéndose en un sistema de alta disponibilidad. se basa en un sistema maestro esclavo donde un nodo maestro va comunicando los cambios a su conjunto de nodos esclavos, manteniendo varias instancias actualizadas al mismo tiempo y pudiendo leer los datos de cualquiera de ellas, lo que nos permite un balanceo de carga (las escrituras se realizan a través del maestro). en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. la diferencia con mongodump es que mientras este crea copias de seguridad y las restaura en caso de fallo (perdiendo los datos desde la última copia), replica-set se levanta en unos minutos con la información actualizada. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "se basa en un sistema maestro esclavo donde un nodo maestro va comunicando los cambios a su conjunto de nodos esclavos, manteniendo varias instancias actualizadas al mismo tiempo y pudiendo leer los datos de cualquiera de ellas, lo que nos permite un balanceo de carga (las escrituras se realizan a través del maestro). en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "replica set se trata de una arquitectura de sistemas pensada para mongodb que tiene como fin mejorar el rendimiento y robustez del sistema, convirtiéndose en un sistema de alta disponibilidad. se basa en un sistema maestro esclavo donde un nodo maestro va comunicando los cambios a su conjunto de nodos esclavos, manteniendo varias instancias actualizadas al mismo tiempo y pudiendo leer los datos de cualquiera de ellas, lo que nos permite un balanceo de carga (las escrituras se realizan a través del maestro). en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "replica set se trata de una arquitectura de sistemas pensada para mongodb que tiene como fin mejorar el rendimiento y robustez del sistema, convirtiéndose en un sistema de alta disponibilidad. se basa en un sistema maestro esclavo donde un nodo maestro va comunicando los cambios a su conjunto de nodos esclavos, manteniendo varias instancias actualizadas al mismo tiempo y pudiendo leer los datos de cualquiera de ellas, lo que nos permite un balanceo de carga (las escrituras se realizan a través del maestro). en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. la diferencia con mongodump es que mientras este crea copias de seguridad y las restaura en caso de fallo (perdiendo los datos desde la última copia), replica-set se levanta en unos minutos con la información actualizada. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "la diferencia con mongodump es que mientras este crea copias de seguridad y las restaura en caso de fallo (perdiendo los datos desde la última copia), replica-set se levanta en unos minutos con la información actualizada. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. la diferencia con mongodump es que mientras este crea copias de seguridad y las restaura en caso de fallo (perdiendo los datos desde la última copia), replica-set se levanta en unos minutos con la información actualizada. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. la diferencia con mongodump es que mientras este crea copias de seguridad y las restaura en caso de fallo (perdiendo los datos desde la última copia), replica-set se levanta en unos minutos con la información actualizada. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "se basa en un sistema maestro esclavo donde un nodo maestro va comunicando los cambios a su conjunto de nodos esclavos, manteniendo varias instancias actualizadas al mismo tiempo y pudiendo leer los datos de cualquiera de ellas, lo que nos permite un balanceo de carga (las escrituras se realizan a través del maestro). en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. la diferencia con mongodump es que mientras este crea copias de seguridad y las restaura en caso de fallo (perdiendo los datos desde la última copia), replica-set se levanta en unos minutos con la información actualizada. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "replica set se trata de una arquitectura de sistemas pensada para mongodb que tiene como fin mejorar el rendimiento y robustez del sistema, convirtiéndose en un sistema de alta disponibilidad. se basa en un sistema maestro esclavo donde un nodo maestro va comunicando los cambios a su conjunto de nodos esclavos, manteniendo varias instancias actualizadas al mismo tiempo y pudiendo leer los datos de cualquiera de ellas, lo que nos permite un balanceo de carga (las escrituras se realizan a través del maestro). en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. la diferencia con mongodump es que mientras este crea copias de seguridad y las restaura en caso de fallo (perdiendo los datos desde la última copia), replica-set se levanta en unos minutos con la información actualizada. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "replica set se trata de una arquitectura de sistemas pensada para mongodb que tiene como fin mejorar el rendimiento y robustez del sistema, convirtiéndose en un sistema de alta disponibilidad. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. la diferencia con mongodump es que mientras este crea copias de seguridad y las restaura en caso de fallo (perdiendo los datos desde la última copia), replica-set se levanta en unos minutos con la información actualizada. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.966,
                                            "Frase": "en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. la diferencia con mongodump es que mientras este crea copias de seguridad y las restaura en caso de fallo (perdiendo los datos desde la última copia), replica-set se levanta en unos minutos con la información actualizada. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "se basa en un sistema maestro esclavo donde un nodo maestro va comunicando los cambios a su conjunto de nodos esclavos, manteniendo varias instancias actualizadas al mismo tiempo y pudiendo leer los datos de cualquiera de ellas, lo que nos permite un balanceo de carga (las escrituras se realizan a través del maestro). en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. la diferencia con mongodump es que mientras este crea copias de seguridad y las restaura en caso de fallo (perdiendo los datos desde la última copia), replica-set se levanta en unos minutos con la información actualizada. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.96,
                                            "Frase": "replica set se trata de una arquitectura de sistemas pensada para mongodb que tiene como fin mejorar el rendimiento y robustez del sistema, convirtiéndose en un sistema de alta disponibilidad. se basa en un sistema maestro esclavo donde un nodo maestro va comunicando los cambios a su conjunto de nodos esclavos, manteniendo varias instancias actualizadas al mismo tiempo y pudiendo leer los datos de cualquiera de ellas, lo que nos permite un balanceo de carga (las escrituras se realizan a través del maestro). en caso de fallo del maestro, el resto de nodos elegirían un nuevo maestro mediante un sistema de votos. en cuanto a las diferentes configuraciones la mínima sería aquella en la que existe un único nodo maestro y un nodo esclavo, mientras que la más típica sería un maestro, un esclavo y un árbitro, este último únicamente tiene la función de participar en la votación de un nuevo nodo maestro en caso de caída del sistema, es decir no contiene datos. la diferencia con mongodump es que mientras este crea copias de seguridad y las restaura en caso de fallo (perdiendo los datos desde la última copia), replica-set se levanta en unos minutos con la información actualizada. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "4f0da78d71f8c741ac8add282a1d1a77": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. el punto fuerte de esta configuración es que la copia de seguridad se actualiza en el secundario según ocurren las operaciones, mientras que otros métodos de respaldo como el comando mongodump sólo generan una copia de seguridad puntual, es decir, con los datos que haya en el momento de correr el comando. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.892,
                                            "Frase": "la arquitectura replica-set es un refinamiento de mongodb del modelo maestro-esclavo, en el que una instancia maestra recibe las operaciones y las replica en la instancia esclava. este modelo permite que haya respaldo de los datos, es decir, que existan copias de restauración que se actualicen dinámicamente según ocurren las operaciones para poder recuperar los datos en caso de fallo. en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "la arquitectura replica-set es un refinamiento de mongodb del modelo maestro-esclavo, en el que una instancia maestra recibe las operaciones y las replica en la instancia esclava. este modelo permite que haya respaldo de los datos, es decir, que existan copias de restauración que se actualicen dinámicamente según ocurren las operaciones para poder recuperar los datos en caso de fallo. en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. el punto fuerte de esta configuración es que la copia de seguridad se actualiza en el secundario según ocurren las operaciones, mientras que otros métodos de respaldo como el comando mongodump sólo generan una copia de seguridad puntual, es decir, con los datos que haya en el momento de correr el comando. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.823,
                                            "Frase": "en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.808,
                                            "Frase": "el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.827,
                                            "Frase": "en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.811,
                                            "Frase": "en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.808,
                                            "Frase": "en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. el punto fuerte de esta configuración es que la copia de seguridad se actualiza en el secundario según ocurren las operaciones, mientras que otros métodos de respaldo como el comando mongodump sólo generan una copia de seguridad puntual, es decir, con los datos que haya en el momento de correr el comando. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.789,
                                            "Frase": "la arquitectura replica-set es un refinamiento de mongodb del modelo maestro-esclavo, en el que una instancia maestra recibe las operaciones y las replica en la instancia esclava. este modelo permite que haya respaldo de los datos, es decir, que existan copias de restauración que se actualicen dinámicamente según ocurren las operaciones para poder recuperar los datos en caso de fallo. en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.79,
                                            "Frase": "la arquitectura replica-set es un refinamiento de mongodb del modelo maestro-esclavo, en el que una instancia maestra recibe las operaciones y las replica en la instancia esclava. este modelo permite que haya respaldo de los datos, es decir, que existan copias de restauración que se actualicen dinámicamente según ocurren las operaciones para poder recuperar los datos en caso de fallo. en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. el punto fuerte de esta configuración es que la copia de seguridad se actualiza en el secundario según ocurren las operaciones, mientras que otros métodos de respaldo como el comando mongodump sólo generan una copia de seguridad puntual, es decir, con los datos que haya en el momento de correr el comando. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "el punto fuerte de esta configuración es que la copia de seguridad se actualiza en el secundario según ocurren las operaciones, mientras que otros métodos de respaldo como el comando mongodump sólo generan una copia de seguridad puntual, es decir, con los datos que haya en el momento de correr el comando. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. el punto fuerte de esta configuración es que la copia de seguridad se actualiza en el secundario según ocurren las operaciones, mientras que otros métodos de respaldo como el comando mongodump sólo generan una copia de seguridad puntual, es decir, con los datos que haya en el momento de correr el comando. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. el punto fuerte de esta configuración es que la copia de seguridad se actualiza en el secundario según ocurren las operaciones, mientras que otros métodos de respaldo como el comando mongodump sólo generan una copia de seguridad puntual, es decir, con los datos que haya en el momento de correr el comando. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. el punto fuerte de esta configuración es que la copia de seguridad se actualiza en el secundario según ocurren las operaciones, mientras que otros métodos de respaldo como el comando mongodump sólo generan una copia de seguridad puntual, es decir, con los datos que haya en el momento de correr el comando. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "este modelo permite que haya respaldo de los datos, es decir, que existan copias de restauración que se actualicen dinámicamente según ocurren las operaciones para poder recuperar los datos en caso de fallo. en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. el punto fuerte de esta configuración es que la copia de seguridad se actualiza en el secundario según ocurren las operaciones, mientras que otros métodos de respaldo como el comando mongodump sólo generan una copia de seguridad puntual, es decir, con los datos que haya en el momento de correr el comando. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "la arquitectura replica-set es un refinamiento de mongodb del modelo maestro-esclavo, en el que una instancia maestra recibe las operaciones y las replica en la instancia esclava. este modelo permite que haya respaldo de los datos, es decir, que existan copias de restauración que se actualicen dinámicamente según ocurren las operaciones para poder recuperar los datos en caso de fallo. en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. el punto fuerte de esta configuración es que la copia de seguridad se actualiza en el secundario según ocurren las operaciones, mientras que otros métodos de respaldo como el comando mongodump sólo generan una copia de seguridad puntual, es decir, con los datos que haya en el momento de correr el comando. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "el punto fuerte de esta configuración es que la copia de seguridad se actualiza en el secundario según ocurren las operaciones, mientras que otros métodos de respaldo como el comando mongodump sólo generan una copia de seguridad puntual, es decir, con los datos que haya en el momento de correr el comando. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "este modelo permite que haya respaldo de los datos, es decir, que existan copias de restauración que se actualicen dinámicamente según ocurren las operaciones para poder recuperar los datos en caso de fallo. en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "la arquitectura replica-set es un refinamiento de mongodb del modelo maestro-esclavo, en el que una instancia maestra recibe las operaciones y las replica en la instancia esclava. este modelo permite que haya respaldo de los datos, es decir, que existan copias de restauración que se actualicen dinámicamente según ocurren las operaciones para poder recuperar los datos en caso de fallo. en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "la arquitectura replica-set es un refinamiento de mongodb del modelo maestro-esclavo, en el que una instancia maestra recibe las operaciones y las replica en la instancia esclava. este modelo permite que haya respaldo de los datos, es decir, que existan copias de restauración que se actualicen dinámicamente según ocurren las operaciones para poder recuperar los datos en caso de fallo. en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "la arquitectura replica-set es un refinamiento de mongodb del modelo maestro-esclavo, en el que una instancia maestra recibe las operaciones y las replica en la instancia esclava. este modelo permite que haya respaldo de los datos, es decir, que existan copias de restauración que se actualicen dinámicamente según ocurren las operaciones para poder recuperar los datos en caso de fallo. en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "la arquitectura replica-set es un refinamiento de mongodb del modelo maestro-esclavo, en el que una instancia maestra recibe las operaciones y las replica en la instancia esclava. este modelo permite que haya respaldo de los datos, es decir, que existan copias de restauración que se actualicen dinámicamente según ocurren las operaciones para poder recuperar los datos en caso de fallo. en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "la arquitectura replica-set es un refinamiento de mongodb del modelo maestro-esclavo, en el que una instancia maestra recibe las operaciones y las replica en la instancia esclava. este modelo permite que haya respaldo de los datos, es decir, que existan copias de restauración que se actualicen dinámicamente según ocurren las operaciones para poder recuperar los datos en caso de fallo. en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. el punto fuerte de esta configuración es que la copia de seguridad se actualiza en el secundario según ocurren las operaciones, mientras que otros métodos de respaldo como el comando mongodump sólo generan una copia de seguridad puntual, es decir, con los datos que haya en el momento de correr el comando. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "el punto fuerte de esta configuración es que la copia de seguridad se actualiza en el secundario según ocurren las operaciones, mientras que otros métodos de respaldo como el comando mongodump sólo generan una copia de seguridad puntual, es decir, con los datos que haya en el momento de correr el comando. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.958,
                                            "Frase": "es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. el punto fuerte de esta configuración es que la copia de seguridad se actualiza en el secundario según ocurren las operaciones, mientras que otros métodos de respaldo como el comando mongodump sólo generan una copia de seguridad puntual, es decir, con los datos que haya en el momento de correr el comando. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.963,
                                            "Frase": "en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.962,
                                            "Frase": "la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. el punto fuerte de esta configuración es que la copia de seguridad se actualiza en el secundario según ocurren las operaciones, mientras que otros métodos de respaldo como el comando mongodump sólo generan una copia de seguridad puntual, es decir, con los datos que haya en el momento de correr el comando. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.968,
                                            "Frase": "en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. el punto fuerte de esta configuración es que la copia de seguridad se actualiza en el secundario según ocurren las operaciones, mientras que otros métodos de respaldo como el comando mongodump sólo generan una copia de seguridad puntual, es decir, con los datos que haya en el momento de correr el comando. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.96,
                                            "Frase": "la arquitectura replica-set es un refinamiento de mongodb del modelo maestro-esclavo, en el que una instancia maestra recibe las operaciones y las replica en la instancia esclava. este modelo permite que haya respaldo de los datos, es decir, que existan copias de restauración que se actualicen dinámicamente según ocurren las operaciones para poder recuperar los datos en caso de fallo. en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.964,
                                            "Frase": "la arquitectura replica-set es un refinamiento de mongodb del modelo maestro-esclavo, en el que una instancia maestra recibe las operaciones y las replica en la instancia esclava. este modelo permite que haya respaldo de los datos, es decir, que existan copias de restauración que se actualicen dinámicamente según ocurren las operaciones para poder recuperar los datos en caso de fallo. en el caso del replica-set, la configuración mínima es de tres instancias: una primaria, una secundaria y una árbitro. la primaria recibirá las operaciones y las transmitirá al resto de instancias secundarias. el nodo árbitro sólo tendrá poderes de voto (no almacena datos) para elegir un nuevo primario en caso de que el actual falle. es decir, ante fallo de la instancia principal, una de las secundarias (sin retraso en la actualización y no oculta) tomará el rol de primaria tras unas elecciones. el punto fuerte de esta configuración es que la copia de seguridad se actualiza en el secundario según ocurren las operaciones, mientras que otros métodos de respaldo como el comando mongodump sólo generan una copia de seguridad puntual, es decir, con los datos que haya en el momento de correr el comando. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "95e5332c0b0732e0e37f20f0367e8c15": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. los nodos se configuran, como nodo primario, nodo secundario y nodo arbitro. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.877,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. los nodos se configuran, como nodo primario, nodo secundario y nodo arbitro. en caso de que el nodo primario caiga, el nodo secundario lo sustituye, en caso de que se hayan desplegado más de un nodo como secundario el nodo arbitro es quien decide que nodo secundario sustituye al primario en caso de que este se caiga. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. los nodos se configuran, como nodo primario, nodo secundario y nodo arbitro. en caso de que el nodo primario caiga, el nodo secundario lo sustituye, en caso de que se hayan desplegado más de un nodo como secundario el nodo arbitro es quien decide que nodo secundario sustituye al primario en caso de que este se caiga. la principal diferencia con mongodump, es que mongodump copia la base de datos en un momento determinado o con la periodicidad que se configure, pero replica set mantiene en todo momento la información redundada en varios nodos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.822,
                                            "Frase": "esta arquitectura requiere de un mínimo de tres nodos o réplicas. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.843,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.756,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.757,
                                            "Frase": "esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. los nodos se configuran, como nodo primario, nodo secundario y nodo arbitro. en caso de que el nodo primario caiga, el nodo secundario lo sustituye, en caso de que se hayan desplegado más de un nodo como secundario el nodo arbitro es quien decide que nodo secundario sustituye al primario en caso de que este se caiga. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.789,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. los nodos se configuran, como nodo primario, nodo secundario y nodo arbitro. en caso de que el nodo primario caiga, el nodo secundario lo sustituye, en caso de que se hayan desplegado más de un nodo como secundario el nodo arbitro es quien decide que nodo secundario sustituye al primario en caso de que este se caiga. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.782,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. los nodos se configuran, como nodo primario, nodo secundario y nodo arbitro. en caso de que el nodo primario caiga, el nodo secundario lo sustituye, en caso de que se hayan desplegado más de un nodo como secundario el nodo arbitro es quien decide que nodo secundario sustituye al primario en caso de que este se caiga. la principal diferencia con mongodump, es que mongodump copia la base de datos en un momento determinado o con la periodicidad que se configure, pero replica set mantiene en todo momento la información redundada en varios nodos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "en caso de que el nodo primario caiga, el nodo secundario lo sustituye, en caso de que se hayan desplegado más de un nodo como secundario el nodo arbitro es quien decide que nodo secundario sustituye al primario en caso de que este se caiga. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "en caso de que el nodo primario caiga, el nodo secundario lo sustituye, en caso de que se hayan desplegado más de un nodo como secundario el nodo arbitro es quien decide que nodo secundario sustituye al primario en caso de que este se caiga. la principal diferencia con mongodump, es que mongodump copia la base de datos en un momento determinado o con la periodicidad que se configure, pero replica set mantiene en todo momento la información redundada en varios nodos. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. los nodos se configuran, como nodo primario, nodo secundario y nodo arbitro. en caso de que el nodo primario caiga, el nodo secundario lo sustituye, en caso de que se hayan desplegado más de un nodo como secundario el nodo arbitro es quien decide que nodo secundario sustituye al primario en caso de que este se caiga. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. los nodos se configuran, como nodo primario, nodo secundario y nodo arbitro. en caso de que el nodo primario caiga, el nodo secundario lo sustituye, en caso de que se hayan desplegado más de un nodo como secundario el nodo arbitro es quien decide que nodo secundario sustituye al primario en caso de que este se caiga. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. los nodos se configuran, como nodo primario, nodo secundario y nodo arbitro. en caso de que el nodo primario caiga, el nodo secundario lo sustituye, en caso de que se hayan desplegado más de un nodo como secundario el nodo arbitro es quien decide que nodo secundario sustituye al primario en caso de que este se caiga. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. los nodos se configuran, como nodo primario, nodo secundario y nodo arbitro. en caso de que el nodo primario caiga, el nodo secundario lo sustituye, en caso de que se hayan desplegado más de un nodo como secundario el nodo arbitro es quien decide que nodo secundario sustituye al primario en caso de que este se caiga. la principal diferencia con mongodump, es que mongodump copia la base de datos en un momento determinado o con la periodicidad que se configure, pero replica set mantiene en todo momento la información redundada en varios nodos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "la principal diferencia con mongodump, es que mongodump copia la base de datos en un momento determinado o con la periodicidad que se configure, pero replica set mantiene en todo momento la información redundada en varios nodos. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. los nodos se configuran, como nodo primario, nodo secundario y nodo arbitro. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. los nodos se configuran, como nodo primario, nodo secundario y nodo arbitro. en caso de que el nodo primario caiga, el nodo secundario lo sustituye, en caso de que se hayan desplegado más de un nodo como secundario el nodo arbitro es quien decide que nodo secundario sustituye al primario en caso de que este se caiga. la principal diferencia con mongodump, es que mongodump copia la base de datos en un momento determinado o con la periodicidad que se configure, pero replica set mantiene en todo momento la información redundada en varios nodos. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. los nodos se configuran, como nodo primario, nodo secundario y nodo arbitro. en caso de que el nodo primario caiga, el nodo secundario lo sustituye, en caso de que se hayan desplegado más de un nodo como secundario el nodo arbitro es quien decide que nodo secundario sustituye al primario en caso de que este se caiga. la principal diferencia con mongodump, es que mongodump copia la base de datos en un momento determinado o con la periodicidad que se configure, pero replica set mantiene en todo momento la información redundada en varios nodos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. los nodos se configuran, como nodo primario, nodo secundario y nodo arbitro. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. los nodos se configuran, como nodo primario, nodo secundario y nodo arbitro. en caso de que el nodo primario caiga, el nodo secundario lo sustituye, en caso de que se hayan desplegado más de un nodo como secundario el nodo arbitro es quien decide que nodo secundario sustituye al primario en caso de que este se caiga. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "la arquitectura de replica-set en mongodb, es una configuración que permite mongodb y que es compatible con el sharding (base de datos en máquinas distribuidas). esta arquitectura requiere de un mínimo de tres nodos o réplicas. que los datos de cada nodo estén replicados ayudará a aumentar la disponibilidad de la información y de redundancia de la información en caso de fallo de uno de los nodos. los nodos se configuran, como nodo primario, nodo secundario y nodo arbitro. en caso de que el nodo primario caiga, el nodo secundario lo sustituye, en caso de que se hayan desplegado más de un nodo como secundario el nodo arbitro es quien decide que nodo secundario sustituye al primario en caso de que este se caiga. la principal diferencia con mongodump, es que mongodump copia la base de datos en un momento determinado o con la periodicidad que se configure, pero replica set mantiene en todo momento la información redundada en varios nodos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "74dec6fac4e75042bbbc30f2a652ca27": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "un replica set permite tener disponibilidad de la información de las bases de datos de mongo ante fallos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.87,
                                            "Frase": "la principal diferencia con mongodump es que este toma una instantánea en el momento (único) de la(s) base(s) de datos de mongo  a diferencia de la replica-set que replica los datos entre el nodo primario y secundario en todo momento  además esta se recomienda para entornos productivos. mongodump es recomendable sólo para entornos de desarrollo- integración debido a que  puede no funcionar bien mientras se están haciendo operaciones en la base de datos, esto es muy difícil de controla en producción. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "un replica set permite tener disponibilidad de la información de las bases de datos de mongo ante fallos. se requieren cómo mínimo 3 nodos, se recomienda tener un nodo primario, uno secundario y un arbitro que decide quien es el nodo primario (desempata votos de nodos secundarios) en caso de fallo. la principal diferencia con mongodump es que este toma una instantánea en el momento (único) de la(s) base(s) de datos de mongo  a diferencia de la replica-set que replica los datos entre el nodo primario y secundario en todo momento  además esta se recomienda para entornos productivos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.875,
                                            "Frase": "un replica set permite tener disponibilidad de la información de las bases de datos de mongo ante fallos. se requieren cómo mínimo 3 nodos, se recomienda tener un nodo primario, uno secundario y un arbitro que decide quien es el nodo primario (desempata votos de nodos secundarios) en caso de fallo. la principal diferencia con mongodump es que este toma una instantánea en el momento (único) de la(s) base(s) de datos de mongo  a diferencia de la replica-set que replica los datos entre el nodo primario y secundario en todo momento  además esta se recomienda para entornos productivos. mongodump es recomendable sólo para entornos de desarrollo- integración debido a que  puede no funcionar bien mientras se están haciendo operaciones en la base de datos, esto es muy difícil de controla en producción. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.765,
                                            "Frase": "la principal diferencia con mongodump es que este toma una instantánea en el momento (único) de la(s) base(s) de datos de mongo  a diferencia de la replica-set que replica los datos entre el nodo primario y secundario en todo momento  además esta se recomienda para entornos productivos. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.829,
                                            "Frase": "un replica set permite tener disponibilidad de la información de las bases de datos de mongo ante fallos. se requieren cómo mínimo 3 nodos, se recomienda tener un nodo primario, uno secundario y un arbitro que decide quien es el nodo primario (desempata votos de nodos secundarios) en caso de fallo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.814,
                                            "Frase": "un replica set permite tener disponibilidad de la información de las bases de datos de mongo ante fallos. se requieren cómo mínimo 3 nodos, se recomienda tener un nodo primario, uno secundario y un arbitro que decide quien es el nodo primario (desempata votos de nodos secundarios) en caso de fallo. la principal diferencia con mongodump es que este toma una instantánea en el momento (único) de la(s) base(s) de datos de mongo  a diferencia de la replica-set que replica los datos entre el nodo primario y secundario en todo momento  además esta se recomienda para entornos productivos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.793,
                                            "Frase": "un replica set permite tener disponibilidad de la información de las bases de datos de mongo ante fallos. se requieren cómo mínimo 3 nodos, se recomienda tener un nodo primario, uno secundario y un arbitro que decide quien es el nodo primario (desempata votos de nodos secundarios) en caso de fallo. la principal diferencia con mongodump es que este toma una instantánea en el momento (único) de la(s) base(s) de datos de mongo  a diferencia de la replica-set que replica los datos entre el nodo primario y secundario en todo momento  además esta se recomienda para entornos productivos. mongodump es recomendable sólo para entornos de desarrollo- integración debido a que  puede no funcionar bien mientras se están haciendo operaciones en la base de datos, esto es muy difícil de controla en producción. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "la principal diferencia con mongodump es que este toma una instantánea en el momento (único) de la(s) base(s) de datos de mongo  a diferencia de la replica-set que replica los datos entre el nodo primario y secundario en todo momento  además esta se recomienda para entornos productivos. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "un replica set permite tener disponibilidad de la información de las bases de datos de mongo ante fallos. se requieren cómo mínimo 3 nodos, se recomienda tener un nodo primario, uno secundario y un arbitro que decide quien es el nodo primario (desempata votos de nodos secundarios) en caso de fallo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "un replica set permite tener disponibilidad de la información de las bases de datos de mongo ante fallos. se requieren cómo mínimo 3 nodos, se recomienda tener un nodo primario, uno secundario y un arbitro que decide quien es el nodo primario (desempata votos de nodos secundarios) en caso de fallo. la principal diferencia con mongodump es que este toma una instantánea en el momento (único) de la(s) base(s) de datos de mongo  a diferencia de la replica-set que replica los datos entre el nodo primario y secundario en todo momento  además esta se recomienda para entornos productivos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "un replica set permite tener disponibilidad de la información de las bases de datos de mongo ante fallos. se requieren cómo mínimo 3 nodos, se recomienda tener un nodo primario, uno secundario y un arbitro que decide quien es el nodo primario (desempata votos de nodos secundarios) en caso de fallo. la principal diferencia con mongodump es que este toma una instantánea en el momento (único) de la(s) base(s) de datos de mongo  a diferencia de la replica-set que replica los datos entre el nodo primario y secundario en todo momento  además esta se recomienda para entornos productivos. mongodump es recomendable sólo para entornos de desarrollo- integración debido a que  puede no funcionar bien mientras se están haciendo operaciones en la base de datos, esto es muy difícil de controla en producción. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "la principal diferencia con mongodump es que este toma una instantánea en el momento (único) de la(s) base(s) de datos de mongo  a diferencia de la replica-set que replica los datos entre el nodo primario y secundario en todo momento  además esta se recomienda para entornos productivos. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "la principal diferencia con mongodump es que este toma una instantánea en el momento (único) de la(s) base(s) de datos de mongo  a diferencia de la replica-set que replica los datos entre el nodo primario y secundario en todo momento  además esta se recomienda para entornos productivos. mongodump es recomendable sólo para entornos de desarrollo- integración debido a que  puede no funcionar bien mientras se están haciendo operaciones en la base de datos, esto es muy difícil de controla en producción. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "se requieren cómo mínimo 3 nodos, se recomienda tener un nodo primario, uno secundario y un arbitro que decide quien es el nodo primario (desempata votos de nodos secundarios) en caso de fallo. la principal diferencia con mongodump es que este toma una instantánea en el momento (único) de la(s) base(s) de datos de mongo  a diferencia de la replica-set que replica los datos entre el nodo primario y secundario en todo momento  además esta se recomienda para entornos productivos. mongodump es recomendable sólo para entornos de desarrollo- integración debido a que  puede no funcionar bien mientras se están haciendo operaciones en la base de datos, esto es muy difícil de controla en producción. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "un replica set permite tener disponibilidad de la información de las bases de datos de mongo ante fallos. se requieren cómo mínimo 3 nodos, se recomienda tener un nodo primario, uno secundario y un arbitro que decide quien es el nodo primario (desempata votos de nodos secundarios) en caso de fallo. la principal diferencia con mongodump es que este toma una instantánea en el momento (único) de la(s) base(s) de datos de mongo  a diferencia de la replica-set que replica los datos entre el nodo primario y secundario en todo momento  además esta se recomienda para entornos productivos. mongodump es recomendable sólo para entornos de desarrollo- integración debido a que  puede no funcionar bien mientras se están haciendo operaciones en la base de datos, esto es muy difícil de controla en producción. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "la principal diferencia con mongodump es que este toma una instantánea en el momento (único) de la(s) base(s) de datos de mongo  a diferencia de la replica-set que replica los datos entre el nodo primario y secundario en todo momento  además esta se recomienda para entornos productivos. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "un replica set permite tener disponibilidad de la información de las bases de datos de mongo ante fallos. se requieren cómo mínimo 3 nodos, se recomienda tener un nodo primario, uno secundario y un arbitro que decide quien es el nodo primario (desempata votos de nodos secundarios) en caso de fallo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "un replica set permite tener disponibilidad de la información de las bases de datos de mongo ante fallos. se requieren cómo mínimo 3 nodos, se recomienda tener un nodo primario, uno secundario y un arbitro que decide quien es el nodo primario (desempata votos de nodos secundarios) en caso de fallo. la principal diferencia con mongodump es que este toma una instantánea en el momento (único) de la(s) base(s) de datos de mongo  a diferencia de la replica-set que replica los datos entre el nodo primario y secundario en todo momento  además esta se recomienda para entornos productivos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "un replica set permite tener disponibilidad de la información de las bases de datos de mongo ante fallos. se requieren cómo mínimo 3 nodos, se recomienda tener un nodo primario, uno secundario y un arbitro que decide quien es el nodo primario (desempata votos de nodos secundarios) en caso de fallo. la principal diferencia con mongodump es que este toma una instantánea en el momento (único) de la(s) base(s) de datos de mongo  a diferencia de la replica-set que replica los datos entre el nodo primario y secundario en todo momento  además esta se recomienda para entornos productivos. mongodump es recomendable sólo para entornos de desarrollo- integración debido a que  puede no funcionar bien mientras se están haciendo operaciones en la base de datos, esto es muy difícil de controla en producción. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "00f519bb9a67b464ecab71f3b57fe021": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "replica-set brinda una alta disponibilidad, realizando una replica o copia de la base de datos casi en tiempo real en otro nodo (dispositivo, servidor, cluster,etc),se necesitan un mínimo de dos nodos para utilizar esta arquitectura, teniendo un nodo primario y uno secundario, cuando el nodo primario deja de tener disponibilidad, un nodo secundario toma el lugar de este y se mantendrá como primario hasta que este no tenga disponibilidad, su principal diferencia con mongodump es que replica set mantiene una replica o copia de lo que se tiene en la primera base de datos o nodo primario caso contrario mongodump nos sirve para tener una copia de la base de datos en ciertos periodos de tiempo, por ejemplo una copia de la base de datos  al finalizar cada día, no nos asegura la disponibilidad que nos asegura replica-set. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.776,
                                            "Frase": "replica-set brinda una alta disponibilidad, realizando una replica o copia de la base de datos casi en tiempo real en otro nodo (dispositivo, servidor, cluster,etc),se necesitan un mínimo de dos nodos para utilizar esta arquitectura, teniendo un nodo primario y uno secundario, cuando el nodo primario deja de tener disponibilidad, un nodo secundario toma el lugar de este y se mantendrá como primario hasta que este no tenga disponibilidad, su principal diferencia con mongodump es que replica set mantiene una replica o copia de lo que se tiene en la primera base de datos o nodo primario caso contrario mongodump nos sirve para tener una copia de la base de datos en ciertos periodos de tiempo, por ejemplo una copia de la base de datos  al finalizar cada día, no nos asegura la disponibilidad que nos asegura replica-set. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "replica-set brinda una alta disponibilidad, realizando una replica o copia de la base de datos casi en tiempo real en otro nodo (dispositivo, servidor, cluster,etc),se necesitan un mínimo de dos nodos para utilizar esta arquitectura, teniendo un nodo primario y uno secundario, cuando el nodo primario deja de tener disponibilidad, un nodo secundario toma el lugar de este y se mantendrá como primario hasta que este no tenga disponibilidad, su principal diferencia con mongodump es que replica set mantiene una replica o copia de lo que se tiene en la primera base de datos o nodo primario caso contrario mongodump nos sirve para tener una copia de la base de datos en ciertos periodos de tiempo, por ejemplo una copia de la base de datos  al finalizar cada día, no nos asegura la disponibilidad que nos asegura replica-set. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "replica-set brinda una alta disponibilidad, realizando una replica o copia de la base de datos casi en tiempo real en otro nodo (dispositivo, servidor, cluster,etc),se necesitan un mínimo de dos nodos para utilizar esta arquitectura, teniendo un nodo primario y uno secundario, cuando el nodo primario deja de tener disponibilidad, un nodo secundario toma el lugar de este y se mantendrá como primario hasta que este no tenga disponibilidad, su principal diferencia con mongodump es que replica set mantiene una replica o copia de lo que se tiene en la primera base de datos o nodo primario caso contrario mongodump nos sirve para tener una copia de la base de datos en ciertos periodos de tiempo, por ejemplo una copia de la base de datos  al finalizar cada día, no nos asegura la disponibilidad que nos asegura replica-set. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "replica-set brinda una alta disponibilidad, realizando una replica o copia de la base de datos casi en tiempo real en otro nodo (dispositivo, servidor, cluster,etc),se necesitan un mínimo de dos nodos para utilizar esta arquitectura, teniendo un nodo primario y uno secundario, cuando el nodo primario deja de tener disponibilidad, un nodo secundario toma el lugar de este y se mantendrá como primario hasta que este no tenga disponibilidad, su principal diferencia con mongodump es que replica set mantiene una replica o copia de lo que se tiene en la primera base de datos o nodo primario caso contrario mongodump nos sirve para tener una copia de la base de datos en ciertos periodos de tiempo, por ejemplo una copia de la base de datos  al finalizar cada día, no nos asegura la disponibilidad que nos asegura replica-set. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.5,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "0bfec56634f5a93b60bd6d91cc142755": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.841,
                                            "Frase": "una arquitectura replica-set está compuesta por mínimo 3 nodos (primario, secundario y arbitro) los cuales están encargados de brindar alta disponibilidad a las bases de datos atreves de replicación de la data. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.816,
                                            "Frase": "para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. la gran diferencia que se tiene con mongodump es que esta realizar un respaldo de seguridad dentro de la misma maquina local mientras que el replica set, siendo una mejoría el tradicional master-slave, replica la data en 3 nodos diferente otorgándole mejor resiliencia a fallos. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "una arquitectura replica-set está compuesta por mínimo 3 nodos (primario, secundario y arbitro) los cuales están encargados de brindar alta disponibilidad a las bases de datos atreves de replicación de la data. el nodo primario es quien recibe todas las escrituras/lecturas y esta se las envía a los nodos secundarios para que ellos se puedan continuar la operación en caso que el primario falle. el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.826,
                                            "Frase": "una arquitectura replica-set está compuesta por mínimo 3 nodos (primario, secundario y arbitro) los cuales están encargados de brindar alta disponibilidad a las bases de datos atreves de replicación de la data. el nodo primario es quien recibe todas las escrituras/lecturas y esta se las envía a los nodos secundarios para que ellos se puedan continuar la operación en caso que el primario falle. el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.852,
                                            "Frase": "una arquitectura replica-set está compuesta por mínimo 3 nodos (primario, secundario y arbitro) los cuales están encargados de brindar alta disponibilidad a las bases de datos atreves de replicación de la data. el nodo primario es quien recibe todas las escrituras/lecturas y esta se las envía a los nodos secundarios para que ellos se puedan continuar la operación en caso que el primario falle. el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. la gran diferencia que se tiene con mongodump es que esta realizar un respaldo de seguridad dentro de la misma maquina local mientras que el replica set, siendo una mejoría el tradicional master-slave, replica la data en 3 nodos diferente otorgándole mejor resiliencia a fallos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.833,
                                            "Frase": "el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.751,
                                            "Frase": "el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.782,
                                            "Frase": "el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. la gran diferencia que se tiene con mongodump es que esta realizar un respaldo de seguridad dentro de la misma maquina local mientras que el replica set, siendo una mejoría el tradicional master-slave, replica la data en 3 nodos diferente otorgándole mejor resiliencia a fallos. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.734,
                                            "Frase": "el nodo primario es quien recibe todas las escrituras/lecturas y esta se las envía a los nodos secundarios para que ellos se puedan continuar la operación en caso que el primario falle. el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. la gran diferencia que se tiene con mongodump es que esta realizar un respaldo de seguridad dentro de la misma maquina local mientras que el replica set, siendo una mejoría el tradicional master-slave, replica la data en 3 nodos diferente otorgándole mejor resiliencia a fallos. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.74,
                                            "Frase": "una arquitectura replica-set está compuesta por mínimo 3 nodos (primario, secundario y arbitro) los cuales están encargados de brindar alta disponibilidad a las bases de datos atreves de replicación de la data. el nodo primario es quien recibe todas las escrituras/lecturas y esta se las envía a los nodos secundarios para que ellos se puedan continuar la operación en caso que el primario falle. el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. la gran diferencia que se tiene con mongodump es que esta realizar un respaldo de seguridad dentro de la misma maquina local mientras que el replica set, siendo una mejoría el tradicional master-slave, replica la data en 3 nodos diferente otorgándole mejor resiliencia a fallos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.962,
                                            "Frase": "el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "el nodo primario es quien recibe todas las escrituras/lecturas y esta se las envía a los nodos secundarios para que ellos se puedan continuar la operación en caso que el primario falle. el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. la gran diferencia que se tiene con mongodump es que esta realizar un respaldo de seguridad dentro de la misma maquina local mientras que el replica set, siendo una mejoría el tradicional master-slave, replica la data en 3 nodos diferente otorgándole mejor resiliencia a fallos. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "el nodo primario es quien recibe todas las escrituras/lecturas y esta se las envía a los nodos secundarios para que ellos se puedan continuar la operación en caso que el primario falle. el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. la gran diferencia que se tiene con mongodump es que esta realizar un respaldo de seguridad dentro de la misma maquina local mientras que el replica set, siendo una mejoría el tradicional master-slave, replica la data en 3 nodos diferente otorgándole mejor resiliencia a fallos. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "una arquitectura replica-set está compuesta por mínimo 3 nodos (primario, secundario y arbitro) los cuales están encargados de brindar alta disponibilidad a las bases de datos atreves de replicación de la data. el nodo primario es quien recibe todas las escrituras/lecturas y esta se las envía a los nodos secundarios para que ellos se puedan continuar la operación en caso que el primario falle. el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. la gran diferencia que se tiene con mongodump es que esta realizar un respaldo de seguridad dentro de la misma maquina local mientras que el replica set, siendo una mejoría el tradicional master-slave, replica la data en 3 nodos diferente otorgándole mejor resiliencia a fallos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "la gran diferencia que se tiene con mongodump es que esta realizar un respaldo de seguridad dentro de la misma maquina local mientras que el replica set, siendo una mejoría el tradicional master-slave, replica la data en 3 nodos diferente otorgándole mejor resiliencia a fallos. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. la gran diferencia que se tiene con mongodump es que esta realizar un respaldo de seguridad dentro de la misma maquina local mientras que el replica set, siendo una mejoría el tradicional master-slave, replica la data en 3 nodos diferente otorgándole mejor resiliencia a fallos. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. la gran diferencia que se tiene con mongodump es que esta realizar un respaldo de seguridad dentro de la misma maquina local mientras que el replica set, siendo una mejoría el tradicional master-slave, replica la data en 3 nodos diferente otorgándole mejor resiliencia a fallos. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "el nodo primario es quien recibe todas las escrituras/lecturas y esta se las envía a los nodos secundarios para que ellos se puedan continuar la operación en caso que el primario falle. el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. la gran diferencia que se tiene con mongodump es que esta realizar un respaldo de seguridad dentro de la misma maquina local mientras que el replica set, siendo una mejoría el tradicional master-slave, replica la data en 3 nodos diferente otorgándole mejor resiliencia a fallos. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "una arquitectura replica-set está compuesta por mínimo 3 nodos (primario, secundario y arbitro) los cuales están encargados de brindar alta disponibilidad a las bases de datos atreves de replicación de la data. el nodo primario es quien recibe todas las escrituras/lecturas y esta se las envía a los nodos secundarios para que ellos se puedan continuar la operación en caso que el primario falle. el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. la gran diferencia que se tiene con mongodump es que esta realizar un respaldo de seguridad dentro de la misma maquina local mientras que el replica set, siendo una mejoría el tradicional master-slave, replica la data en 3 nodos diferente otorgándole mejor resiliencia a fallos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. la gran diferencia que se tiene con mongodump es que esta realizar un respaldo de seguridad dentro de la misma maquina local mientras que el replica set, siendo una mejoría el tradicional master-slave, replica la data en 3 nodos diferente otorgándole mejor resiliencia a fallos. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "el nodo primario es quien recibe todas las escrituras/lecturas y esta se las envía a los nodos secundarios para que ellos se puedan continuar la operación en caso que el primario falle. el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. la gran diferencia que se tiene con mongodump es que esta realizar un respaldo de seguridad dentro de la misma maquina local mientras que el replica set, siendo una mejoría el tradicional master-slave, replica la data en 3 nodos diferente otorgándole mejor resiliencia a fallos. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "una arquitectura replica-set está compuesta por mínimo 3 nodos (primario, secundario y arbitro) los cuales están encargados de brindar alta disponibilidad a las bases de datos atreves de replicación de la data. el nodo primario es quien recibe todas las escrituras/lecturas y esta se las envía a los nodos secundarios para que ellos se puedan continuar la operación en caso que el primario falle. el trabajo del árbitro es ascender un nodo secundario a primario, en caso de que el primario falle, después de una etapa de votación entre los nodos. para que los nodos sepan que todos están activos, se realizan heartbeats (pings) constantes. la gran diferencia que se tiene con mongodump es que esta realizar un respaldo de seguridad dentro de la misma maquina local mientras que el replica set, siendo una mejoría el tradicional master-slave, replica la data en 3 nodos diferente otorgándole mejor resiliencia a fallos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "3f29a2e9a8d86cf4cf9e7d0d529f6da7": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.849,
                                            "Frase": "mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. ",
                                            "Lineas": "Line 11"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. ",
                                            "Lineas": "Lines 11 - 12"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 11 - 13"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.852,
                                            "Frase": "la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 10 - 13"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.821,
                                            "Frase": "las tareas de lectura también se pueden llevar a cabo sobre los nodos secundarios, siempre y cuando estos no estén definidos como nodos ocultos, en cuyo caso sólo aportarán respaldo. la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 9 - 13"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.822,
                                            "Frase": "asimismo, se pueden establecer órdenes de prioridad a los nodos para ser elegidos y/u otorgarle un mayor número de votos. las tareas de lectura también se pueden llevar a cabo sobre los nodos secundarios, siempre y cuando estos no estén definidos como nodos ocultos, en cuyo caso sólo aportarán respaldo. la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 8 - 13"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.827,
                                            "Frase": "para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. asimismo, se pueden establecer órdenes de prioridad a los nodos para ser elegidos y/u otorgarle un mayor número de votos. las tareas de lectura también se pueden llevar a cabo sobre los nodos secundarios, siempre y cuando estos no estén definidos como nodos ocultos, en cuyo caso sólo aportarán respaldo. la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 7 - 13"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.82,
                                            "Frase": "cuando el nodo primario falla los nodos secundarios votan para elegir cuál debe ser el nuevo nodo primario. para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. asimismo, se pueden establecer órdenes de prioridad a los nodos para ser elegidos y/u otorgarle un mayor número de votos. las tareas de lectura también se pueden llevar a cabo sobre los nodos secundarios, siempre y cuando estos no estén definidos como nodos ocultos, en cuyo caso sólo aportarán respaldo. la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 6 - 13"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.825,
                                            "Frase": "además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Line 13"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.78,
                                            "Frase": "en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 12 - 13"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.798,
                                            "Frase": "mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 11 - 13"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.762,
                                            "Frase": "la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 10 - 13"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.716,
                                            "Frase": "las tareas de lectura también se pueden llevar a cabo sobre los nodos secundarios, siempre y cuando estos no estén definidos como nodos ocultos, en cuyo caso sólo aportarán respaldo. la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 9 - 13"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.723,
                                            "Frase": "cuando el nodo primario falla los nodos secundarios votan para elegir cuál debe ser el nuevo nodo primario. para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. asimismo, se pueden establecer órdenes de prioridad a los nodos para ser elegidos y/u otorgarle un mayor número de votos. las tareas de lectura también se pueden llevar a cabo sobre los nodos secundarios, siempre y cuando estos no estén definidos como nodos ocultos, en cuyo caso sólo aportarán respaldo. la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. ",
                                            "Lineas": "Lines 6 - 11"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.737,
                                            "Frase": "una arquitectura en replica-set da respaldo y disponibilidad. sigue el modelo maestro esclavo, pero en este caso, consiste en un nodo primario, que actuará como maestro, y, al menos, dos nodos secundarios. cuando se realizan procesos de escritura se contactará con el nodo primario y, de forma automática, se reproducirá en los nodos secundarios, consiguiendo así la replicabilidad de nuestros datos. todos los nodos que forman parte del replica-set, se envían una señal (heart-beat) cada 3 segundos para poder saber qué nodos se encuentran funcionando. si se produce un fallo del nodo primario uno de los nodos secundarios pasará a ser primario de forma automática y transparente al progamador. cuando el nodo primario falla los nodos secundarios votan para elegir cuál debe ser el nuevo nodo primario. para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.743,
                                            "Frase": "cuando el nodo primario falla los nodos secundarios votan para elegir cuál debe ser el nuevo nodo primario. para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. asimismo, se pueden establecer órdenes de prioridad a los nodos para ser elegidos y/u otorgarle un mayor número de votos. las tareas de lectura también se pueden llevar a cabo sobre los nodos secundarios, siempre y cuando estos no estén definidos como nodos ocultos, en cuyo caso sólo aportarán respaldo. la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 6 - 13"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "cuando el nodo primario falla los nodos secundarios votan para elegir cuál debe ser el nuevo nodo primario. para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "cuando el nodo primario falla los nodos secundarios votan para elegir cuál debe ser el nuevo nodo primario. para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. asimismo, se pueden establecer órdenes de prioridad a los nodos para ser elegidos y/u otorgarle un mayor número de votos. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "si se produce un fallo del nodo primario uno de los nodos secundarios pasará a ser primario de forma automática y transparente al progamador. cuando el nodo primario falla los nodos secundarios votan para elegir cuál debe ser el nuevo nodo primario. para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. asimismo, se pueden establecer órdenes de prioridad a los nodos para ser elegidos y/u otorgarle un mayor número de votos. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "sigue el modelo maestro esclavo, pero en este caso, consiste en un nodo primario, que actuará como maestro, y, al menos, dos nodos secundarios. cuando se realizan procesos de escritura se contactará con el nodo primario y, de forma automática, se reproducirá en los nodos secundarios, consiguiendo así la replicabilidad de nuestros datos. todos los nodos que forman parte del replica-set, se envían una señal (heart-beat) cada 3 segundos para poder saber qué nodos se encuentran funcionando. si se produce un fallo del nodo primario uno de los nodos secundarios pasará a ser primario de forma automática y transparente al progamador. cuando el nodo primario falla los nodos secundarios votan para elegir cuál debe ser el nuevo nodo primario. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "sigue el modelo maestro esclavo, pero en este caso, consiste en un nodo primario, que actuará como maestro, y, al menos, dos nodos secundarios. cuando se realizan procesos de escritura se contactará con el nodo primario y, de forma automática, se reproducirá en los nodos secundarios, consiguiendo así la replicabilidad de nuestros datos. todos los nodos que forman parte del replica-set, se envían una señal (heart-beat) cada 3 segundos para poder saber qué nodos se encuentran funcionando. si se produce un fallo del nodo primario uno de los nodos secundarios pasará a ser primario de forma automática y transparente al progamador. cuando el nodo primario falla los nodos secundarios votan para elegir cuál debe ser el nuevo nodo primario. para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "una arquitectura en replica-set da respaldo y disponibilidad. sigue el modelo maestro esclavo, pero en este caso, consiste en un nodo primario, que actuará como maestro, y, al menos, dos nodos secundarios. cuando se realizan procesos de escritura se contactará con el nodo primario y, de forma automática, se reproducirá en los nodos secundarios, consiguiendo así la replicabilidad de nuestros datos. todos los nodos que forman parte del replica-set, se envían una señal (heart-beat) cada 3 segundos para poder saber qué nodos se encuentran funcionando. si se produce un fallo del nodo primario uno de los nodos secundarios pasará a ser primario de forma automática y transparente al progamador. cuando el nodo primario falla los nodos secundarios votan para elegir cuál debe ser el nuevo nodo primario. para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "una arquitectura en replica-set da respaldo y disponibilidad. sigue el modelo maestro esclavo, pero en este caso, consiste en un nodo primario, que actuará como maestro, y, al menos, dos nodos secundarios. cuando se realizan procesos de escritura se contactará con el nodo primario y, de forma automática, se reproducirá en los nodos secundarios, consiguiendo así la replicabilidad de nuestros datos. todos los nodos que forman parte del replica-set, se envían una señal (heart-beat) cada 3 segundos para poder saber qué nodos se encuentran funcionando. si se produce un fallo del nodo primario uno de los nodos secundarios pasará a ser primario de forma automática y transparente al progamador. cuando el nodo primario falla los nodos secundarios votan para elegir cuál debe ser el nuevo nodo primario. para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. asimismo, se pueden establecer órdenes de prioridad a los nodos para ser elegidos y/u otorgarle un mayor número de votos. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. ",
                                            "Lineas": "Line 11"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. ",
                                            "Lineas": "Lines 10 - 11"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. ",
                                            "Lineas": "Lines 10 - 12"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 10 - 13"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "las tareas de lectura también se pueden llevar a cabo sobre los nodos secundarios, siempre y cuando estos no estén definidos como nodos ocultos, en cuyo caso sólo aportarán respaldo. la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 9 - 13"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "asimismo, se pueden establecer órdenes de prioridad a los nodos para ser elegidos y/u otorgarle un mayor número de votos. las tareas de lectura también se pueden llevar a cabo sobre los nodos secundarios, siempre y cuando estos no estén definidos como nodos ocultos, en cuyo caso sólo aportarán respaldo. la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 8 - 13"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. asimismo, se pueden establecer órdenes de prioridad a los nodos para ser elegidos y/u otorgarle un mayor número de votos. las tareas de lectura también se pueden llevar a cabo sobre los nodos secundarios, siempre y cuando estos no estén definidos como nodos ocultos, en cuyo caso sólo aportarán respaldo. la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 7 - 13"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "cuando el nodo primario falla los nodos secundarios votan para elegir cuál debe ser el nuevo nodo primario. para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. asimismo, se pueden establecer órdenes de prioridad a los nodos para ser elegidos y/u otorgarle un mayor número de votos. las tareas de lectura también se pueden llevar a cabo sobre los nodos secundarios, siempre y cuando estos no estén definidos como nodos ocultos, en cuyo caso sólo aportarán respaldo. la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 6 - 13"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Line 13"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 12 - 13"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 11 - 13"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 10 - 13"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. asimismo, se pueden establecer órdenes de prioridad a los nodos para ser elegidos y/u otorgarle un mayor número de votos. las tareas de lectura también se pueden llevar a cabo sobre los nodos secundarios, siempre y cuando estos no estén definidos como nodos ocultos, en cuyo caso sólo aportarán respaldo. la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. ",
                                            "Lineas": "Lines 7 - 11"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "cuando el nodo primario falla los nodos secundarios votan para elegir cuál debe ser el nuevo nodo primario. para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. asimismo, se pueden establecer órdenes de prioridad a los nodos para ser elegidos y/u otorgarle un mayor número de votos. las tareas de lectura también se pueden llevar a cabo sobre los nodos secundarios, siempre y cuando estos no estén definidos como nodos ocultos, en cuyo caso sólo aportarán respaldo. la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. ",
                                            "Lineas": "Lines 6 - 11"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. asimismo, se pueden establecer órdenes de prioridad a los nodos para ser elegidos y/u otorgarle un mayor número de votos. las tareas de lectura también se pueden llevar a cabo sobre los nodos secundarios, siempre y cuando estos no estén definidos como nodos ocultos, en cuyo caso sólo aportarán respaldo. la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 7 - 13"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "cuando el nodo primario falla los nodos secundarios votan para elegir cuál debe ser el nuevo nodo primario. para evitar empates existe un tipo de nodo denominado árbitro, que se encargará de decidir cuál será el nodo primario. asimismo, se pueden establecer órdenes de prioridad a los nodos para ser elegidos y/u otorgarle un mayor número de votos. las tareas de lectura también se pueden llevar a cabo sobre los nodos secundarios, siempre y cuando estos no estén definidos como nodos ocultos, en cuyo caso sólo aportarán respaldo. la principal diferencia de este proceso con mongodump se encuentra principalmente en que si ocurre algún fallo no podremos tener acceso a los datos de forma automática, es decir, no tendríamos alta disponibilidad. mongodump realiza una copia de una bbdd o una colección o un subconjunto de una colección y la guarda, por defecto, en la carpeta dump. en caso de fallo y querer acceder de nuevo a esos documentos deberemos utilizar mongorestore. además, se trata de una copia efectuada en un momento determinado y no de actualizaciones instantáneas (o con un retraso pequeño) como ocurre con los replica-set. ",
                                            "Lineas": "Lines 6 - 13"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "3c1130e8d29cae8abb5a455841b1e32f": {
                      "minipregunta0": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta1": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta2": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta3": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "respuesta_completa": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      }
           },
           "98ac09b2c9328574afbefc706ab79ec2": {
                      "minipregunta0": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta1": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta2": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta3": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "respuesta_completa": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      }
           },
           "4a03731e5be2b527de3a20d589889d05": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. \tel nodo secundario recibe y replica la información enviada por el nodo primario y además, realizan una votación para elegir nodo primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. \tel nodo secundario recibe y replica la información enviada por el nodo primario y además, realizan una votación para elegir nodo primario. \tel nodo árbitro desempata las votaciones. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.869,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. \tel nodo secundario recibe y replica la información enviada por el nodo primario y además, realizan una votación para elegir nodo primario. \tel nodo árbitro desempata las votaciones. la recuperación automática se realiza mediante un pulso que envían todos los nodos cada 2 segundos, esto permite detectar cuando un servidor primario se ha caído e inmediatamente los nodos secundarios realizan una votación para elegir el nuevo nodo primario, en caso de empate el nodo árbitro deshará el empate. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.841,
                                            "Frase": "esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.832,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.806,
                                            "Frase": "esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. \tel nodo secundario recibe y replica la información enviada por el nodo primario y además, realizan una votación para elegir nodo primario. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.803,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. \tel nodo secundario recibe y replica la información enviada por el nodo primario y además, realizan una votación para elegir nodo primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.802,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. \tel nodo secundario recibe y replica la información enviada por el nodo primario y además, realizan una votación para elegir nodo primario. \tel nodo árbitro desempata las votaciones. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.798,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. \tel nodo secundario recibe y replica la información enviada por el nodo primario y además, realizan una votación para elegir nodo primario. \tel nodo árbitro desempata las votaciones. la recuperación automática se realiza mediante un pulso que envían todos los nodos cada 2 segundos, esto permite detectar cuando un servidor primario se ha caído e inmediatamente los nodos secundarios realizan una votación para elegir el nuevo nodo primario, en caso de empate el nodo árbitro deshará el empate. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. \tel nodo secundario recibe y replica la información enviada por el nodo primario y además, realizan una votación para elegir nodo primario. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. \tel nodo secundario recibe y replica la información enviada por el nodo primario y además, realizan una votación para elegir nodo primario. \tel nodo árbitro desempata las votaciones. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. \tel nodo secundario recibe y replica la información enviada por el nodo primario y además, realizan una votación para elegir nodo primario. \tel nodo árbitro desempata las votaciones. la recuperación automática se realiza mediante un pulso que envían todos los nodos cada 2 segundos, esto permite detectar cuando un servidor primario se ha caído e inmediatamente los nodos secundarios realizan una votación para elegir el nuevo nodo primario, en caso de empate el nodo árbitro deshará el empate. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. \tel nodo secundario recibe y replica la información enviada por el nodo primario y además, realizan una votación para elegir nodo primario. \tel nodo árbitro desempata las votaciones. la recuperación automática se realiza mediante un pulso que envían todos los nodos cada 2 segundos, esto permite detectar cuando un servidor primario se ha caído e inmediatamente los nodos secundarios realizan una votación para elegir el nuevo nodo primario, en caso de empate el nodo árbitro deshará el empate. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. \tel nodo secundario recibe y replica la información enviada por el nodo primario y además, realizan una votación para elegir nodo primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. \tel nodo secundario recibe y replica la información enviada por el nodo primario y además, realizan una votación para elegir nodo primario. \tel nodo árbitro desempata las votaciones. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. \tel nodo secundario recibe y replica la información enviada por el nodo primario y además, realizan una votación para elegir nodo primario. \tel nodo árbitro desempata las votaciones. la recuperación automática se realiza mediante un pulso que envían todos los nodos cada 2 segundos, esto permite detectar cuando un servidor primario se ha caído e inmediatamente los nodos secundarios realizan una votación para elegir el nuevo nodo primario, en caso de empate el nodo árbitro deshará el empate. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. \tel nodo secundario recibe y replica la información enviada por el nodo primario y además, realizan una votación para elegir nodo primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. \tel nodo secundario recibe y replica la información enviada por el nodo primario y además, realizan una votación para elegir nodo primario. \tel nodo árbitro desempata las votaciones. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "la función replica-set en mongodb es una evolución de la función de respaldo manual que permitía hacer copias mediante mongodump y su restauración mediante mongorestore. esta función permite la realización de copias de respaldo y su restauración de manera automática empleando el esquema master-slave, se necesitan tener al menos tres nodos (máquinas): un nodo primario, un nodo secundario y un nodo árbitro. estas son las funciones de cada nodo: \tel nodo primario recibe la información y la envía a los secundarios para la réplica de información. \tel nodo secundario recibe y replica la información enviada por el nodo primario y además, realizan una votación para elegir nodo primario. \tel nodo árbitro desempata las votaciones. la recuperación automática se realiza mediante un pulso que envían todos los nodos cada 2 segundos, esto permite detectar cuando un servidor primario se ha caído e inmediatamente los nodos secundarios realizan una votación para elegir el nuevo nodo primario, en caso de empate el nodo árbitro deshará el empate. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "6dbbf920d25060b866774ec69c748628": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.873,
                                            "Frase": "la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.874,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. para una configuración adecuada se requieren mínimo 3 nodos: 1 primario y 2 secundarios. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.859,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. para una configuración adecuada se requieren mínimo 3 nodos: 1 primario y 2 secundarios. con mongodump también se pueden replicar los datos y se pueden restaurar con mongorestore, sin embargo, este es un proceso manual; con la configuración replica-set se tiene recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.76,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.719,
                                            "Frase": "los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.724,
                                            "Frase": "la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.737,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.738,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. para una configuración adecuada se requieren mínimo 3 nodos: 1 primario y 2 secundarios. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.731,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. para una configuración adecuada se requieren mínimo 3 nodos: 1 primario y 2 secundarios. con mongodump también se pueden replicar los datos y se pueden restaurar con mongorestore, sin embargo, este es un proceso manual; con la configuración replica-set se tiene recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. para una configuración adecuada se requieren mínimo 3 nodos: 1 primario y 2 secundarios. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.875,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. para una configuración adecuada se requieren mínimo 3 nodos: 1 primario y 2 secundarios. con mongodump también se pueden replicar los datos y se pueden restaurar con mongorestore, sin embargo, este es un proceso manual; con la configuración replica-set se tiene recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. para una configuración adecuada se requieren mínimo 3 nodos: 1 primario y 2 secundarios. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. para una configuración adecuada se requieren mínimo 3 nodos: 1 primario y 2 secundarios. con mongodump también se pueden replicar los datos y se pueden restaurar con mongorestore, sin embargo, este es un proceso manual; con la configuración replica-set se tiene recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. para una configuración adecuada se requieren mínimo 3 nodos: 1 primario y 2 secundarios. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "replica-set en mongodb es un mecanismo por medio del cual se tiene recuperación automática frente a fallos mediante la redundancia de los datos. la idea consiste en tener un nodo primario que va replicando sus datos a los nodos secundarios, los cuales mantendrán en todo momento una copia actualizada de dichos datos para que, en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser del tipo: prioridad 0 (nunca pueden ser primarios), ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura (para la escritura únicamente se usa el nodo primario) aumentando así el rendimiento. para una configuración adecuada se requieren mínimo 3 nodos: 1 primario y 2 secundarios. con mongodump también se pueden replicar los datos y se pueden restaurar con mongorestore, sin embargo, este es un proceso manual; con la configuración replica-set se tiene recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "d53c53e45fe8364078094fe28ec52c6f": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "la principal diferencia con mongo dump es que este último crea una copia de seguridad completa de todas las colecciones de nuestra bbdd y con un replica set estamos replicando automáticamente la información de una colección determinada, especificada por nosotros en los ficheros de configuración de nuestro replica-set. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "una arquitectura replica set en mongo db permite realizar backup de los documentos de una colección determinada con la que estamos trabajando. la principal diferencia con mongo dump es que este último crea una copia de seguridad completa de todas las colecciones de nuestra bbdd y con un replica set estamos replicando automáticamente la información de una colección determinada, especificada por nosotros en los ficheros de configuración de nuestro replica-set. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "una arquitectura replica set en mongo db permite realizar backup de los documentos de una colección determinada con la que estamos trabajando. la principal diferencia con mongo dump es que este último crea una copia de seguridad completa de todas las colecciones de nuestra bbdd y con un replica set estamos replicando automáticamente la información de una colección determinada, especificada por nosotros en los ficheros de configuración de nuestro replica-set. son necesarios tres nodos para una configuración mínima: un nodo primario que decide cuál es la información que se ha de replicar, un nodo secundario que replica la información indicada por el primario y un nodo árbitro es el encargado de decidir qué nodo es primario y cuál es secundario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "una arquitectura replica set en mongo db permite realizar backup de los documentos de una colección determinada con la que estamos trabajando. la principal diferencia con mongo dump es que este último crea una copia de seguridad completa de todas las colecciones de nuestra bbdd y con un replica set estamos replicando automáticamente la información de una colección determinada, especificada por nosotros en los ficheros de configuración de nuestro replica-set. son necesarios tres nodos para una configuración mínima: un nodo primario que decide cuál es la información que se ha de replicar, un nodo secundario que replica la información indicada por el primario y un nodo árbitro es el encargado de decidir qué nodo es primario y cuál es secundario. esta situación ocurre cuando el nodo primario deja de tener disponibilidad: el árbitro observará los nodos existentes y decidirá quien ha de ser el nuevo nodo primario en función de la disponibilidad de la que dispongan. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.833,
                                            "Frase": "son necesarios tres nodos para una configuración mínima: un nodo primario que decide cuál es la información que se ha de replicar, un nodo secundario que replica la información indicada por el primario y un nodo árbitro es el encargado de decidir qué nodo es primario y cuál es secundario. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.851,
                                            "Frase": "la principal diferencia con mongo dump es que este último crea una copia de seguridad completa de todas las colecciones de nuestra bbdd y con un replica set estamos replicando automáticamente la información de una colección determinada, especificada por nosotros en los ficheros de configuración de nuestro replica-set. son necesarios tres nodos para una configuración mínima: un nodo primario que decide cuál es la información que se ha de replicar, un nodo secundario que replica la información indicada por el primario y un nodo árbitro es el encargado de decidir qué nodo es primario y cuál es secundario. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.84,
                                            "Frase": "la principal diferencia con mongo dump es que este último crea una copia de seguridad completa de todas las colecciones de nuestra bbdd y con un replica set estamos replicando automáticamente la información de una colección determinada, especificada por nosotros en los ficheros de configuración de nuestro replica-set. son necesarios tres nodos para una configuración mínima: un nodo primario que decide cuál es la información que se ha de replicar, un nodo secundario que replica la información indicada por el primario y un nodo árbitro es el encargado de decidir qué nodo es primario y cuál es secundario. esta situación ocurre cuando el nodo primario deja de tener disponibilidad: el árbitro observará los nodos existentes y decidirá quien ha de ser el nuevo nodo primario en función de la disponibilidad de la que dispongan. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.827,
                                            "Frase": "una arquitectura replica set en mongo db permite realizar backup de los documentos de una colección determinada con la que estamos trabajando. la principal diferencia con mongo dump es que este último crea una copia de seguridad completa de todas las colecciones de nuestra bbdd y con un replica set estamos replicando automáticamente la información de una colección determinada, especificada por nosotros en los ficheros de configuración de nuestro replica-set. son necesarios tres nodos para una configuración mínima: un nodo primario que decide cuál es la información que se ha de replicar, un nodo secundario que replica la información indicada por el primario y un nodo árbitro es el encargado de decidir qué nodo es primario y cuál es secundario. esta situación ocurre cuando el nodo primario deja de tener disponibilidad: el árbitro observará los nodos existentes y decidirá quien ha de ser el nuevo nodo primario en función de la disponibilidad de la que dispongan. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "esta situación ocurre cuando el nodo primario deja de tener disponibilidad: el árbitro observará los nodos existentes y decidirá quien ha de ser el nuevo nodo primario en función de la disponibilidad de la que dispongan. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "son necesarios tres nodos para una configuración mínima: un nodo primario que decide cuál es la información que se ha de replicar, un nodo secundario que replica la información indicada por el primario y un nodo árbitro es el encargado de decidir qué nodo es primario y cuál es secundario. esta situación ocurre cuando el nodo primario deja de tener disponibilidad: el árbitro observará los nodos existentes y decidirá quien ha de ser el nuevo nodo primario en función de la disponibilidad de la que dispongan. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "la principal diferencia con mongo dump es que este último crea una copia de seguridad completa de todas las colecciones de nuestra bbdd y con un replica set estamos replicando automáticamente la información de una colección determinada, especificada por nosotros en los ficheros de configuración de nuestro replica-set. son necesarios tres nodos para una configuración mínima: un nodo primario que decide cuál es la información que se ha de replicar, un nodo secundario que replica la información indicada por el primario y un nodo árbitro es el encargado de decidir qué nodo es primario y cuál es secundario. esta situación ocurre cuando el nodo primario deja de tener disponibilidad: el árbitro observará los nodos existentes y decidirá quien ha de ser el nuevo nodo primario en función de la disponibilidad de la que dispongan. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "una arquitectura replica set en mongo db permite realizar backup de los documentos de una colección determinada con la que estamos trabajando. la principal diferencia con mongo dump es que este último crea una copia de seguridad completa de todas las colecciones de nuestra bbdd y con un replica set estamos replicando automáticamente la información de una colección determinada, especificada por nosotros en los ficheros de configuración de nuestro replica-set. son necesarios tres nodos para una configuración mínima: un nodo primario que decide cuál es la información que se ha de replicar, un nodo secundario que replica la información indicada por el primario y un nodo árbitro es el encargado de decidir qué nodo es primario y cuál es secundario. esta situación ocurre cuando el nodo primario deja de tener disponibilidad: el árbitro observará los nodos existentes y decidirá quien ha de ser el nuevo nodo primario en función de la disponibilidad de la que dispongan. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "la principal diferencia con mongo dump es que este último crea una copia de seguridad completa de todas las colecciones de nuestra bbdd y con un replica set estamos replicando automáticamente la información de una colección determinada, especificada por nosotros en los ficheros de configuración de nuestro replica-set. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "una arquitectura replica set en mongo db permite realizar backup de los documentos de una colección determinada con la que estamos trabajando. la principal diferencia con mongo dump es que este último crea una copia de seguridad completa de todas las colecciones de nuestra bbdd y con un replica set estamos replicando automáticamente la información de una colección determinada, especificada por nosotros en los ficheros de configuración de nuestro replica-set. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "una arquitectura replica set en mongo db permite realizar backup de los documentos de una colección determinada con la que estamos trabajando. la principal diferencia con mongo dump es que este último crea una copia de seguridad completa de todas las colecciones de nuestra bbdd y con un replica set estamos replicando automáticamente la información de una colección determinada, especificada por nosotros en los ficheros de configuración de nuestro replica-set. son necesarios tres nodos para una configuración mínima: un nodo primario que decide cuál es la información que se ha de replicar, un nodo secundario que replica la información indicada por el primario y un nodo árbitro es el encargado de decidir qué nodo es primario y cuál es secundario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "una arquitectura replica set en mongo db permite realizar backup de los documentos de una colección determinada con la que estamos trabajando. la principal diferencia con mongo dump es que este último crea una copia de seguridad completa de todas las colecciones de nuestra bbdd y con un replica set estamos replicando automáticamente la información de una colección determinada, especificada por nosotros en los ficheros de configuración de nuestro replica-set. son necesarios tres nodos para una configuración mínima: un nodo primario que decide cuál es la información que se ha de replicar, un nodo secundario que replica la información indicada por el primario y un nodo árbitro es el encargado de decidir qué nodo es primario y cuál es secundario. esta situación ocurre cuando el nodo primario deja de tener disponibilidad: el árbitro observará los nodos existentes y decidirá quien ha de ser el nuevo nodo primario en función de la disponibilidad de la que dispongan. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "esta situación ocurre cuando el nodo primario deja de tener disponibilidad: el árbitro observará los nodos existentes y decidirá quien ha de ser el nuevo nodo primario en función de la disponibilidad de la que dispongan. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "la principal diferencia con mongo dump es que este último crea una copia de seguridad completa de todas las colecciones de nuestra bbdd y con un replica set estamos replicando automáticamente la información de una colección determinada, especificada por nosotros en los ficheros de configuración de nuestro replica-set. son necesarios tres nodos para una configuración mínima: un nodo primario que decide cuál es la información que se ha de replicar, un nodo secundario que replica la información indicada por el primario y un nodo árbitro es el encargado de decidir qué nodo es primario y cuál es secundario. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.963,
                                            "Frase": "la principal diferencia con mongo dump es que este último crea una copia de seguridad completa de todas las colecciones de nuestra bbdd y con un replica set estamos replicando automáticamente la información de una colección determinada, especificada por nosotros en los ficheros de configuración de nuestro replica-set. son necesarios tres nodos para una configuración mínima: un nodo primario que decide cuál es la información que se ha de replicar, un nodo secundario que replica la información indicada por el primario y un nodo árbitro es el encargado de decidir qué nodo es primario y cuál es secundario. esta situación ocurre cuando el nodo primario deja de tener disponibilidad: el árbitro observará los nodos existentes y decidirá quien ha de ser el nuevo nodo primario en función de la disponibilidad de la que dispongan. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.963,
                                            "Frase": "una arquitectura replica set en mongo db permite realizar backup de los documentos de una colección determinada con la que estamos trabajando. la principal diferencia con mongo dump es que este último crea una copia de seguridad completa de todas las colecciones de nuestra bbdd y con un replica set estamos replicando automáticamente la información de una colección determinada, especificada por nosotros en los ficheros de configuración de nuestro replica-set. son necesarios tres nodos para una configuración mínima: un nodo primario que decide cuál es la información que se ha de replicar, un nodo secundario que replica la información indicada por el primario y un nodo árbitro es el encargado de decidir qué nodo es primario y cuál es secundario. esta situación ocurre cuando el nodo primario deja de tener disponibilidad: el árbitro observará los nodos existentes y decidirá quien ha de ser el nuevo nodo primario en función de la disponibilidad de la que dispongan. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "5def979393e9473da17fa9d72be3047c": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.76,
                                            "Frase": "cuando se utiliza la arquitectura en replica set en mongodb se realizando un proceso de replicación entre de nodos, es decir, se realiza el proceso de respaldo a otros nodos, para realizar este esquema se debe contar con 3nodos maestro, esclavos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.709,
                                            "Frase": "cuando se utiliza la arquitectura en replica set en mongodb se realizando un proceso de replicación entre de nodos, es decir, se realiza el proceso de respaldo a otros nodos, para realizar este esquema se debe contar con 3nodos maestro, esclavos. existe un árbitro, este último notificará quien debe cuando el nodo principal no se encuentra disponible y deba cambiarse uno que cambiarse a principal. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.679,
                                            "Frase": "cuando se utiliza la arquitectura en replica set en mongodb se realizando un proceso de replicación entre de nodos, es decir, se realiza el proceso de respaldo a otros nodos, para realizar este esquema se debe contar con 3nodos maestro, esclavos. existe un árbitro, este último notificará quien debe cuando el nodo principal no se encuentra disponible y deba cambiarse uno que cambiarse a principal. mongodump lo que nos permite es levantar la base que se tiene de respaldo cuando necesitemos que está entre en funcionamiento porque no se encuentra disponible el principal. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.7,
                                            "Frase": "cuando se utiliza la arquitectura en replica set en mongodb se realizando un proceso de replicación entre de nodos, es decir, se realiza el proceso de respaldo a otros nodos, para realizar este esquema se debe contar con 3nodos maestro, esclavos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.695,
                                            "Frase": "cuando se utiliza la arquitectura en replica set en mongodb se realizando un proceso de replicación entre de nodos, es decir, se realiza el proceso de respaldo a otros nodos, para realizar este esquema se debe contar con 3nodos maestro, esclavos. existe un árbitro, este último notificará quien debe cuando el nodo principal no se encuentra disponible y deba cambiarse uno que cambiarse a principal. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.664,
                                            "Frase": "cuando se utiliza la arquitectura en replica set en mongodb se realizando un proceso de replicación entre de nodos, es decir, se realiza el proceso de respaldo a otros nodos, para realizar este esquema se debe contar con 3nodos maestro, esclavos. existe un árbitro, este último notificará quien debe cuando el nodo principal no se encuentra disponible y deba cambiarse uno que cambiarse a principal. mongodump lo que nos permite es levantar la base que se tiene de respaldo cuando necesitemos que está entre en funcionamiento porque no se encuentra disponible el principal. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.85,
                                            "Frase": "cuando se utiliza la arquitectura en replica set en mongodb se realizando un proceso de replicación entre de nodos, es decir, se realiza el proceso de respaldo a otros nodos, para realizar este esquema se debe contar con 3nodos maestro, esclavos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.865,
                                            "Frase": "cuando se utiliza la arquitectura en replica set en mongodb se realizando un proceso de replicación entre de nodos, es decir, se realiza el proceso de respaldo a otros nodos, para realizar este esquema se debe contar con 3nodos maestro, esclavos. existe un árbitro, este último notificará quien debe cuando el nodo principal no se encuentra disponible y deba cambiarse uno que cambiarse a principal. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.831,
                                            "Frase": "cuando se utiliza la arquitectura en replica set en mongodb se realizando un proceso de replicación entre de nodos, es decir, se realiza el proceso de respaldo a otros nodos, para realizar este esquema se debe contar con 3nodos maestro, esclavos. existe un árbitro, este último notificará quien debe cuando el nodo principal no se encuentra disponible y deba cambiarse uno que cambiarse a principal. mongodump lo que nos permite es levantar la base que se tiene de respaldo cuando necesitemos que está entre en funcionamiento porque no se encuentra disponible el principal. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.86,
                                            "Frase": "cuando se utiliza la arquitectura en replica set en mongodb se realizando un proceso de replicación entre de nodos, es decir, se realiza el proceso de respaldo a otros nodos, para realizar este esquema se debe contar con 3nodos maestro, esclavos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.828,
                                            "Frase": "cuando se utiliza la arquitectura en replica set en mongodb se realizando un proceso de replicación entre de nodos, es decir, se realiza el proceso de respaldo a otros nodos, para realizar este esquema se debe contar con 3nodos maestro, esclavos. existe un árbitro, este último notificará quien debe cuando el nodo principal no se encuentra disponible y deba cambiarse uno que cambiarse a principal. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.831,
                                            "Frase": "cuando se utiliza la arquitectura en replica set en mongodb se realizando un proceso de replicación entre de nodos, es decir, se realiza el proceso de respaldo a otros nodos, para realizar este esquema se debe contar con 3nodos maestro, esclavos. existe un árbitro, este último notificará quien debe cuando el nodo principal no se encuentra disponible y deba cambiarse uno que cambiarse a principal. mongodump lo que nos permite es levantar la base que se tiene de respaldo cuando necesitemos que está entre en funcionamiento porque no se encuentra disponible el principal. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.868,
                                            "Frase": "cuando se utiliza la arquitectura en replica set en mongodb se realizando un proceso de replicación entre de nodos, es decir, se realiza el proceso de respaldo a otros nodos, para realizar este esquema se debe contar con 3nodos maestro, esclavos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "cuando se utiliza la arquitectura en replica set en mongodb se realizando un proceso de replicación entre de nodos, es decir, se realiza el proceso de respaldo a otros nodos, para realizar este esquema se debe contar con 3nodos maestro, esclavos. existe un árbitro, este último notificará quien debe cuando el nodo principal no se encuentra disponible y deba cambiarse uno que cambiarse a principal. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.828,
                                            "Frase": "cuando se utiliza la arquitectura en replica set en mongodb se realizando un proceso de replicación entre de nodos, es decir, se realiza el proceso de respaldo a otros nodos, para realizar este esquema se debe contar con 3nodos maestro, esclavos. existe un árbitro, este último notificará quien debe cuando el nodo principal no se encuentra disponible y deba cambiarse uno que cambiarse a principal. mongodump lo que nos permite es levantar la base que se tiene de respaldo cuando necesitemos que está entre en funcionamiento porque no se encuentra disponible el principal. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.75,
                                 "Umbral 0.4 - 0.8": 0.75,
                                 "Umbral 0.5 - 0.8": 0.75,
                                 "Umbral 0.6 - 0.8": 0.75,
                                 "Umbral 0.7 - 0.8": 0.75,
                                 "Umbral 0.3 - 0.9": 0.5,
                                 "Umbral 0.4 - 0.9": 0.5,
                                 "Umbral 0.5 - 0.9": 0.5,
                                 "Umbral 0.6 - 0.9": 0.5,
                                 "Umbral 0.7 - 0.9": 0.5,
                                 "Umbral 0.8 - 0.9": 0.25,
                                 "Umbral 0.3 - 0.7": 0.875,
                                 "Umbral 0.4 - 0.7": 0.875,
                                 "Umbral 0.5 - 0.7": 0.875,
                                 "Umbral 0.6 - 0.7": 0.875,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "e364b8a8d0183da2d9676d8907b95e55": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. para la configuración mínima de un replica-set es necesario tres nodos, uno primario y dos secundarios, los cuáles se van actualizando. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. para la configuración mínima de un replica-set es necesario tres nodos, uno primario y dos secundarios, los cuáles se van actualizando. en el caso de que el nodo primario dejara de tener disponibilidad, automáticamente se elije uno de los nodos secundarios, siempre que no tenga priority: 0 (este no podrá ser nunca nodo primario, es conocido como árbitro y solo interviene en la elección del nodo primario). ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.892,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. para la configuración mínima de un replica-set es necesario tres nodos, uno primario y dos secundarios, los cuáles se van actualizando. en el caso de que el nodo primario dejara de tener disponibilidad, automáticamente se elije uno de los nodos secundarios, siempre que no tenga priority: 0 (este no podrá ser nunca nodo primario, es conocido como árbitro y solo interviene en la elección del nodo primario). por otro lado, existe una herramienta en mongodb que permite realizar copias de seguridad de las bases de datos, esta es mongodump, y se restaura con mongorestore; pero esto es un proceso manual y no de manera automática como la recuperación del replica-set. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.831,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.802,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.796,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. para la configuración mínima de un replica-set es necesario tres nodos, uno primario y dos secundarios, los cuáles se van actualizando. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.808,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. para la configuración mínima de un replica-set es necesario tres nodos, uno primario y dos secundarios, los cuáles se van actualizando. en el caso de que el nodo primario dejara de tener disponibilidad, automáticamente se elije uno de los nodos secundarios, siempre que no tenga priority: 0 (este no podrá ser nunca nodo primario, es conocido como árbitro y solo interviene en la elección del nodo primario). ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.808,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. para la configuración mínima de un replica-set es necesario tres nodos, uno primario y dos secundarios, los cuáles se van actualizando. en el caso de que el nodo primario dejara de tener disponibilidad, automáticamente se elije uno de los nodos secundarios, siempre que no tenga priority: 0 (este no podrá ser nunca nodo primario, es conocido como árbitro y solo interviene en la elección del nodo primario). por otro lado, existe una herramienta en mongodb que permite realizar copias de seguridad de las bases de datos, esta es mongodump, y se restaura con mongorestore; pero esto es un proceso manual y no de manera automática como la recuperación del replica-set. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "en el caso de que el nodo primario dejara de tener disponibilidad, automáticamente se elije uno de los nodos secundarios, siempre que no tenga priority: 0 (este no podrá ser nunca nodo primario, es conocido como árbitro y solo interviene en la elección del nodo primario). ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "en el caso de que el nodo primario dejara de tener disponibilidad, automáticamente se elije uno de los nodos secundarios, siempre que no tenga priority: 0 (este no podrá ser nunca nodo primario, es conocido como árbitro y solo interviene en la elección del nodo primario). por otro lado, existe una herramienta en mongodb que permite realizar copias de seguridad de las bases de datos, esta es mongodump, y se restaura con mongorestore; pero esto es un proceso manual y no de manera automática como la recuperación del replica-set. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "para la configuración mínima de un replica-set es necesario tres nodos, uno primario y dos secundarios, los cuáles se van actualizando. en el caso de que el nodo primario dejara de tener disponibilidad, automáticamente se elije uno de los nodos secundarios, siempre que no tenga priority: 0 (este no podrá ser nunca nodo primario, es conocido como árbitro y solo interviene en la elección del nodo primario). por otro lado, existe una herramienta en mongodb que permite realizar copias de seguridad de las bases de datos, esta es mongodump, y se restaura con mongorestore; pero esto es un proceso manual y no de manera automática como la recuperación del replica-set. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. para la configuración mínima de un replica-set es necesario tres nodos, uno primario y dos secundarios, los cuáles se van actualizando. en el caso de que el nodo primario dejara de tener disponibilidad, automáticamente se elije uno de los nodos secundarios, siempre que no tenga priority: 0 (este no podrá ser nunca nodo primario, es conocido como árbitro y solo interviene en la elección del nodo primario). por otro lado, existe una herramienta en mongodb que permite realizar copias de seguridad de las bases de datos, esta es mongodump, y se restaura con mongorestore; pero esto es un proceso manual y no de manera automática como la recuperación del replica-set. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. para la configuración mínima de un replica-set es necesario tres nodos, uno primario y dos secundarios, los cuáles se van actualizando. en el caso de que el nodo primario dejara de tener disponibilidad, automáticamente se elije uno de los nodos secundarios, siempre que no tenga priority: 0 (este no podrá ser nunca nodo primario, es conocido como árbitro y solo interviene en la elección del nodo primario). ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. para la configuración mínima de un replica-set es necesario tres nodos, uno primario y dos secundarios, los cuáles se van actualizando. en el caso de que el nodo primario dejara de tener disponibilidad, automáticamente se elije uno de los nodos secundarios, siempre que no tenga priority: 0 (este no podrá ser nunca nodo primario, es conocido como árbitro y solo interviene en la elección del nodo primario). por otro lado, existe una herramienta en mongodb que permite realizar copias de seguridad de las bases de datos, esta es mongodump, y se restaura con mongorestore; pero esto es un proceso manual y no de manera automática como la recuperación del replica-set. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.953,
                                            "Frase": "por otro lado, existe una herramienta en mongodb que permite realizar copias de seguridad de las bases de datos, esta es mongodump, y se restaura con mongorestore; pero esto es un proceso manual y no de manera automática como la recuperación del replica-set. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. para la configuración mínima de un replica-set es necesario tres nodos, uno primario y dos secundarios, los cuáles se van actualizando. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. para la configuración mínima de un replica-set es necesario tres nodos, uno primario y dos secundarios, los cuáles se van actualizando. en el caso de que el nodo primario dejara de tener disponibilidad, automáticamente se elije uno de los nodos secundarios, siempre que no tenga priority: 0 (este no podrá ser nunca nodo primario, es conocido como árbitro y solo interviene en la elección del nodo primario). por otro lado, existe una herramienta en mongodb que permite realizar copias de seguridad de las bases de datos, esta es mongodump, y se restaura con mongorestore; pero esto es un proceso manual y no de manera automática como la recuperación del replica-set. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. para la configuración mínima de un replica-set es necesario tres nodos, uno primario y dos secundarios, los cuáles se van actualizando. en el caso de que el nodo primario dejara de tener disponibilidad, automáticamente se elije uno de los nodos secundarios, siempre que no tenga priority: 0 (este no podrá ser nunca nodo primario, es conocido como árbitro y solo interviene en la elección del nodo primario). por otro lado, existe una herramienta en mongodb que permite realizar copias de seguridad de las bases de datos, esta es mongodump, y se restaura con mongorestore; pero esto es un proceso manual y no de manera automática como la recuperación del replica-set. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "por otro lado, existe una herramienta en mongodb que permite realizar copias de seguridad de las bases de datos, esta es mongodump, y se restaura con mongorestore; pero esto es un proceso manual y no de manera automática como la recuperación del replica-set. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. para la configuración mínima de un replica-set es necesario tres nodos, uno primario y dos secundarios, los cuáles se van actualizando. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.96,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. para la configuración mínima de un replica-set es necesario tres nodos, uno primario y dos secundarios, los cuáles se van actualizando. en el caso de que el nodo primario dejara de tener disponibilidad, automáticamente se elije uno de los nodos secundarios, siempre que no tenga priority: 0 (este no podrá ser nunca nodo primario, es conocido como árbitro y solo interviene en la elección del nodo primario). ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.962,
                                            "Frase": "un replica-set (conjunto de réplicas) es un mecanismo mediante el cuál permite la redundancia y el incremento de la disponibilidad de los datos. además, permite una recuperación a fallos de forma automática, y es una de las formas más recomendadas de implementar replicación de datos en mongodb. este consiste en tener un nodo primario que replica sus datos a los nodos secundarios, manteniendo así una copia actualizada de dichos datos. para la configuración mínima de un replica-set es necesario tres nodos, uno primario y dos secundarios, los cuáles se van actualizando. en el caso de que el nodo primario dejara de tener disponibilidad, automáticamente se elije uno de los nodos secundarios, siempre que no tenga priority: 0 (este no podrá ser nunca nodo primario, es conocido como árbitro y solo interviene en la elección del nodo primario). por otro lado, existe una herramienta en mongodb que permite realizar copias de seguridad de las bases de datos, esta es mongodump, y se restaura con mongorestore; pero esto es un proceso manual y no de manera automática como la recuperación del replica-set. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "8a2ccc5ce40f8759e924ef742a836435": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.899,
                                            "Frase": "la principal diferencia con mongodump es que mongodump realiza una copia de seguridad conectándose a una instancia de mongod o mongos en ejecución, por lo general utiliza el puerto 27017 y la copia de seguridad es alamcenada en /dump. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "la arquitectura replica set es una versión mejorada de la arquitectura maestro esclavo, su principal función como su nombre lo indica es replicar las operaciones realizadas sobre la base de datos para que no exista perdida de información que exista una alta disponibilidad, su principal diferencia es que en la arquitectura replica set el nodo principal es el nodo con mejor disponibilidad. la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.807,
                                            "Frase": "la arquitectura replica set es una versión mejorada de la arquitectura maestro esclavo, su principal función como su nombre lo indica es replicar las operaciones realizadas sobre la base de datos para que no exista perdida de información que exista una alta disponibilidad, su principal diferencia es que en la arquitectura replica set el nodo principal es el nodo con mejor disponibilidad. la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. el nodo principal es el que recepta las órdenes y las ejecuta, el nodo secundario replica todo lo que hace el nodo primario y el nodo árbitro solo es actor al momento de decidir cuál va a ser el nodo principal. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.786,
                                            "Frase": "la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. el nodo principal es el que recepta las órdenes y las ejecuta, el nodo secundario replica todo lo que hace el nodo primario y el nodo árbitro solo es actor al momento de decidir cuál va a ser el nodo principal. si un nodo primario deja de tener disponibilidad, se le asigna al nodo secundario como primario y como toda la información está replicada no existiría ningún problema. la principal diferencia con mongodump es que mongodump realiza una copia de seguridad conectándose a una instancia de mongod o mongos en ejecución, por lo general utiliza el puerto 27017 y la copia de seguridad es alamcenada en /dump. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.825,
                                            "Frase": "la arquitectura replica set es una versión mejorada de la arquitectura maestro esclavo, su principal función como su nombre lo indica es replicar las operaciones realizadas sobre la base de datos para que no exista perdida de información que exista una alta disponibilidad, su principal diferencia es que en la arquitectura replica set el nodo principal es el nodo con mejor disponibilidad. la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. el nodo principal es el que recepta las órdenes y las ejecuta, el nodo secundario replica todo lo que hace el nodo primario y el nodo árbitro solo es actor al momento de decidir cuál va a ser el nodo principal. si un nodo primario deja de tener disponibilidad, se le asigna al nodo secundario como primario y como toda la información está replicada no existiría ningún problema. la principal diferencia con mongodump es que mongodump realiza una copia de seguridad conectándose a una instancia de mongod o mongos en ejecución, por lo general utiliza el puerto 27017 y la copia de seguridad es alamcenada en /dump. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.863,
                                            "Frase": "la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.827,
                                            "Frase": "la arquitectura replica set es una versión mejorada de la arquitectura maestro esclavo, su principal función como su nombre lo indica es replicar las operaciones realizadas sobre la base de datos para que no exista perdida de información que exista una alta disponibilidad, su principal diferencia es que en la arquitectura replica set el nodo principal es el nodo con mejor disponibilidad. la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.815,
                                            "Frase": "la arquitectura replica set es una versión mejorada de la arquitectura maestro esclavo, su principal función como su nombre lo indica es replicar las operaciones realizadas sobre la base de datos para que no exista perdida de información que exista una alta disponibilidad, su principal diferencia es que en la arquitectura replica set el nodo principal es el nodo con mejor disponibilidad. la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. el nodo principal es el que recepta las órdenes y las ejecuta, el nodo secundario replica todo lo que hace el nodo primario y el nodo árbitro solo es actor al momento de decidir cuál va a ser el nodo principal. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.813,
                                            "Frase": "la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. el nodo principal es el que recepta las órdenes y las ejecuta, el nodo secundario replica todo lo que hace el nodo primario y el nodo árbitro solo es actor al momento de decidir cuál va a ser el nodo principal. si un nodo primario deja de tener disponibilidad, se le asigna al nodo secundario como primario y como toda la información está replicada no existiría ningún problema. la principal diferencia con mongodump es que mongodump realiza una copia de seguridad conectándose a una instancia de mongod o mongos en ejecución, por lo general utiliza el puerto 27017 y la copia de seguridad es alamcenada en /dump. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.81,
                                            "Frase": "la arquitectura replica set es una versión mejorada de la arquitectura maestro esclavo, su principal función como su nombre lo indica es replicar las operaciones realizadas sobre la base de datos para que no exista perdida de información que exista una alta disponibilidad, su principal diferencia es que en la arquitectura replica set el nodo principal es el nodo con mejor disponibilidad. la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. el nodo principal es el que recepta las órdenes y las ejecuta, el nodo secundario replica todo lo que hace el nodo primario y el nodo árbitro solo es actor al momento de decidir cuál va a ser el nodo principal. si un nodo primario deja de tener disponibilidad, se le asigna al nodo secundario como primario y como toda la información está replicada no existiría ningún problema. la principal diferencia con mongodump es que mongodump realiza una copia de seguridad conectándose a una instancia de mongod o mongos en ejecución, por lo general utiliza el puerto 27017 y la copia de seguridad es alamcenada en /dump. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.863,
                                            "Frase": "la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. el nodo principal es el que recepta las órdenes y las ejecuta, el nodo secundario replica todo lo que hace el nodo primario y el nodo árbitro solo es actor al momento de decidir cuál va a ser el nodo principal. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "la arquitectura replica set es una versión mejorada de la arquitectura maestro esclavo, su principal función como su nombre lo indica es replicar las operaciones realizadas sobre la base de datos para que no exista perdida de información que exista una alta disponibilidad, su principal diferencia es que en la arquitectura replica set el nodo principal es el nodo con mejor disponibilidad. la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. el nodo principal es el que recepta las órdenes y las ejecuta, el nodo secundario replica todo lo que hace el nodo primario y el nodo árbitro solo es actor al momento de decidir cuál va a ser el nodo principal. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. el nodo principal es el que recepta las órdenes y las ejecuta, el nodo secundario replica todo lo que hace el nodo primario y el nodo árbitro solo es actor al momento de decidir cuál va a ser el nodo principal. si un nodo primario deja de tener disponibilidad, se le asigna al nodo secundario como primario y como toda la información está replicada no existiría ningún problema. la principal diferencia con mongodump es que mongodump realiza una copia de seguridad conectándose a una instancia de mongod o mongos en ejecución, por lo general utiliza el puerto 27017 y la copia de seguridad es alamcenada en /dump. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "la arquitectura replica set es una versión mejorada de la arquitectura maestro esclavo, su principal función como su nombre lo indica es replicar las operaciones realizadas sobre la base de datos para que no exista perdida de información que exista una alta disponibilidad, su principal diferencia es que en la arquitectura replica set el nodo principal es el nodo con mejor disponibilidad. la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. el nodo principal es el que recepta las órdenes y las ejecuta, el nodo secundario replica todo lo que hace el nodo primario y el nodo árbitro solo es actor al momento de decidir cuál va a ser el nodo principal. si un nodo primario deja de tener disponibilidad, se le asigna al nodo secundario como primario y como toda la información está replicada no existiría ningún problema. la principal diferencia con mongodump es que mongodump realiza una copia de seguridad conectándose a una instancia de mongod o mongos en ejecución, por lo general utiliza el puerto 27017 y la copia de seguridad es alamcenada en /dump. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "la principal diferencia con mongodump es que mongodump realiza una copia de seguridad conectándose a una instancia de mongod o mongos en ejecución, por lo general utiliza el puerto 27017 y la copia de seguridad es alamcenada en /dump. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "la arquitectura replica set es una versión mejorada de la arquitectura maestro esclavo, su principal función como su nombre lo indica es replicar las operaciones realizadas sobre la base de datos para que no exista perdida de información que exista una alta disponibilidad, su principal diferencia es que en la arquitectura replica set el nodo principal es el nodo con mejor disponibilidad. la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.855,
                                            "Frase": "la arquitectura replica set es una versión mejorada de la arquitectura maestro esclavo, su principal función como su nombre lo indica es replicar las operaciones realizadas sobre la base de datos para que no exista perdida de información que exista una alta disponibilidad, su principal diferencia es que en la arquitectura replica set el nodo principal es el nodo con mejor disponibilidad. la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. el nodo principal es el que recepta las órdenes y las ejecuta, el nodo secundario replica todo lo que hace el nodo primario y el nodo árbitro solo es actor al momento de decidir cuál va a ser el nodo principal. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "la arquitectura replica set es una versión mejorada de la arquitectura maestro esclavo, su principal función como su nombre lo indica es replicar las operaciones realizadas sobre la base de datos para que no exista perdida de información que exista una alta disponibilidad, su principal diferencia es que en la arquitectura replica set el nodo principal es el nodo con mejor disponibilidad. la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. el nodo principal es el que recepta las órdenes y las ejecuta, el nodo secundario replica todo lo que hace el nodo primario y el nodo árbitro solo es actor al momento de decidir cuál va a ser el nodo principal. si un nodo primario deja de tener disponibilidad, se le asigna al nodo secundario como primario y como toda la información está replicada no existiría ningún problema. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "la arquitectura replica set es una versión mejorada de la arquitectura maestro esclavo, su principal función como su nombre lo indica es replicar las operaciones realizadas sobre la base de datos para que no exista perdida de información que exista una alta disponibilidad, su principal diferencia es que en la arquitectura replica set el nodo principal es el nodo con mejor disponibilidad. la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. el nodo principal es el que recepta las órdenes y las ejecuta, el nodo secundario replica todo lo que hace el nodo primario y el nodo árbitro solo es actor al momento de decidir cuál va a ser el nodo principal. si un nodo primario deja de tener disponibilidad, se le asigna al nodo secundario como primario y como toda la información está replicada no existiría ningún problema. la principal diferencia con mongodump es que mongodump realiza una copia de seguridad conectándose a una instancia de mongod o mongos en ejecución, por lo general utiliza el puerto 27017 y la copia de seguridad es alamcenada en /dump. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "la principal diferencia con mongodump es que mongodump realiza una copia de seguridad conectándose a una instancia de mongod o mongos en ejecución, por lo general utiliza el puerto 27017 y la copia de seguridad es alamcenada en /dump. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "la arquitectura replica set es una versión mejorada de la arquitectura maestro esclavo, su principal función como su nombre lo indica es replicar las operaciones realizadas sobre la base de datos para que no exista perdida de información que exista una alta disponibilidad, su principal diferencia es que en la arquitectura replica set el nodo principal es el nodo con mejor disponibilidad. la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "la arquitectura replica set es una versión mejorada de la arquitectura maestro esclavo, su principal función como su nombre lo indica es replicar las operaciones realizadas sobre la base de datos para que no exista perdida de información que exista una alta disponibilidad, su principal diferencia es que en la arquitectura replica set el nodo principal es el nodo con mejor disponibilidad. la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. el nodo principal es el que recepta las órdenes y las ejecuta, el nodo secundario replica todo lo que hace el nodo primario y el nodo árbitro solo es actor al momento de decidir cuál va a ser el nodo principal. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. el nodo principal es el que recepta las órdenes y las ejecuta, el nodo secundario replica todo lo que hace el nodo primario y el nodo árbitro solo es actor al momento de decidir cuál va a ser el nodo principal. si un nodo primario deja de tener disponibilidad, se le asigna al nodo secundario como primario y como toda la información está replicada no existiría ningún problema. la principal diferencia con mongodump es que mongodump realiza una copia de seguridad conectándose a una instancia de mongod o mongos en ejecución, por lo general utiliza el puerto 27017 y la copia de seguridad es alamcenada en /dump. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "la arquitectura replica set es una versión mejorada de la arquitectura maestro esclavo, su principal función como su nombre lo indica es replicar las operaciones realizadas sobre la base de datos para que no exista perdida de información que exista una alta disponibilidad, su principal diferencia es que en la arquitectura replica set el nodo principal es el nodo con mejor disponibilidad. la configuración mínima consta de 3 nodos: un nodo principal, un nodo secundario y un nodo árbitro, siempre existe comunicación entre los nodos mediante pings. el nodo principal es el que recepta las órdenes y las ejecuta, el nodo secundario replica todo lo que hace el nodo primario y el nodo árbitro solo es actor al momento de decidir cuál va a ser el nodo principal. si un nodo primario deja de tener disponibilidad, se le asigna al nodo secundario como primario y como toda la información está replicada no existiría ningún problema. la principal diferencia con mongodump es que mongodump realiza una copia de seguridad conectándose a una instancia de mongod o mongos en ejecución, por lo general utiliza el puerto 27017 y la copia de seguridad es alamcenada en /dump. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "6c474f1ce11f4c3c4afb5c683a46754c": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.892,
                                            "Frase": "este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. para una configuración adecuada se requieren mínimo 3 nodos: 1 nodo primario, uno secundario y un árbitro. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. para una configuración adecuada se requieren mínimo 3 nodos: 1 nodo primario, uno secundario y un árbitro. mongodb también dispone de mongodump para replicarl os datos y mongorestore para restaurarlos. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "replica-set en mongodb se basa en un mecanismo de recuperación automática frente a fallos mediante la redundancia de los datos. dicho mecanismo se basa en tener un nodo primario que va replicando los datos a los nodos secundarios, los cuáles en todo momento mantendrán una copia actualizada de todos los datos. en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. para una configuración adecuada se requieren mínimo 3 nodos: 1 nodo primario, uno secundario y un árbitro. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.873,
                                            "Frase": "replica-set en mongodb se basa en un mecanismo de recuperación automática frente a fallos mediante la redundancia de los datos. dicho mecanismo se basa en tener un nodo primario que va replicando los datos a los nodos secundarios, los cuáles en todo momento mantendrán una copia actualizada de todos los datos. en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. para una configuración adecuada se requieren mínimo 3 nodos: 1 nodo primario, uno secundario y un árbitro. mongodb también dispone de mongodump para replicarl os datos y mongorestore para restaurarlos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.786,
                                            "Frase": "en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.761,
                                            "Frase": "en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.793,
                                            "Frase": "en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. para una configuración adecuada se requieren mínimo 3 nodos: 1 nodo primario, uno secundario y un árbitro. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.785,
                                            "Frase": "en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. para una configuración adecuada se requieren mínimo 3 nodos: 1 nodo primario, uno secundario y un árbitro. mongodb también dispone de mongodump para replicarl os datos y mongorestore para restaurarlos. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.737,
                                            "Frase": "dicho mecanismo se basa en tener un nodo primario que va replicando los datos a los nodos secundarios, los cuáles en todo momento mantendrán una copia actualizada de todos los datos. en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. para una configuración adecuada se requieren mínimo 3 nodos: 1 nodo primario, uno secundario y un árbitro. mongodb también dispone de mongodump para replicarl os datos y mongorestore para restaurarlos. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.739,
                                            "Frase": "replica-set en mongodb se basa en un mecanismo de recuperación automática frente a fallos mediante la redundancia de los datos. dicho mecanismo se basa en tener un nodo primario que va replicando los datos a los nodos secundarios, los cuáles en todo momento mantendrán una copia actualizada de todos los datos. en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. para una configuración adecuada se requieren mínimo 3 nodos: 1 nodo primario, uno secundario y un árbitro. mongodb también dispone de mongodump para replicarl os datos y mongorestore para restaurarlos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.861,
                                            "Frase": "dicho mecanismo se basa en tener un nodo primario que va replicando los datos a los nodos secundarios, los cuáles en todo momento mantendrán una copia actualizada de todos los datos. en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.869,
                                            "Frase": "replica-set en mongodb se basa en un mecanismo de recuperación automática frente a fallos mediante la redundancia de los datos. dicho mecanismo se basa en tener un nodo primario que va replicando los datos a los nodos secundarios, los cuáles en todo momento mantendrán una copia actualizada de todos los datos. en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.854,
                                            "Frase": "dicho mecanismo se basa en tener un nodo primario que va replicando los datos a los nodos secundarios, los cuáles en todo momento mantendrán una copia actualizada de todos los datos. en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. para una configuración adecuada se requieren mínimo 3 nodos: 1 nodo primario, uno secundario y un árbitro. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.859,
                                            "Frase": "replica-set en mongodb se basa en un mecanismo de recuperación automática frente a fallos mediante la redundancia de los datos. dicho mecanismo se basa en tener un nodo primario que va replicando los datos a los nodos secundarios, los cuáles en todo momento mantendrán una copia actualizada de todos los datos. en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. para una configuración adecuada se requieren mínimo 3 nodos: 1 nodo primario, uno secundario y un árbitro. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.857,
                                            "Frase": "replica-set en mongodb se basa en un mecanismo de recuperación automática frente a fallos mediante la redundancia de los datos. dicho mecanismo se basa en tener un nodo primario que va replicando los datos a los nodos secundarios, los cuáles en todo momento mantendrán una copia actualizada de todos los datos. en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. para una configuración adecuada se requieren mínimo 3 nodos: 1 nodo primario, uno secundario y un árbitro. mongodb también dispone de mongodump para replicarl os datos y mongorestore para restaurarlos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "dicho mecanismo se basa en tener un nodo primario que va replicando los datos a los nodos secundarios, los cuáles en todo momento mantendrán una copia actualizada de todos los datos. en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "replica-set en mongodb se basa en un mecanismo de recuperación automática frente a fallos mediante la redundancia de los datos. dicho mecanismo se basa en tener un nodo primario que va replicando los datos a los nodos secundarios, los cuáles en todo momento mantendrán una copia actualizada de todos los datos. en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "replica-set en mongodb se basa en un mecanismo de recuperación automática frente a fallos mediante la redundancia de los datos. dicho mecanismo se basa en tener un nodo primario que va replicando los datos a los nodos secundarios, los cuáles en todo momento mantendrán una copia actualizada de todos los datos. en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. para una configuración adecuada se requieren mínimo 3 nodos: 1 nodo primario, uno secundario y un árbitro. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "replica-set en mongodb se basa en un mecanismo de recuperación automática frente a fallos mediante la redundancia de los datos. dicho mecanismo se basa en tener un nodo primario que va replicando los datos a los nodos secundarios, los cuáles en todo momento mantendrán una copia actualizada de todos los datos. en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. para una configuración adecuada se requieren mínimo 3 nodos: 1 nodo primario, uno secundario y un árbitro. mongodb también dispone de mongodump para replicarl os datos y mongorestore para restaurarlos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. para una configuración adecuada se requieren mínimo 3 nodos: 1 nodo primario, uno secundario y un árbitro. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. para una configuración adecuada se requieren mínimo 3 nodos: 1 nodo primario, uno secundario y un árbitro. mongodb también dispone de mongodump para replicarl os datos y mongorestore para restaurarlos. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "replica-set en mongodb se basa en un mecanismo de recuperación automática frente a fallos mediante la redundancia de los datos. dicho mecanismo se basa en tener un nodo primario que va replicando los datos a los nodos secundarios, los cuáles en todo momento mantendrán una copia actualizada de todos los datos. en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. para una configuración adecuada se requieren mínimo 3 nodos: 1 nodo primario, uno secundario y un árbitro. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "replica-set en mongodb se basa en un mecanismo de recuperación automática frente a fallos mediante la redundancia de los datos. dicho mecanismo se basa en tener un nodo primario que va replicando los datos a los nodos secundarios, los cuáles en todo momento mantendrán una copia actualizada de todos los datos. en caso de fallo del nodo primario, alguno de los secundarios es elegido como nuevo nodo primario. este mecanismo permite una alta redundancia de los datos y una alta disponibilidad, una arquitectura replica-set nos brinda la ventaja de balancear la carga automáticamente entre los nodos del replica-set. para una configuración adecuada se requieren mínimo 3 nodos: 1 nodo primario, uno secundario y un árbitro. mongodb también dispone de mongodump para replicarl os datos y mongorestore para restaurarlos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "49c77c5e724159e06a73ab4c39dd151f": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "la arquitectura en replica-set de mongodb es un sistema cuya función es incrementar la disponibilidad de los datos mediante la redundancia de los mismos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.87,
                                            "Frase": "la arquitectura en replica-set de mongodb es un sistema cuya función es incrementar la disponibilidad de los datos mediante la redundancia de los mismos. es una arquitectura tipo maestro-esclavo cuya configuración mínima de nodos (replica-sets) es: un primario (maestro), un secundario (esclavo) y un árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.87,
                                            "Frase": "la arquitectura en replica-set de mongodb es un sistema cuya función es incrementar la disponibilidad de los datos mediante la redundancia de los mismos. es una arquitectura tipo maestro-esclavo cuya configuración mínima de nodos (replica-sets) es: un primario (maestro), un secundario (esclavo) y un árbitro. el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "la arquitectura en replica-set de mongodb es un sistema cuya función es incrementar la disponibilidad de los datos mediante la redundancia de los mismos. es una arquitectura tipo maestro-esclavo cuya configuración mínima de nodos (replica-sets) es: un primario (maestro), un secundario (esclavo) y un árbitro. el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "la arquitectura en replica-set de mongodb es un sistema cuya función es incrementar la disponibilidad de los datos mediante la redundancia de los mismos. es una arquitectura tipo maestro-esclavo cuya configuración mínima de nodos (replica-sets) es: un primario (maestro), un secundario (esclavo) y un árbitro. el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "la arquitectura en replica-set de mongodb es un sistema cuya función es incrementar la disponibilidad de los datos mediante la redundancia de los mismos. es una arquitectura tipo maestro-esclavo cuya configuración mínima de nodos (replica-sets) es: un primario (maestro), un secundario (esclavo) y un árbitro. el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. cuando el nodo primario deja de tener disponibilidad, a partir de determinadas configuraciones como son la prioridad y el número de votos de cada nodo, se realiza una votación de los nodos para determinar quién pasa a ser el nodo primario, no pudiendo ser el primario quién posea una prioridad 0 la diferencia con mongodump, es que mongodump realiza una copia de seguridad y la guarda, con lo que esa copia no se irá actualizando como pasa con replica-set. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.825,
                                            "Frase": "finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.871,
                                            "Frase": "la arquitectura en replica-set de mongodb es un sistema cuya función es incrementar la disponibilidad de los datos mediante la redundancia de los mismos. es una arquitectura tipo maestro-esclavo cuya configuración mínima de nodos (replica-sets) es: un primario (maestro), un secundario (esclavo) y un árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "la arquitectura en replica-set de mongodb es un sistema cuya función es incrementar la disponibilidad de los datos mediante la redundancia de los mismos. es una arquitectura tipo maestro-esclavo cuya configuración mínima de nodos (replica-sets) es: un primario (maestro), un secundario (esclavo) y un árbitro. el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "la arquitectura en replica-set de mongodb es un sistema cuya función es incrementar la disponibilidad de los datos mediante la redundancia de los mismos. es una arquitectura tipo maestro-esclavo cuya configuración mínima de nodos (replica-sets) es: un primario (maestro), un secundario (esclavo) y un árbitro. el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "la arquitectura en replica-set de mongodb es un sistema cuya función es incrementar la disponibilidad de los datos mediante la redundancia de los mismos. es una arquitectura tipo maestro-esclavo cuya configuración mínima de nodos (replica-sets) es: un primario (maestro), un secundario (esclavo) y un árbitro. el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.851,
                                            "Frase": "la arquitectura en replica-set de mongodb es un sistema cuya función es incrementar la disponibilidad de los datos mediante la redundancia de los mismos. es una arquitectura tipo maestro-esclavo cuya configuración mínima de nodos (replica-sets) es: un primario (maestro), un secundario (esclavo) y un árbitro. el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. cuando el nodo primario deja de tener disponibilidad, a partir de determinadas configuraciones como son la prioridad y el número de votos de cada nodo, se realiza una votación de los nodos para determinar quién pasa a ser el nodo primario, no pudiendo ser el primario quién posea una prioridad 0 la diferencia con mongodump, es que mongodump realiza una copia de seguridad y la guarda, con lo que esa copia no se irá actualizando como pasa con replica-set. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. cuando el nodo primario deja de tener disponibilidad, a partir de determinadas configuraciones como son la prioridad y el número de votos de cada nodo, se realiza una votación de los nodos para determinar quién pasa a ser el nodo primario, no pudiendo ser el primario quién posea una prioridad 0 la diferencia con mongodump, es que mongodump realiza una copia de seguridad y la guarda, con lo que esa copia no se irá actualizando como pasa con replica-set. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "es una arquitectura tipo maestro-esclavo cuya configuración mínima de nodos (replica-sets) es: un primario (maestro), un secundario (esclavo) y un árbitro. el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. cuando el nodo primario deja de tener disponibilidad, a partir de determinadas configuraciones como son la prioridad y el número de votos de cada nodo, se realiza una votación de los nodos para determinar quién pasa a ser el nodo primario, no pudiendo ser el primario quién posea una prioridad 0 la diferencia con mongodump, es que mongodump realiza una copia de seguridad y la guarda, con lo que esa copia no se irá actualizando como pasa con replica-set. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "la arquitectura en replica-set de mongodb es un sistema cuya función es incrementar la disponibilidad de los datos mediante la redundancia de los mismos. es una arquitectura tipo maestro-esclavo cuya configuración mínima de nodos (replica-sets) es: un primario (maestro), un secundario (esclavo) y un árbitro. el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. cuando el nodo primario deja de tener disponibilidad, a partir de determinadas configuraciones como son la prioridad y el número de votos de cada nodo, se realiza una votación de los nodos para determinar quién pasa a ser el nodo primario, no pudiendo ser el primario quién posea una prioridad 0 la diferencia con mongodump, es que mongodump realiza una copia de seguridad y la guarda, con lo que esa copia no se irá actualizando como pasa con replica-set. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, a partir de determinadas configuraciones como son la prioridad y el número de votos de cada nodo, se realiza una votación de los nodos para determinar quién pasa a ser el nodo primario, no pudiendo ser el primario quién posea una prioridad 0 la diferencia con mongodump, es que mongodump realiza una copia de seguridad y la guarda, con lo que esa copia no se irá actualizando como pasa con replica-set. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. cuando el nodo primario deja de tener disponibilidad, a partir de determinadas configuraciones como son la prioridad y el número de votos de cada nodo, se realiza una votación de los nodos para determinar quién pasa a ser el nodo primario, no pudiendo ser el primario quién posea una prioridad 0 la diferencia con mongodump, es que mongodump realiza una copia de seguridad y la guarda, con lo que esa copia no se irá actualizando como pasa con replica-set. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. cuando el nodo primario deja de tener disponibilidad, a partir de determinadas configuraciones como son la prioridad y el número de votos de cada nodo, se realiza una votación de los nodos para determinar quién pasa a ser el nodo primario, no pudiendo ser el primario quién posea una prioridad 0 la diferencia con mongodump, es que mongodump realiza una copia de seguridad y la guarda, con lo que esa copia no se irá actualizando como pasa con replica-set. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. cuando el nodo primario deja de tener disponibilidad, a partir de determinadas configuraciones como son la prioridad y el número de votos de cada nodo, se realiza una votación de los nodos para determinar quién pasa a ser el nodo primario, no pudiendo ser el primario quién posea una prioridad 0 la diferencia con mongodump, es que mongodump realiza una copia de seguridad y la guarda, con lo que esa copia no se irá actualizando como pasa con replica-set. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.883,
                                            "Frase": "es una arquitectura tipo maestro-esclavo cuya configuración mínima de nodos (replica-sets) es: un primario (maestro), un secundario (esclavo) y un árbitro. el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. cuando el nodo primario deja de tener disponibilidad, a partir de determinadas configuraciones como son la prioridad y el número de votos de cada nodo, se realiza una votación de los nodos para determinar quién pasa a ser el nodo primario, no pudiendo ser el primario quién posea una prioridad 0 la diferencia con mongodump, es que mongodump realiza una copia de seguridad y la guarda, con lo que esa copia no se irá actualizando como pasa con replica-set. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "la arquitectura en replica-set de mongodb es un sistema cuya función es incrementar la disponibilidad de los datos mediante la redundancia de los mismos. es una arquitectura tipo maestro-esclavo cuya configuración mínima de nodos (replica-sets) es: un primario (maestro), un secundario (esclavo) y un árbitro. el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. cuando el nodo primario deja de tener disponibilidad, a partir de determinadas configuraciones como son la prioridad y el número de votos de cada nodo, se realiza una votación de los nodos para determinar quién pasa a ser el nodo primario, no pudiendo ser el primario quién posea una prioridad 0 la diferencia con mongodump, es que mongodump realiza una copia de seguridad y la guarda, con lo que esa copia no se irá actualizando como pasa con replica-set. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. cuando el nodo primario deja de tener disponibilidad, a partir de determinadas configuraciones como son la prioridad y el número de votos de cada nodo, se realiza una votación de los nodos para determinar quién pasa a ser el nodo primario, no pudiendo ser el primario quién posea una prioridad 0 la diferencia con mongodump, es que mongodump realiza una copia de seguridad y la guarda, con lo que esa copia no se irá actualizando como pasa con replica-set. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "la arquitectura en replica-set de mongodb es un sistema cuya función es incrementar la disponibilidad de los datos mediante la redundancia de los mismos. es una arquitectura tipo maestro-esclavo cuya configuración mínima de nodos (replica-sets) es: un primario (maestro), un secundario (esclavo) y un árbitro. el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.961,
                                            "Frase": "es una arquitectura tipo maestro-esclavo cuya configuración mínima de nodos (replica-sets) es: un primario (maestro), un secundario (esclavo) y un árbitro. el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. cuando el nodo primario deja de tener disponibilidad, a partir de determinadas configuraciones como son la prioridad y el número de votos de cada nodo, se realiza una votación de los nodos para determinar quién pasa a ser el nodo primario, no pudiendo ser el primario quién posea una prioridad 0 la diferencia con mongodump, es que mongodump realiza una copia de seguridad y la guarda, con lo que esa copia no se irá actualizando como pasa con replica-set. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.971,
                                            "Frase": "la arquitectura en replica-set de mongodb es un sistema cuya función es incrementar la disponibilidad de los datos mediante la redundancia de los mismos. es una arquitectura tipo maestro-esclavo cuya configuración mínima de nodos (replica-sets) es: un primario (maestro), un secundario (esclavo) y un árbitro. el maestro (nodo dinámico) es el servidor sobre el cual el cliente interactúa y donde se realizan las operaciones de escritura, lectura, etc. el esclavo dispone de una réplica de los datos del maestro y está continuamente comunicándose, replicando todas las operaciones que realiza el mismo, obteniendo de este modo, disponer de datos actualizados. finalmente, esta arquitectura dispone del nodo árbitro, cuya función es determinar quién es el nodo maestro en un momento determinado. cuando el nodo primario deja de tener disponibilidad, a partir de determinadas configuraciones como son la prioridad y el número de votos de cada nodo, se realiza una votación de los nodos para determinar quién pasa a ser el nodo primario, no pudiendo ser el primario quién posea una prioridad 0 la diferencia con mongodump, es que mongodump realiza una copia de seguridad y la guarda, con lo que esa copia no se irá actualizando como pasa con replica-set. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "e56baa913463e1c5a21df4f4e563c565": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.873,
                                            "Frase": "en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.875,
                                            "Frase": "en un ambiente de big data es muy importante mantener la disponibilidad de la base de datos, por lo que es necesario implementar este tipo de arquitectura con mínimo 3 nodos, en los cuales el nodo principal está constantemente realizando ping a cada nodo esclavo para comprobar si se encuentra activo. en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.877,
                                            "Frase": "en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "la arquitectura réplica-set consiste en tener réplicas de forma automática de los nodos en los cuales se almacenan bases de datos en un sistema distribuido. en un ambiente de big data es muy importante mantener la disponibilidad de la base de datos, por lo que es necesario implementar este tipo de arquitectura con mínimo 3 nodos, en los cuales el nodo principal está constantemente realizando ping a cada nodo esclavo para comprobar si se encuentra activo. en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "la arquitectura réplica-set consiste en tener réplicas de forma automática de los nodos en los cuales se almacenan bases de datos en un sistema distribuido. en un ambiente de big data es muy importante mantener la disponibilidad de la base de datos, por lo que es necesario implementar este tipo de arquitectura con mínimo 3 nodos, en los cuales el nodo principal está constantemente realizando ping a cada nodo esclavo para comprobar si se encuentra activo. en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.794,
                                            "Frase": "si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.827,
                                            "Frase": "en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.83,
                                            "Frase": "es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.805,
                                            "Frase": "se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.786,
                                            "Frase": "en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.789,
                                            "Frase": "en un ambiente de big data es muy importante mantener la disponibilidad de la base de datos, por lo que es necesario implementar este tipo de arquitectura con mínimo 3 nodos, en los cuales el nodo principal está constantemente realizando ping a cada nodo esclavo para comprobar si se encuentra activo. en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.781,
                                            "Frase": "la arquitectura réplica-set consiste en tener réplicas de forma automática de los nodos en los cuales se almacenan bases de datos en un sistema distribuido. en un ambiente de big data es muy importante mantener la disponibilidad de la base de datos, por lo que es necesario implementar este tipo de arquitectura con mínimo 3 nodos, en los cuales el nodo principal está constantemente realizando ping a cada nodo esclavo para comprobar si se encuentra activo. en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "en un ambiente de big data es muy importante mantener la disponibilidad de la base de datos, por lo que es necesario implementar este tipo de arquitectura con mínimo 3 nodos, en los cuales el nodo principal está constantemente realizando ping a cada nodo esclavo para comprobar si se encuentra activo. en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "la arquitectura réplica-set consiste en tener réplicas de forma automática de los nodos en los cuales se almacenan bases de datos en un sistema distribuido. en un ambiente de big data es muy importante mantener la disponibilidad de la base de datos, por lo que es necesario implementar este tipo de arquitectura con mínimo 3 nodos, en los cuales el nodo principal está constantemente realizando ping a cada nodo esclavo para comprobar si se encuentra activo. en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "en un ambiente de big data es muy importante mantener la disponibilidad de la base de datos, por lo que es necesario implementar este tipo de arquitectura con mínimo 3 nodos, en los cuales el nodo principal está constantemente realizando ping a cada nodo esclavo para comprobar si se encuentra activo. en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "en un ambiente de big data es muy importante mantener la disponibilidad de la base de datos, por lo que es necesario implementar este tipo de arquitectura con mínimo 3 nodos, en los cuales el nodo principal está constantemente realizando ping a cada nodo esclavo para comprobar si se encuentra activo. en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "la arquitectura réplica-set consiste en tener réplicas de forma automática de los nodos en los cuales se almacenan bases de datos en un sistema distribuido. en un ambiente de big data es muy importante mantener la disponibilidad de la base de datos, por lo que es necesario implementar este tipo de arquitectura con mínimo 3 nodos, en los cuales el nodo principal está constantemente realizando ping a cada nodo esclavo para comprobar si se encuentra activo. en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "la arquitectura réplica-set consiste en tener réplicas de forma automática de los nodos en los cuales se almacenan bases de datos en un sistema distribuido. en un ambiente de big data es muy importante mantener la disponibilidad de la base de datos, por lo que es necesario implementar este tipo de arquitectura con mínimo 3 nodos, en los cuales el nodo principal está constantemente realizando ping a cada nodo esclavo para comprobar si se encuentra activo. en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "la arquitectura réplica-set consiste en tener réplicas de forma automática de los nodos en los cuales se almacenan bases de datos en un sistema distribuido. en un ambiente de big data es muy importante mantener la disponibilidad de la base de datos, por lo que es necesario implementar este tipo de arquitectura con mínimo 3 nodos, en los cuales el nodo principal está constantemente realizando ping a cada nodo esclavo para comprobar si se encuentra activo. en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.957,
                                            "Frase": "se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.953,
                                            "Frase": "en un ambiente de big data es muy importante mantener la disponibilidad de la base de datos, por lo que es necesario implementar este tipo de arquitectura con mínimo 3 nodos, en los cuales el nodo principal está constantemente realizando ping a cada nodo esclavo para comprobar si se encuentra activo. en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "la arquitectura réplica-set consiste en tener réplicas de forma automática de los nodos en los cuales se almacenan bases de datos en un sistema distribuido. en un ambiente de big data es muy importante mantener la disponibilidad de la base de datos, por lo que es necesario implementar este tipo de arquitectura con mínimo 3 nodos, en los cuales el nodo principal está constantemente realizando ping a cada nodo esclavo para comprobar si se encuentra activo. en caso de que se pierda la conectividad con la base de datos o se presente un problema de disponibilidad, las réplicas de datos pasan a funcionar de forma automática y el sistema se mantiene activo de forma inmediata sin intervención de un administrador. se diferencia de mongodump porque éste, realiza una copia de seguridad de la base de datos y para poder tener activa la base de datos, sería necesario restaurarla, lo cual tomará su tiempo. es decir, que no funcionaría para un ambiente en tiempo real. en el caso de réplica-set, el funcionamiento es en tiempo real. si hay una falla en la base de datos principal, las réplicas se levantan y el sistema podrá estar activo sin depender de un administrador o un programa de tareas de respaldo. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "f30c84c7df0be18fcf8071ced17becb6": {
                      "minipregunta0": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta1": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta2": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta3": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "respuesta_completa": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      }
           },
           "87192dc69be43d176c540bdd6407b37d": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. con mongodump realizamos backup físicos de las bases de datos, mientras que con replica-set, la respuesta de solución es inmediata. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "para implementar esta arquitectura se debe realizar con un mínimo de tres servidores que tengan activo replica-set entre ellos y es sumamente importante definir un servidor principal y los demás configurarles como esclavos. la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. con mongodump realizamos backup físicos de las bases de datos, mientras que con replica-set, la respuesta de solución es inmediata. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "replica-set en una arquitectura que permite tener alta disponibilidad del servidor mongodb, esto quiere decir que, en caso de fallo del servidor principal, las peticiones son enviadas automáticamente a un segundo servidor. para implementar esta arquitectura se debe realizar con un mínimo de tres servidores que tengan activo replica-set entre ellos y es sumamente importante definir un servidor principal y los demás configurarles como esclavos. la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. con mongodump realizamos backup físicos de las bases de datos, mientras que con replica-set, la respuesta de solución es inmediata. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.787,
                                            "Frase": "la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.799,
                                            "Frase": "para implementar esta arquitectura se debe realizar con un mínimo de tres servidores que tengan activo replica-set entre ellos y es sumamente importante definir un servidor principal y los demás configurarles como esclavos. la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.788,
                                            "Frase": "para implementar esta arquitectura se debe realizar con un mínimo de tres servidores que tengan activo replica-set entre ellos y es sumamente importante definir un servidor principal y los demás configurarles como esclavos. la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. con mongodump realizamos backup físicos de las bases de datos, mientras que con replica-set, la respuesta de solución es inmediata. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.783,
                                            "Frase": "replica-set en una arquitectura que permite tener alta disponibilidad del servidor mongodb, esto quiere decir que, en caso de fallo del servidor principal, las peticiones son enviadas automáticamente a un segundo servidor. para implementar esta arquitectura se debe realizar con un mínimo de tres servidores que tengan activo replica-set entre ellos y es sumamente importante definir un servidor principal y los demás configurarles como esclavos. la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. con mongodump realizamos backup físicos de las bases de datos, mientras que con replica-set, la respuesta de solución es inmediata. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "replica-set en una arquitectura que permite tener alta disponibilidad del servidor mongodb, esto quiere decir que, en caso de fallo del servidor principal, las peticiones son enviadas automáticamente a un segundo servidor. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "para implementar esta arquitectura se debe realizar con un mínimo de tres servidores que tengan activo replica-set entre ellos y es sumamente importante definir un servidor principal y los demás configurarles como esclavos. la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "replica-set en una arquitectura que permite tener alta disponibilidad del servidor mongodb, esto quiere decir que, en caso de fallo del servidor principal, las peticiones son enviadas automáticamente a un segundo servidor. para implementar esta arquitectura se debe realizar con un mínimo de tres servidores que tengan activo replica-set entre ellos y es sumamente importante definir un servidor principal y los demás configurarles como esclavos. la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "replica-set en una arquitectura que permite tener alta disponibilidad del servidor mongodb, esto quiere decir que, en caso de fallo del servidor principal, las peticiones son enviadas automáticamente a un segundo servidor. para implementar esta arquitectura se debe realizar con un mínimo de tres servidores que tengan activo replica-set entre ellos y es sumamente importante definir un servidor principal y los demás configurarles como esclavos. la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. con mongodump realizamos backup físicos de las bases de datos, mientras que con replica-set, la respuesta de solución es inmediata. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "con mongodump realizamos backup físicos de las bases de datos, mientras que con replica-set, la respuesta de solución es inmediata. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. con mongodump realizamos backup físicos de las bases de datos, mientras que con replica-set, la respuesta de solución es inmediata. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "para implementar esta arquitectura se debe realizar con un mínimo de tres servidores que tengan activo replica-set entre ellos y es sumamente importante definir un servidor principal y los demás configurarles como esclavos. la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. con mongodump realizamos backup físicos de las bases de datos, mientras que con replica-set, la respuesta de solución es inmediata. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "replica-set en una arquitectura que permite tener alta disponibilidad del servidor mongodb, esto quiere decir que, en caso de fallo del servidor principal, las peticiones son enviadas automáticamente a un segundo servidor. para implementar esta arquitectura se debe realizar con un mínimo de tres servidores que tengan activo replica-set entre ellos y es sumamente importante definir un servidor principal y los demás configurarles como esclavos. la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. con mongodump realizamos backup físicos de las bases de datos, mientras que con replica-set, la respuesta de solución es inmediata. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "para implementar esta arquitectura se debe realizar con un mínimo de tres servidores que tengan activo replica-set entre ellos y es sumamente importante definir un servidor principal y los demás configurarles como esclavos. la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "para implementar esta arquitectura se debe realizar con un mínimo de tres servidores que tengan activo replica-set entre ellos y es sumamente importante definir un servidor principal y los demás configurarles como esclavos. la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. con mongodump realizamos backup físicos de las bases de datos, mientras que con replica-set, la respuesta de solución es inmediata. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "replica-set en una arquitectura que permite tener alta disponibilidad del servidor mongodb, esto quiere decir que, en caso de fallo del servidor principal, las peticiones son enviadas automáticamente a un segundo servidor. para implementar esta arquitectura se debe realizar con un mínimo de tres servidores que tengan activo replica-set entre ellos y es sumamente importante definir un servidor principal y los demás configurarles como esclavos. la principal diferencia entre replica-set y mongodump, es el tiempo de respuesta y perdida de información que podríamos tener en caso de fallo. con mongodump realizamos backup físicos de las bases de datos, mientras que con replica-set, la respuesta de solución es inmediata. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "3f5ddbb6dbe25fa126ae87bc11ea56f8": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.841,
                                            "Frase": "la diferencia principal con mongodump es que éste mantiene una copia exacta de la base de datos, pero no es útil mientras no se haya restaurado en algún servidor, mientras que la replica-set tiene disponible las réplicas de la base de datos para su uso en cualquier momento, proporcionando así alta disponibilidad. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "si el nodo primario llega a fallar uno de los nodos esclavos tomará el rol de máster. la diferencia principal con mongodump es que éste mantiene una copia exacta de la base de datos, pero no es útil mientras no se haya restaurado en algún servidor, mientras que la replica-set tiene disponible las réplicas de la base de datos para su uso en cualquier momento, proporcionando así alta disponibilidad. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.854,
                                            "Frase": "replica-set es la arquitectura para replicación de datos en mongodb, se requiere 3 nodo como mínimo para su configuración, siendo uno el nodo máster o primario y los otros dos nodos los esclavos o secundarios, el nodo máster se encarga de distribuir las réplicas de la información en los nodos esclavos. si el nodo primario llega a fallar uno de los nodos esclavos tomará el rol de máster. la diferencia principal con mongodump es que éste mantiene una copia exacta de la base de datos, pero no es útil mientras no se haya restaurado en algún servidor, mientras que la replica-set tiene disponible las réplicas de la base de datos para su uso en cualquier momento, proporcionando así alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.698,
                                            "Frase": "la diferencia principal con mongodump es que éste mantiene una copia exacta de la base de datos, pero no es útil mientras no se haya restaurado en algún servidor, mientras que la replica-set tiene disponible las réplicas de la base de datos para su uso en cualquier momento, proporcionando así alta disponibilidad. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.73,
                                            "Frase": "si el nodo primario llega a fallar uno de los nodos esclavos tomará el rol de máster. la diferencia principal con mongodump es que éste mantiene una copia exacta de la base de datos, pero no es útil mientras no se haya restaurado en algún servidor, mientras que la replica-set tiene disponible las réplicas de la base de datos para su uso en cualquier momento, proporcionando así alta disponibilidad. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.723,
                                            "Frase": "replica-set es la arquitectura para replicación de datos en mongodb, se requiere 3 nodo como mínimo para su configuración, siendo uno el nodo máster o primario y los otros dos nodos los esclavos o secundarios, el nodo máster se encarga de distribuir las réplicas de la información en los nodos esclavos. si el nodo primario llega a fallar uno de los nodos esclavos tomará el rol de máster. la diferencia principal con mongodump es que éste mantiene una copia exacta de la base de datos, pero no es útil mientras no se haya restaurado en algún servidor, mientras que la replica-set tiene disponible las réplicas de la base de datos para su uso en cualquier momento, proporcionando así alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "si el nodo primario llega a fallar uno de los nodos esclavos tomará el rol de máster. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "replica-set es la arquitectura para replicación de datos en mongodb, se requiere 3 nodo como mínimo para su configuración, siendo uno el nodo máster o primario y los otros dos nodos los esclavos o secundarios, el nodo máster se encarga de distribuir las réplicas de la información en los nodos esclavos. si el nodo primario llega a fallar uno de los nodos esclavos tomará el rol de máster. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "replica-set es la arquitectura para replicación de datos en mongodb, se requiere 3 nodo como mínimo para su configuración, siendo uno el nodo máster o primario y los otros dos nodos los esclavos o secundarios, el nodo máster se encarga de distribuir las réplicas de la información en los nodos esclavos. si el nodo primario llega a fallar uno de los nodos esclavos tomará el rol de máster. la diferencia principal con mongodump es que éste mantiene una copia exacta de la base de datos, pero no es útil mientras no se haya restaurado en algún servidor, mientras que la replica-set tiene disponible las réplicas de la base de datos para su uso en cualquier momento, proporcionando así alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "la diferencia principal con mongodump es que éste mantiene una copia exacta de la base de datos, pero no es útil mientras no se haya restaurado en algún servidor, mientras que la replica-set tiene disponible las réplicas de la base de datos para su uso en cualquier momento, proporcionando así alta disponibilidad. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "si el nodo primario llega a fallar uno de los nodos esclavos tomará el rol de máster. la diferencia principal con mongodump es que éste mantiene una copia exacta de la base de datos, pero no es útil mientras no se haya restaurado en algún servidor, mientras que la replica-set tiene disponible las réplicas de la base de datos para su uso en cualquier momento, proporcionando así alta disponibilidad. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "replica-set es la arquitectura para replicación de datos en mongodb, se requiere 3 nodo como mínimo para su configuración, siendo uno el nodo máster o primario y los otros dos nodos los esclavos o secundarios, el nodo máster se encarga de distribuir las réplicas de la información en los nodos esclavos. si el nodo primario llega a fallar uno de los nodos esclavos tomará el rol de máster. la diferencia principal con mongodump es que éste mantiene una copia exacta de la base de datos, pero no es útil mientras no se haya restaurado en algún servidor, mientras que la replica-set tiene disponible las réplicas de la base de datos para su uso en cualquier momento, proporcionando así alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "la diferencia principal con mongodump es que éste mantiene una copia exacta de la base de datos, pero no es útil mientras no se haya restaurado en algún servidor, mientras que la replica-set tiene disponible las réplicas de la base de datos para su uso en cualquier momento, proporcionando así alta disponibilidad. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "si el nodo primario llega a fallar uno de los nodos esclavos tomará el rol de máster. la diferencia principal con mongodump es que éste mantiene una copia exacta de la base de datos, pero no es útil mientras no se haya restaurado en algún servidor, mientras que la replica-set tiene disponible las réplicas de la base de datos para su uso en cualquier momento, proporcionando así alta disponibilidad. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "replica-set es la arquitectura para replicación de datos en mongodb, se requiere 3 nodo como mínimo para su configuración, siendo uno el nodo máster o primario y los otros dos nodos los esclavos o secundarios, el nodo máster se encarga de distribuir las réplicas de la información en los nodos esclavos. si el nodo primario llega a fallar uno de los nodos esclavos tomará el rol de máster. la diferencia principal con mongodump es que éste mantiene una copia exacta de la base de datos, pero no es útil mientras no se haya restaurado en algún servidor, mientras que la replica-set tiene disponible las réplicas de la base de datos para su uso en cualquier momento, proporcionando así alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.5,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "10dfa3454869bfae16fa1ada40d4eea0": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "la réplica set- mongodb permite una recuperación a fallos de forma automática, es la forma recomendada para utilizar replicación de datos en mongodb, contiene varios nodos, no definen un nodo maestro estáticamente, es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.806,
                                            "Frase": "la réplica set- mongodb permite una recuperación a fallos de forma automática, es la forma recomendada para utilizar replicación de datos en mongodb, contiene varios nodos, no definen un nodo maestro estáticamente, es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendad para una replica set ces tres nodos: dos nodos serán instancias de mongod, y solo uno de estos será nodo primario, mientras el segundo nodo replicará las operaciones que se realicen sobre el primario, el tercer nodo se denomina arbitro y se utiliza para decidir que nodo debe ser asignado como primario, si el nodo primario deja de tener disponibilidad el nodo arbittro decide otro nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.816,
                                            "Frase": "la réplica set- mongodb permite una recuperación a fallos de forma automática, es la forma recomendada para utilizar replicación de datos en mongodb, contiene varios nodos, no definen un nodo maestro estáticamente, es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendad para una replica set ces tres nodos: dos nodos serán instancias de mongod, y solo uno de estos será nodo primario, mientras el segundo nodo replicará las operaciones que se realicen sobre el primario, el tercer nodo se denomina arbitro y se utiliza para decidir que nodo debe ser asignado como primario, si el nodo primario deja de tener disponibilidad el nodo arbittro decide otro nodo primario. la principal diferencia con mongodrump es que esta realiza una copia de seguridad, y esto quiere decir que se está haciendo una foto en un instante de tiempo dato, en cambio en las replicas tenemos información duplicada en varios nodos en todo momento. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.765,
                                            "Frase": "la réplica set- mongodb permite una recuperación a fallos de forma automática, es la forma recomendada para utilizar replicación de datos en mongodb, contiene varios nodos, no definen un nodo maestro estáticamente, es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.754,
                                            "Frase": "la réplica set- mongodb permite una recuperación a fallos de forma automática, es la forma recomendada para utilizar replicación de datos en mongodb, contiene varios nodos, no definen un nodo maestro estáticamente, es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendad para una replica set ces tres nodos: dos nodos serán instancias de mongod, y solo uno de estos será nodo primario, mientras el segundo nodo replicará las operaciones que se realicen sobre el primario, el tercer nodo se denomina arbitro y se utiliza para decidir que nodo debe ser asignado como primario, si el nodo primario deja de tener disponibilidad el nodo arbittro decide otro nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.756,
                                            "Frase": "la réplica set- mongodb permite una recuperación a fallos de forma automática, es la forma recomendada para utilizar replicación de datos en mongodb, contiene varios nodos, no definen un nodo maestro estáticamente, es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendad para una replica set ces tres nodos: dos nodos serán instancias de mongod, y solo uno de estos será nodo primario, mientras el segundo nodo replicará las operaciones que se realicen sobre el primario, el tercer nodo se denomina arbitro y se utiliza para decidir que nodo debe ser asignado como primario, si el nodo primario deja de tener disponibilidad el nodo arbittro decide otro nodo primario. la principal diferencia con mongodrump es que esta realiza una copia de seguridad, y esto quiere decir que se está haciendo una foto en un instante de tiempo dato, en cambio en las replicas tenemos información duplicada en varios nodos en todo momento. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "la configuración mínima recomendad para una replica set ces tres nodos: dos nodos serán instancias de mongod, y solo uno de estos será nodo primario, mientras el segundo nodo replicará las operaciones que se realicen sobre el primario, el tercer nodo se denomina arbitro y se utiliza para decidir que nodo debe ser asignado como primario, si el nodo primario deja de tener disponibilidad el nodo arbittro decide otro nodo primario. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "la réplica set- mongodb permite una recuperación a fallos de forma automática, es la forma recomendada para utilizar replicación de datos en mongodb, contiene varios nodos, no definen un nodo maestro estáticamente, es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendad para una replica set ces tres nodos: dos nodos serán instancias de mongod, y solo uno de estos será nodo primario, mientras el segundo nodo replicará las operaciones que se realicen sobre el primario, el tercer nodo se denomina arbitro y se utiliza para decidir que nodo debe ser asignado como primario, si el nodo primario deja de tener disponibilidad el nodo arbittro decide otro nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "la réplica set- mongodb permite una recuperación a fallos de forma automática, es la forma recomendada para utilizar replicación de datos en mongodb, contiene varios nodos, no definen un nodo maestro estáticamente, es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendad para una replica set ces tres nodos: dos nodos serán instancias de mongod, y solo uno de estos será nodo primario, mientras el segundo nodo replicará las operaciones que se realicen sobre el primario, el tercer nodo se denomina arbitro y se utiliza para decidir que nodo debe ser asignado como primario, si el nodo primario deja de tener disponibilidad el nodo arbittro decide otro nodo primario. la principal diferencia con mongodrump es que esta realiza una copia de seguridad, y esto quiere decir que se está haciendo una foto en un instante de tiempo dato, en cambio en las replicas tenemos información duplicada en varios nodos en todo momento. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "la réplica set- mongodb permite una recuperación a fallos de forma automática, es la forma recomendada para utilizar replicación de datos en mongodb, contiene varios nodos, no definen un nodo maestro estáticamente, es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "la configuración mínima recomendad para una replica set ces tres nodos: dos nodos serán instancias de mongod, y solo uno de estos será nodo primario, mientras el segundo nodo replicará las operaciones que se realicen sobre el primario, el tercer nodo se denomina arbitro y se utiliza para decidir que nodo debe ser asignado como primario, si el nodo primario deja de tener disponibilidad el nodo arbittro decide otro nodo primario. la principal diferencia con mongodrump es que esta realiza una copia de seguridad, y esto quiere decir que se está haciendo una foto en un instante de tiempo dato, en cambio en las replicas tenemos información duplicada en varios nodos en todo momento. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "la réplica set- mongodb permite una recuperación a fallos de forma automática, es la forma recomendada para utilizar replicación de datos en mongodb, contiene varios nodos, no definen un nodo maestro estáticamente, es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendad para una replica set ces tres nodos: dos nodos serán instancias de mongod, y solo uno de estos será nodo primario, mientras el segundo nodo replicará las operaciones que se realicen sobre el primario, el tercer nodo se denomina arbitro y se utiliza para decidir que nodo debe ser asignado como primario, si el nodo primario deja de tener disponibilidad el nodo arbittro decide otro nodo primario. la principal diferencia con mongodrump es que esta realiza una copia de seguridad, y esto quiere decir que se está haciendo una foto en un instante de tiempo dato, en cambio en las replicas tenemos información duplicada en varios nodos en todo momento. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "la réplica set- mongodb permite una recuperación a fallos de forma automática, es la forma recomendada para utilizar replicación de datos en mongodb, contiene varios nodos, no definen un nodo maestro estáticamente, es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "la réplica set- mongodb permite una recuperación a fallos de forma automática, es la forma recomendada para utilizar replicación de datos en mongodb, contiene varios nodos, no definen un nodo maestro estáticamente, es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendad para una replica set ces tres nodos: dos nodos serán instancias de mongod, y solo uno de estos será nodo primario, mientras el segundo nodo replicará las operaciones que se realicen sobre el primario, el tercer nodo se denomina arbitro y se utiliza para decidir que nodo debe ser asignado como primario, si el nodo primario deja de tener disponibilidad el nodo arbittro decide otro nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "la réplica set- mongodb permite una recuperación a fallos de forma automática, es la forma recomendada para utilizar replicación de datos en mongodb, contiene varios nodos, no definen un nodo maestro estáticamente, es asignado al azar y esta asignación se actualiza dependiendo de la disponibilidad del nodo. la configuración mínima recomendad para una replica set ces tres nodos: dos nodos serán instancias de mongod, y solo uno de estos será nodo primario, mientras el segundo nodo replicará las operaciones que se realicen sobre el primario, el tercer nodo se denomina arbitro y se utiliza para decidir que nodo debe ser asignado como primario, si el nodo primario deja de tener disponibilidad el nodo arbittro decide otro nodo primario. la principal diferencia con mongodrump es que esta realiza una copia de seguridad, y esto quiere decir que se está haciendo una foto en un instante de tiempo dato, en cambio en las replicas tenemos información duplicada en varios nodos en todo momento. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "cc74af2802f44d4dd32ff43c7035e086": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "- arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "- nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.865,
                                            "Frase": "un replica-set es una estructura que se crea para que en caso de error en el nodo primario no perdamos toda la información. para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.877,
                                            "Frase": "la función de un replica-set es dar respaldo a los datos. un replica-set es una estructura que se crea para que en caso de error en el nodo primario no perdamos toda la información. para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.834,
                                            "Frase": "mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.828,
                                            "Frase": "- arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.833,
                                            "Frase": "un replica-set es una estructura que se crea para que en caso de error en el nodo primario no perdamos toda la información. para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.845,
                                            "Frase": "la función de un replica-set es dar respaldo a los datos. un replica-set es una estructura que se crea para que en caso de error en el nodo primario no perdamos toda la información. para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.843,
                                            "Frase": "un replica-set es una estructura que se crea para que en caso de error en el nodo primario no perdamos toda la información. para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.845,
                                            "Frase": "la función de un replica-set es dar respaldo a los datos. un replica-set es una estructura que se crea para que en caso de error en el nodo primario no perdamos toda la información. para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "- arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "- arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "la función de un replica-set es dar respaldo a los datos. un replica-set es una estructura que se crea para que en caso de error en el nodo primario no perdamos toda la información. para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "un replica-set es una estructura que se crea para que en caso de error en el nodo primario no perdamos toda la información. para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "la función de un replica-set es dar respaldo a los datos. un replica-set es una estructura que se crea para que en caso de error en el nodo primario no perdamos toda la información. para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "la función de un replica-set es dar respaldo a los datos. un replica-set es una estructura que se crea para que en caso de error en el nodo primario no perdamos toda la información. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "- nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "un replica-set es una estructura que se crea para que en caso de error en el nodo primario no perdamos toda la información. para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "la función de un replica-set es dar respaldo a los datos. un replica-set es una estructura que se crea para que en caso de error en el nodo primario no perdamos toda la información. para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "- arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "- nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.965,
                                            "Frase": "para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.96,
                                            "Frase": "un replica-set es una estructura que se crea para que en caso de error en el nodo primario no perdamos toda la información. para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.963,
                                            "Frase": "la función de un replica-set es dar respaldo a los datos. un replica-set es una estructura que se crea para que en caso de error en el nodo primario no perdamos toda la información. para crear un replica set son necesarios 3 nodos, el nodo primario, el nodo secundario y el arbitro. la función que tienen estos nodos es:  - nodo primario: guardar la información. - nodo secundario:  hacer una copia de esta información y mantenerla hasta que sea necesario, que por caída del nodo primario se ponga en funcionamiento. - arbitro: encargado de nombrar al nodo secundario que comienza a actuar en caso de que el primario deje de tener disponibilidad. mongodump es un buen método de respaldo de la información, pero realiza la copia de seguridad en un momento dado, a diferencia de replica- set que se mantiene actualizada. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "ed586e8c64310604e81c09eab76f45e3": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.839,
                                            "Frase": "el replica set proporciona redundancia y alta disponibilidad de los datos. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.761,
                                            "Frase": "el replica set proporciona redundancia y alta disponibilidad de los datos. cuando el nodo primario falla el arbitro elige un nuevo nodo primario y  no se pierden los datos ya que el secundario mantiene la réplica, esto es transparente para el usuario, la diferencia con mongodump es que mongodump hace una copia para después restaurarla con mongorestore lo cual requiere tiempo de espera y el replica set se pone a funcionar la copia en el momento proporcionando una alta disponibilidad. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.73,
                                            "Frase": "su instalación mínima es de 3 nodos. el primero sirve de nodo primario quien recibe las peticiones y el otro es el secundario donde se replica lo que recibe el primario y el tercer nodo es el arbitro el cual decide quien será nodo primario. el replica set proporciona redundancia y alta disponibilidad de los datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.739,
                                            "Frase": "su instalación mínima es de 3 nodos. el primero sirve de nodo primario quien recibe las peticiones y el otro es el secundario donde se replica lo que recibe el primario y el tercer nodo es el arbitro el cual decide quien será nodo primario. el replica set proporciona redundancia y alta disponibilidad de los datos. cuando el nodo primario falla el arbitro elige un nuevo nodo primario y  no se pierden los datos ya que el secundario mantiene la réplica, esto es transparente para el usuario, la diferencia con mongodump es que mongodump hace una copia para después restaurarla con mongorestore lo cual requiere tiempo de espera y el replica set se pone a funcionar la copia en el momento proporcionando una alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.721,
                                            "Frase": "cuando el nodo primario falla el arbitro elige un nuevo nodo primario y  no se pierden los datos ya que el secundario mantiene la réplica, esto es transparente para el usuario, la diferencia con mongodump es que mongodump hace una copia para después restaurarla con mongorestore lo cual requiere tiempo de espera y el replica set se pone a funcionar la copia en el momento proporcionando una alta disponibilidad. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.751,
                                            "Frase": "su instalación mínima es de 3 nodos. el primero sirve de nodo primario quien recibe las peticiones y el otro es el secundario donde se replica lo que recibe el primario y el tercer nodo es el arbitro el cual decide quien será nodo primario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.784,
                                            "Frase": "su instalación mínima es de 3 nodos. el primero sirve de nodo primario quien recibe las peticiones y el otro es el secundario donde se replica lo que recibe el primario y el tercer nodo es el arbitro el cual decide quien será nodo primario. el replica set proporciona redundancia y alta disponibilidad de los datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.771,
                                            "Frase": "su instalación mínima es de 3 nodos. el primero sirve de nodo primario quien recibe las peticiones y el otro es el secundario donde se replica lo que recibe el primario y el tercer nodo es el arbitro el cual decide quien será nodo primario. el replica set proporciona redundancia y alta disponibilidad de los datos. cuando el nodo primario falla el arbitro elige un nuevo nodo primario y  no se pierden los datos ya que el secundario mantiene la réplica, esto es transparente para el usuario, la diferencia con mongodump es que mongodump hace una copia para después restaurarla con mongorestore lo cual requiere tiempo de espera y el replica set se pone a funcionar la copia en el momento proporcionando una alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.855,
                                            "Frase": "cuando el nodo primario falla el arbitro elige un nuevo nodo primario y  no se pierden los datos ya que el secundario mantiene la réplica, esto es transparente para el usuario, la diferencia con mongodump es que mongodump hace una copia para después restaurarla con mongorestore lo cual requiere tiempo de espera y el replica set se pone a funcionar la copia en el momento proporcionando una alta disponibilidad. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "el primero sirve de nodo primario quien recibe las peticiones y el otro es el secundario donde se replica lo que recibe el primario y el tercer nodo es el arbitro el cual decide quien será nodo primario. el replica set proporciona redundancia y alta disponibilidad de los datos. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "su instalación mínima es de 3 nodos. el primero sirve de nodo primario quien recibe las peticiones y el otro es el secundario donde se replica lo que recibe el primario y el tercer nodo es el arbitro el cual decide quien será nodo primario. el replica set proporciona redundancia y alta disponibilidad de los datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "su instalación mínima es de 3 nodos. el primero sirve de nodo primario quien recibe las peticiones y el otro es el secundario donde se replica lo que recibe el primario y el tercer nodo es el arbitro el cual decide quien será nodo primario. el replica set proporciona redundancia y alta disponibilidad de los datos. cuando el nodo primario falla el arbitro elige un nuevo nodo primario y  no se pierden los datos ya que el secundario mantiene la réplica, esto es transparente para el usuario, la diferencia con mongodump es que mongodump hace una copia para después restaurarla con mongorestore lo cual requiere tiempo de espera y el replica set se pone a funcionar la copia en el momento proporcionando una alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.827,
                                            "Frase": "cuando el nodo primario falla el arbitro elige un nuevo nodo primario y  no se pierden los datos ya que el secundario mantiene la réplica, esto es transparente para el usuario, la diferencia con mongodump es que mongodump hace una copia para después restaurarla con mongorestore lo cual requiere tiempo de espera y el replica set se pone a funcionar la copia en el momento proporcionando una alta disponibilidad. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.856,
                                            "Frase": "el replica set proporciona redundancia y alta disponibilidad de los datos. cuando el nodo primario falla el arbitro elige un nuevo nodo primario y  no se pierden los datos ya que el secundario mantiene la réplica, esto es transparente para el usuario, la diferencia con mongodump es que mongodump hace una copia para después restaurarla con mongorestore lo cual requiere tiempo de espera y el replica set se pone a funcionar la copia en el momento proporcionando una alta disponibilidad. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.775,
                                            "Frase": "el primero sirve de nodo primario quien recibe las peticiones y el otro es el secundario donde se replica lo que recibe el primario y el tercer nodo es el arbitro el cual decide quien será nodo primario. el replica set proporciona redundancia y alta disponibilidad de los datos. cuando el nodo primario falla el arbitro elige un nuevo nodo primario y  no se pierden los datos ya que el secundario mantiene la réplica, esto es transparente para el usuario, la diferencia con mongodump es que mongodump hace una copia para después restaurarla con mongorestore lo cual requiere tiempo de espera y el replica set se pone a funcionar la copia en el momento proporcionando una alta disponibilidad. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.792,
                                            "Frase": "su instalación mínima es de 3 nodos. el primero sirve de nodo primario quien recibe las peticiones y el otro es el secundario donde se replica lo que recibe el primario y el tercer nodo es el arbitro el cual decide quien será nodo primario. el replica set proporciona redundancia y alta disponibilidad de los datos. cuando el nodo primario falla el arbitro elige un nuevo nodo primario y  no se pierden los datos ya que el secundario mantiene la réplica, esto es transparente para el usuario, la diferencia con mongodump es que mongodump hace una copia para después restaurarla con mongorestore lo cual requiere tiempo de espera y el replica set se pone a funcionar la copia en el momento proporcionando una alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "cuando el nodo primario falla el arbitro elige un nuevo nodo primario y  no se pierden los datos ya que el secundario mantiene la réplica, esto es transparente para el usuario, la diferencia con mongodump es que mongodump hace una copia para después restaurarla con mongorestore lo cual requiere tiempo de espera y el replica set se pone a funcionar la copia en el momento proporcionando una alta disponibilidad. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "el replica set proporciona redundancia y alta disponibilidad de los datos. cuando el nodo primario falla el arbitro elige un nuevo nodo primario y  no se pierden los datos ya que el secundario mantiene la réplica, esto es transparente para el usuario, la diferencia con mongodump es que mongodump hace una copia para después restaurarla con mongorestore lo cual requiere tiempo de espera y el replica set se pone a funcionar la copia en el momento proporcionando una alta disponibilidad. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.862,
                                            "Frase": "su instalación mínima es de 3 nodos. el primero sirve de nodo primario quien recibe las peticiones y el otro es el secundario donde se replica lo que recibe el primario y el tercer nodo es el arbitro el cual decide quien será nodo primario. el replica set proporciona redundancia y alta disponibilidad de los datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.882,
                                            "Frase": "su instalación mínima es de 3 nodos. el primero sirve de nodo primario quien recibe las peticiones y el otro es el secundario donde se replica lo que recibe el primario y el tercer nodo es el arbitro el cual decide quien será nodo primario. el replica set proporciona redundancia y alta disponibilidad de los datos. cuando el nodo primario falla el arbitro elige un nuevo nodo primario y  no se pierden los datos ya que el secundario mantiene la réplica, esto es transparente para el usuario, la diferencia con mongodump es que mongodump hace una copia para después restaurarla con mongorestore lo cual requiere tiempo de espera y el replica set se pone a funcionar la copia en el momento proporcionando una alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.5,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "892adc9386a49de46f5640a0c9fade47": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. si el nodo primario deja de tener disponibilidad el árbitro lo detecta y pasaría a buscar uno nuevo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. si el nodo primario deja de tener disponibilidad el árbitro lo detecta y pasaría a buscar uno nuevo. la principal diferencia con mongodump es que replica set selecciona un nodo al azar como primario, obteniendo la flexibilidad de, al detectar su caída, poder usar otro para realizar las réplicas. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. si el nodo primario deja de tener disponibilidad el árbitro lo detecta y pasaría a buscar uno nuevo. la principal diferencia con mongodump es que replica set selecciona un nodo al azar como primario, obteniendo la flexibilidad de, al detectar su caída, poder usar otro para realizar las réplicas. mongodump selecciona un nodo como encargado de hacer las copias y si este cae, cae el servicio de replicación. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.797,
                                            "Frase": "mongodump selecciona un nodo como encargado de hacer las copias y si este cae, cae el servicio de replicación. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.827,
                                            "Frase": "la principal diferencia con mongodump es que replica set selecciona un nodo al azar como primario, obteniendo la flexibilidad de, al detectar su caída, poder usar otro para realizar las réplicas. mongodump selecciona un nodo como encargado de hacer las copias y si este cae, cae el servicio de replicación. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.797,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. si el nodo primario deja de tener disponibilidad el árbitro lo detecta y pasaría a buscar uno nuevo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.81,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. si el nodo primario deja de tener disponibilidad el árbitro lo detecta y pasaría a buscar uno nuevo. la principal diferencia con mongodump es que replica set selecciona un nodo al azar como primario, obteniendo la flexibilidad de, al detectar su caída, poder usar otro para realizar las réplicas. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.822,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. si el nodo primario deja de tener disponibilidad el árbitro lo detecta y pasaría a buscar uno nuevo. la principal diferencia con mongodump es que replica set selecciona un nodo al azar como primario, obteniendo la flexibilidad de, al detectar su caída, poder usar otro para realizar las réplicas. mongodump selecciona un nodo como encargado de hacer las copias y si este cae, cae el servicio de replicación. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. si el nodo primario deja de tener disponibilidad el árbitro lo detecta y pasaría a buscar uno nuevo. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. si el nodo primario deja de tener disponibilidad el árbitro lo detecta y pasaría a buscar uno nuevo. la principal diferencia con mongodump es que replica set selecciona un nodo al azar como primario, obteniendo la flexibilidad de, al detectar su caída, poder usar otro para realizar las réplicas. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. si el nodo primario deja de tener disponibilidad el árbitro lo detecta y pasaría a buscar uno nuevo. la principal diferencia con mongodump es que replica set selecciona un nodo al azar como primario, obteniendo la flexibilidad de, al detectar su caída, poder usar otro para realizar las réplicas. mongodump selecciona un nodo como encargado de hacer las copias y si este cae, cae el servicio de replicación. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. si el nodo primario deja de tener disponibilidad el árbitro lo detecta y pasaría a buscar uno nuevo. la principal diferencia con mongodump es que replica set selecciona un nodo al azar como primario, obteniendo la flexibilidad de, al detectar su caída, poder usar otro para realizar las réplicas. mongodump selecciona un nodo como encargado de hacer las copias y si este cae, cae el servicio de replicación. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.874,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.86,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. si el nodo primario deja de tener disponibilidad el árbitro lo detecta y pasaría a buscar uno nuevo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. si el nodo primario deja de tener disponibilidad el árbitro lo detecta y pasaría a buscar uno nuevo. la principal diferencia con mongodump es que replica set selecciona un nodo al azar como primario, obteniendo la flexibilidad de, al detectar su caída, poder usar otro para realizar las réplicas. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. si el nodo primario deja de tener disponibilidad el árbitro lo detecta y pasaría a buscar uno nuevo. la principal diferencia con mongodump es que replica set selecciona un nodo al azar como primario, obteniendo la flexibilidad de, al detectar su caída, poder usar otro para realizar las réplicas. mongodump selecciona un nodo como encargado de hacer las copias y si este cae, cae el servicio de replicación. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "la principal diferencia con mongodump es que replica set selecciona un nodo al azar como primario, obteniendo la flexibilidad de, al detectar su caída, poder usar otro para realizar las réplicas. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. si el nodo primario deja de tener disponibilidad el árbitro lo detecta y pasaría a buscar uno nuevo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. si el nodo primario deja de tener disponibilidad el árbitro lo detecta y pasaría a buscar uno nuevo. la principal diferencia con mongodump es que replica set selecciona un nodo al azar como primario, obteniendo la flexibilidad de, al detectar su caída, poder usar otro para realizar las réplicas. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.959,
                                            "Frase": "la arquitectura de replica-set es el modelo de mongo para tener replicación de datos e incrementar la disponibilidad de la información de mi base de datos. la configuración mínima requiere de tres nodos, el primario, el secundario y el árbitro; siendo el primario el que manda la copia al secundario y el árbitro el que controla la disponibilidad de todos. si el nodo primario deja de tener disponibilidad el árbitro lo detecta y pasaría a buscar uno nuevo. la principal diferencia con mongodump es que replica set selecciona un nodo al azar como primario, obteniendo la flexibilidad de, al detectar su caída, poder usar otro para realizar las réplicas. mongodump selecciona un nodo como encargado de hacer las copias y si este cae, cae el servicio de replicación. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "d2b0d015ec81981be5ac318b6ff2c30e": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.836,
                                            "Frase": "ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.824,
                                            "Frase": "ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.846,
                                            "Frase": "ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. una ventaja del replica-set es el balanceo de carga ya que la escritura siempre será desde el primario, pero la lectura puede ser desde los secundarios. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.84,
                                            "Frase": "ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. una ventaja del replica-set es el balanceo de carga ya que la escritura siempre será desde el primario, pero la lectura puede ser desde los secundarios. la principal diferencia con mongodump es que con este lo que obtenemos es una foto de los datos es decir que si modificamos algo después de haber hecho el dump la copia anterior quedará desactualizada y con replica-set tenemos siempre una copia actualizada de los datos. ",
                                            "Lineas": "Lines 5 - 9"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.83,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. puedes tener 1 nodo primario y n secundarios. para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.836,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. puedes tener 1 nodo primario y n secundarios. para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.846,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. puedes tener 1 nodo primario y n secundarios. para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. una ventaja del replica-set es el balanceo de carga ya que la escritura siempre será desde el primario, pero la lectura puede ser desde los secundarios. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.821,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. puedes tener 1 nodo primario y n secundarios. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.768,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. puedes tener 1 nodo primario y n secundarios. para configuración mínima hacen falta 1 primario y dos secundarios. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.806,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. puedes tener 1 nodo primario y n secundarios. para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.807,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. puedes tener 1 nodo primario y n secundarios. para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.799,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. puedes tener 1 nodo primario y n secundarios. para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.788,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. puedes tener 1 nodo primario y n secundarios. para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.796,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. puedes tener 1 nodo primario y n secundarios. para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. una ventaja del replica-set es el balanceo de carga ya que la escritura siempre será desde el primario, pero la lectura puede ser desde los secundarios. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.871,
                                            "Frase": "el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.892,
                                            "Frase": "el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. una ventaja del replica-set es el balanceo de carga ya que la escritura siempre será desde el primario, pero la lectura puede ser desde los secundarios. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. puedes tener 1 nodo primario y n secundarios. para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. puedes tener 1 nodo primario y n secundarios. para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. puedes tener 1 nodo primario y n secundarios. para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. una ventaja del replica-set es el balanceo de carga ya que la escritura siempre será desde el primario, pero la lectura puede ser desde los secundarios. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "ante una corrupción del primario siempre tendremos una copia de los datos. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "una ventaja del replica-set es el balanceo de carga ya que la escritura siempre será desde el primario, pero la lectura puede ser desde los secundarios. la principal diferencia con mongodump es que con este lo que obtenemos es una foto de los datos es decir que si modificamos algo después de haber hecho el dump la copia anterior quedará desactualizada y con replica-set tenemos siempre una copia actualizada de los datos. ",
                                            "Lineas": "Lines 8 - 9"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. una ventaja del replica-set es el balanceo de carga ya que la escritura siempre será desde el primario, pero la lectura puede ser desde los secundarios. la principal diferencia con mongodump es que con este lo que obtenemos es una foto de los datos es decir que si modificamos algo después de haber hecho el dump la copia anterior quedará desactualizada y con replica-set tenemos siempre una copia actualizada de los datos. ",
                                            "Lineas": "Lines 7 - 9"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. una ventaja del replica-set es el balanceo de carga ya que la escritura siempre será desde el primario, pero la lectura puede ser desde los secundarios. la principal diferencia con mongodump es que con este lo que obtenemos es una foto de los datos es decir que si modificamos algo después de haber hecho el dump la copia anterior quedará desactualizada y con replica-set tenemos siempre una copia actualizada de los datos. ",
                                            "Lineas": "Lines 6 - 9"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. una ventaja del replica-set es el balanceo de carga ya que la escritura siempre será desde el primario, pero la lectura puede ser desde los secundarios. la principal diferencia con mongodump es que con este lo que obtenemos es una foto de los datos es decir que si modificamos algo después de haber hecho el dump la copia anterior quedará desactualizada y con replica-set tenemos siempre una copia actualizada de los datos. ",
                                            "Lineas": "Lines 5 - 9"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. una ventaja del replica-set es el balanceo de carga ya que la escritura siempre será desde el primario, pero la lectura puede ser desde los secundarios. la principal diferencia con mongodump es que con este lo que obtenemos es una foto de los datos es decir que si modificamos algo después de haber hecho el dump la copia anterior quedará desactualizada y con replica-set tenemos siempre una copia actualizada de los datos. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. una ventaja del replica-set es el balanceo de carga ya que la escritura siempre será desde el primario, pero la lectura puede ser desde los secundarios. la principal diferencia con mongodump es que con este lo que obtenemos es una foto de los datos es decir que si modificamos algo después de haber hecho el dump la copia anterior quedará desactualizada y con replica-set tenemos siempre una copia actualizada de los datos. ",
                                            "Lineas": "Lines 3 - 9"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "puedes tener 1 nodo primario y n secundarios. para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. una ventaja del replica-set es el balanceo de carga ya que la escritura siempre será desde el primario, pero la lectura puede ser desde los secundarios. la principal diferencia con mongodump es que con este lo que obtenemos es una foto de los datos es decir que si modificamos algo después de haber hecho el dump la copia anterior quedará desactualizada y con replica-set tenemos siempre una copia actualizada de los datos. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. una ventaja del replica-set es el balanceo de carga ya que la escritura siempre será desde el primario, pero la lectura puede ser desde los secundarios. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. una ventaja del replica-set es el balanceo de carga ya que la escritura siempre será desde el primario, pero la lectura puede ser desde los secundarios. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. una ventaja del replica-set es el balanceo de carga ya que la escritura siempre será desde el primario, pero la lectura puede ser desde los secundarios. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. puedes tener 1 nodo primario y n secundarios. para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. puedes tener 1 nodo primario y n secundarios. para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. puedes tener 1 nodo primario y n secundarios. para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "un replica-set es una configuración de servidores de replicación. puedes tener 1 nodo primario y n secundarios. para configuración mínima hacen falta 1 primario y dos secundarios. el primario es un servidor de mongodb donde escribes y lees y los secundarios están conectados al primario de tal forma que cada vez que el primario recibe un dato lo propaga a los secundarios, de tal forma que tenemos copias en tiempo real. ante una corrupción del primario siempre tendremos una copia de los datos. si el primario deja de funcionar uno de los secundarios se convierte en primario. la elección del nuevo primario se hace a través de una votación de los secundarios y cuando el que era primario se reconecte será secundario. una ventaja del replica-set es el balanceo de carga ya que la escritura siempre será desde el primario, pero la lectura puede ser desde los secundarios. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "91eb29ee999b738cac9b15b339cc79e1": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "la principal diferencia con mongodump que mongodump son para bases de datos pequeñas de mongodb. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.768,
                                            "Frase": "la arquitectura en replica-set es un grupo de procesos mongod que mantiene el mismo conjunto de datos proporcionando redundancia y disponibilidad, pueden tener varios nodos, pero debe tener un solo nodo principal y un nodo secundario como mínimo, además que pueden tener un nodo arbitro, pero solo es arbitro, además si el nodo principal no está funcionado, el nodo secundario que este disponible selecciona el nuevo nodo primario. la principal diferencia con mongodump que mongodump son para bases de datos pequeñas de mongodb. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.787,
                                            "Frase": "la arquitectura en replica-set es un grupo de procesos mongod que mantiene el mismo conjunto de datos proporcionando redundancia y disponibilidad, pueden tener varios nodos, pero debe tener un solo nodo principal y un nodo secundario como mínimo, además que pueden tener un nodo arbitro, pero solo es arbitro, además si el nodo principal no está funcionado, el nodo secundario que este disponible selecciona el nuevo nodo primario. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.809,
                                            "Frase": "la arquitectura en replica-set es un grupo de procesos mongod que mantiene el mismo conjunto de datos proporcionando redundancia y disponibilidad, pueden tener varios nodos, pero debe tener un solo nodo principal y un nodo secundario como mínimo, además que pueden tener un nodo arbitro, pero solo es arbitro, además si el nodo principal no está funcionado, el nodo secundario que este disponible selecciona el nuevo nodo primario. la principal diferencia con mongodump que mongodump son para bases de datos pequeñas de mongodb. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "la arquitectura en replica-set es un grupo de procesos mongod que mantiene el mismo conjunto de datos proporcionando redundancia y disponibilidad, pueden tener varios nodos, pero debe tener un solo nodo principal y un nodo secundario como mínimo, además que pueden tener un nodo arbitro, pero solo es arbitro, además si el nodo principal no está funcionado, el nodo secundario que este disponible selecciona el nuevo nodo primario. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "la arquitectura en replica-set es un grupo de procesos mongod que mantiene el mismo conjunto de datos proporcionando redundancia y disponibilidad, pueden tener varios nodos, pero debe tener un solo nodo principal y un nodo secundario como mínimo, además que pueden tener un nodo arbitro, pero solo es arbitro, además si el nodo principal no está funcionado, el nodo secundario que este disponible selecciona el nuevo nodo primario. la principal diferencia con mongodump que mongodump son para bases de datos pequeñas de mongodb. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "la principal diferencia con mongodump que mongodump son para bases de datos pequeñas de mongodb. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.839,
                                            "Frase": "la arquitectura en replica-set es un grupo de procesos mongod que mantiene el mismo conjunto de datos proporcionando redundancia y disponibilidad, pueden tener varios nodos, pero debe tener un solo nodo principal y un nodo secundario como mínimo, además que pueden tener un nodo arbitro, pero solo es arbitro, además si el nodo principal no está funcionado, el nodo secundario que este disponible selecciona el nuevo nodo primario. la principal diferencia con mongodump que mongodump son para bases de datos pequeñas de mongodb. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.854,
                                            "Frase": "la arquitectura en replica-set es un grupo de procesos mongod que mantiene el mismo conjunto de datos proporcionando redundancia y disponibilidad, pueden tener varios nodos, pero debe tener un solo nodo principal y un nodo secundario como mínimo, además que pueden tener un nodo arbitro, pero solo es arbitro, además si el nodo principal no está funcionado, el nodo secundario que este disponible selecciona el nuevo nodo primario. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "la arquitectura en replica-set es un grupo de procesos mongod que mantiene el mismo conjunto de datos proporcionando redundancia y disponibilidad, pueden tener varios nodos, pero debe tener un solo nodo principal y un nodo secundario como mínimo, además que pueden tener un nodo arbitro, pero solo es arbitro, además si el nodo principal no está funcionado, el nodo secundario que este disponible selecciona el nuevo nodo primario. la principal diferencia con mongodump que mongodump son para bases de datos pequeñas de mongodb. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "79afddaced6c773e45347fd7982fb54d": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.863,
                                            "Frase": "el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "consiste en un mecanismo mediante el cual, se tiene una recuperación automática frente a fallos a través de la redundancia de los datos. el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.712,
                                            "Frase": "la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.733,
                                            "Frase": "a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.742,
                                            "Frase": "cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.734,
                                            "Frase": "además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.717,
                                            "Frase": "los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.726,
                                            "Frase": "el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.727,
                                            "Frase": "consiste en un mecanismo mediante el cual, se tiene una recuperación automática frente a fallos a través de la redundancia de los datos. el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "consiste en un mecanismo mediante el cual, se tiene una recuperación automática frente a fallos a través de la redundancia de los datos. el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "consiste en un mecanismo mediante el cual, se tiene una recuperación automática frente a fallos a través de la redundancia de los datos. el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.883,
                                            "Frase": "el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.883,
                                            "Frase": "consiste en un mecanismo mediante el cual, se tiene una recuperación automática frente a fallos a través de la redundancia de los datos. el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.877,
                                            "Frase": "consiste en un mecanismo mediante el cual, se tiene una recuperación automática frente a fallos a través de la redundancia de los datos. el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "consiste en un mecanismo mediante el cual, se tiene una recuperación automática frente a fallos a través de la redundancia de los datos. el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "consiste en un mecanismo mediante el cual, se tiene una recuperación automática frente a fallos a través de la redundancia de los datos. el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "consiste en un mecanismo mediante el cual, se tiene una recuperación automática frente a fallos a través de la redundancia de los datos. el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "consiste en un mecanismo mediante el cual, se tiene una recuperación automática frente a fallos a través de la redundancia de los datos. el mecanismo se basa en tener un nodo primario que va replicando sus datos a los nodos secundarios, estos se ocuparán en todo momento de tener una copia actualizada de dichos datos, de este modo en caso de fallo del nodo primario, alguno de estos sea elegido como el nuevo nodo primario y de este modo se logre alta disponibilidad frente a fallos. los nodos secundarios pueden ser de tipo: prioridad 0 los cuales no pueden ser primarios, ocultos, retrasados o árbitros. además de la redundancia de los datos y la alta disponibilidad, esta arquitectura nos aporta la ventaja de balancear la carga automáticamente entre los nodos del replica-set en caso de lectura, aumentando así el rendimiento. cabe destacar que para la escritura únicamente se usa el nodo primario. a la hora de tener una configuración mínima, se requiere un mínimo de 3 nodos, los cuales son 1 primario y 2 secundarios. la principal diferencia con mongodump es que a pesar de poderse replicar los datos y, restaurar con mongostore, es un proceso manual y con la configuración replica-set se tiene una recuperación automática frente a fallos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "403a05fd0bcd4addf67ce479533c4159": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.863,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.86,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.869,
                                            "Frase": "habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. además, la comunicación entre los nodos se lleva a cabo través de pings (avisos) cada 2 segundos para confirmar que todos ellos siguen activos. mongodump permite exportar la base de datos, colección o parte de la base de datos a otro servidor, pero no garantiza la disponibilidad en paralelo además de que no tiene por qué tener la base de datos completa en otro servidor mientras que el replica-set consiste precisamente en poder recuperar la base de datos completa. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. además, la comunicación entre los nodos se lleva a cabo través de pings (avisos) cada 2 segundos para confirmar que todos ellos siguen activos. mongodump permite exportar la base de datos, colección o parte de la base de datos a otro servidor, pero no garantiza la disponibilidad en paralelo además de que no tiene por qué tener la base de datos completa en otro servidor mientras que el replica-set consiste precisamente en poder recuperar la base de datos completa. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.767,
                                            "Frase": "si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.757,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.759,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.783,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.795,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.767,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. además, la comunicación entre los nodos se lleva a cabo través de pings (avisos) cada 2 segundos para confirmar que todos ellos siguen activos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.752,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. además, la comunicación entre los nodos se lleva a cabo través de pings (avisos) cada 2 segundos para confirmar que todos ellos siguen activos. mongodump permite exportar la base de datos, colección o parte de la base de datos a otro servidor, pero no garantiza la disponibilidad en paralelo además de que no tiene por qué tener la base de datos completa en otro servidor mientras que el replica-set consiste precisamente en poder recuperar la base de datos completa. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.968,
                                            "Frase": "habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.964,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. además, la comunicación entre los nodos se lleva a cabo través de pings (avisos) cada 2 segundos para confirmar que todos ellos siguen activos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. además, la comunicación entre los nodos se lleva a cabo través de pings (avisos) cada 2 segundos para confirmar que todos ellos siguen activos. mongodump permite exportar la base de datos, colección o parte de la base de datos a otro servidor, pero no garantiza la disponibilidad en paralelo además de que no tiene por qué tener la base de datos completa en otro servidor mientras que el replica-set consiste precisamente en poder recuperar la base de datos completa. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.955,
                                            "Frase": "mongodump permite exportar la base de datos, colección o parte de la base de datos a otro servidor, pero no garantiza la disponibilidad en paralelo además de que no tiene por qué tener la base de datos completa en otro servidor mientras que el replica-set consiste precisamente en poder recuperar la base de datos completa. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "además, la comunicación entre los nodos se lleva a cabo través de pings (avisos) cada 2 segundos para confirmar que todos ellos siguen activos. mongodump permite exportar la base de datos, colección o parte de la base de datos a otro servidor, pero no garantiza la disponibilidad en paralelo además de que no tiene por qué tener la base de datos completa en otro servidor mientras que el replica-set consiste precisamente en poder recuperar la base de datos completa. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. además, la comunicación entre los nodos se lleva a cabo través de pings (avisos) cada 2 segundos para confirmar que todos ellos siguen activos. mongodump permite exportar la base de datos, colección o parte de la base de datos a otro servidor, pero no garantiza la disponibilidad en paralelo además de que no tiene por qué tener la base de datos completa en otro servidor mientras que el replica-set consiste precisamente en poder recuperar la base de datos completa. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. además, la comunicación entre los nodos se lleva a cabo través de pings (avisos) cada 2 segundos para confirmar que todos ellos siguen activos. mongodump permite exportar la base de datos, colección o parte de la base de datos a otro servidor, pero no garantiza la disponibilidad en paralelo además de que no tiene por qué tener la base de datos completa en otro servidor mientras que el replica-set consiste precisamente en poder recuperar la base de datos completa. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. además, la comunicación entre los nodos se lleva a cabo través de pings (avisos) cada 2 segundos para confirmar que todos ellos siguen activos. mongodump permite exportar la base de datos, colección o parte de la base de datos a otro servidor, pero no garantiza la disponibilidad en paralelo además de que no tiene por qué tener la base de datos completa en otro servidor mientras que el replica-set consiste precisamente en poder recuperar la base de datos completa. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. además, la comunicación entre los nodos se lleva a cabo través de pings (avisos) cada 2 segundos para confirmar que todos ellos siguen activos. mongodump permite exportar la base de datos, colección o parte de la base de datos a otro servidor, pero no garantiza la disponibilidad en paralelo además de que no tiene por qué tener la base de datos completa en otro servidor mientras que el replica-set consiste precisamente en poder recuperar la base de datos completa. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. además, la comunicación entre los nodos se lleva a cabo través de pings (avisos) cada 2 segundos para confirmar que todos ellos siguen activos. mongodump permite exportar la base de datos, colección o parte de la base de datos a otro servidor, pero no garantiza la disponibilidad en paralelo además de que no tiene por qué tener la base de datos completa en otro servidor mientras que el replica-set consiste precisamente en poder recuperar la base de datos completa. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "mongodump permite exportar la base de datos, colección o parte de la base de datos a otro servidor, pero no garantiza la disponibilidad en paralelo además de que no tiene por qué tener la base de datos completa en otro servidor mientras que el replica-set consiste precisamente en poder recuperar la base de datos completa. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.95,
                                            "Frase": "habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. además, la comunicación entre los nodos se lleva a cabo través de pings (avisos) cada 2 segundos para confirmar que todos ellos siguen activos. mongodump permite exportar la base de datos, colección o parte de la base de datos a otro servidor, pero no garantiza la disponibilidad en paralelo además de que no tiene por qué tener la base de datos completa en otro servidor mientras que el replica-set consiste precisamente en poder recuperar la base de datos completa. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "la función de un replica-set es la distribución de los datos en diferentes servidores para los cuáles existen tres nodos para una configuración mínima. habrá dos nodos de almacenamiento, de los cuáles uno será el primario y otro el de replicación. el primario recibe las consultas y replica las operaciones al nodo de replicación. el tercer nodo será el que recibe el nombre de árbitro y decide qué nodo debe actuar como primario o como replicación. si el nodo primario deja de tener disponibilidad, el nodo de replicación ocupará su lugar. además, la comunicación entre los nodos se lleva a cabo través de pings (avisos) cada 2 segundos para confirmar que todos ellos siguen activos. mongodump permite exportar la base de datos, colección o parte de la base de datos a otro servidor, pero no garantiza la disponibilidad en paralelo además de que no tiene por qué tener la base de datos completa en otro servidor mientras que el replica-set consiste precisamente en poder recuperar la base de datos completa. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "c7daf68382ba769cc135ad1301141fb8": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.816,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.772,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.761,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. en ese caso, el nodo secundario pasará a ser primario y el antiguo primario, cuando vuelva a estar operativo, entrará como secundario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.77,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. en ese caso, el nodo secundario pasará a ser primario y el antiguo primario, cuando vuelva a estar operativo, entrará como secundario. lo importante de este proceso es que toda la información (datos, actualizaciones, etc) que le llegaba al primario, la recibía también el nodo secundario, de forma que en pocos segundos se recuperaría el proceso. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.78,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. en ese caso, el nodo secundario pasará a ser primario y el antiguo primario, cuando vuelva a estar operativo, entrará como secundario. lo importante de este proceso es que toda la información (datos, actualizaciones, etc) que le llegaba al primario, la recibía también el nodo secundario, de forma que en pocos segundos se recuperaría el proceso. en el caso del replicaset el problema se resuelve de manera instantánea, mientras que con las funciones mongodump y mongorestore es totalmente manual y hay que prever la situación realizando copias previamente. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.828,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.81,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. en ese caso, el nodo secundario pasará a ser primario y el antiguo primario, cuando vuelva a estar operativo, entrará como secundario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.8,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. en ese caso, el nodo secundario pasará a ser primario y el antiguo primario, cuando vuelva a estar operativo, entrará como secundario. lo importante de este proceso es que toda la información (datos, actualizaciones, etc) que le llegaba al primario, la recibía también el nodo secundario, de forma que en pocos segundos se recuperaría el proceso. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.794,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. en ese caso, el nodo secundario pasará a ser primario y el antiguo primario, cuando vuelva a estar operativo, entrará como secundario. lo importante de este proceso es que toda la información (datos, actualizaciones, etc) que le llegaba al primario, la recibía también el nodo secundario, de forma que en pocos segundos se recuperaría el proceso. en el caso del replicaset el problema se resuelve de manera instantánea, mientras que con las funciones mongodump y mongorestore es totalmente manual y hay que prever la situación realizando copias previamente. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. en ese caso, el nodo secundario pasará a ser primario y el antiguo primario, cuando vuelva a estar operativo, entrará como secundario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. en ese caso, el nodo secundario pasará a ser primario y el antiguo primario, cuando vuelva a estar operativo, entrará como secundario. lo importante de este proceso es que toda la información (datos, actualizaciones, etc) que le llegaba al primario, la recibía también el nodo secundario, de forma que en pocos segundos se recuperaría el proceso. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. en ese caso, el nodo secundario pasará a ser primario y el antiguo primario, cuando vuelva a estar operativo, entrará como secundario. lo importante de este proceso es que toda la información (datos, actualizaciones, etc) que le llegaba al primario, la recibía también el nodo secundario, de forma que en pocos segundos se recuperaría el proceso. en el caso del replicaset el problema se resuelve de manera instantánea, mientras que con las funciones mongodump y mongorestore es totalmente manual y hay que prever la situación realizando copias previamente. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "en el caso del replicaset el problema se resuelve de manera instantánea, mientras que con las funciones mongodump y mongorestore es totalmente manual y hay que prever la situación realizando copias previamente. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "lo importante de este proceso es que toda la información (datos, actualizaciones, etc) que le llegaba al primario, la recibía también el nodo secundario, de forma que en pocos segundos se recuperaría el proceso. en el caso del replicaset el problema se resuelve de manera instantánea, mientras que con las funciones mongodump y mongorestore es totalmente manual y hay que prever la situación realizando copias previamente. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.857,
                                            "Frase": "en ese caso, el nodo secundario pasará a ser primario y el antiguo primario, cuando vuelva a estar operativo, entrará como secundario. lo importante de este proceso es que toda la información (datos, actualizaciones, etc) que le llegaba al primario, la recibía también el nodo secundario, de forma que en pocos segundos se recuperaría el proceso. en el caso del replicaset el problema se resuelve de manera instantánea, mientras que con las funciones mongodump y mongorestore es totalmente manual y hay que prever la situación realizando copias previamente. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.82,
                                            "Frase": "los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. en ese caso, el nodo secundario pasará a ser primario y el antiguo primario, cuando vuelva a estar operativo, entrará como secundario. lo importante de este proceso es que toda la información (datos, actualizaciones, etc) que le llegaba al primario, la recibía también el nodo secundario, de forma que en pocos segundos se recuperaría el proceso. en el caso del replicaset el problema se resuelve de manera instantánea, mientras que con las funciones mongodump y mongorestore es totalmente manual y hay que prever la situación realizando copias previamente. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.814,
                                            "Frase": "está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. en ese caso, el nodo secundario pasará a ser primario y el antiguo primario, cuando vuelva a estar operativo, entrará como secundario. lo importante de este proceso es que toda la información (datos, actualizaciones, etc) que le llegaba al primario, la recibía también el nodo secundario, de forma que en pocos segundos se recuperaría el proceso. en el caso del replicaset el problema se resuelve de manera instantánea, mientras que con las funciones mongodump y mongorestore es totalmente manual y hay que prever la situación realizando copias previamente. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.833,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. en ese caso, el nodo secundario pasará a ser primario y el antiguo primario, cuando vuelva a estar operativo, entrará como secundario. lo importante de este proceso es que toda la información (datos, actualizaciones, etc) que le llegaba al primario, la recibía también el nodo secundario, de forma que en pocos segundos se recuperaría el proceso. en el caso del replicaset el problema se resuelve de manera instantánea, mientras que con las funciones mongodump y mongorestore es totalmente manual y hay que prever la situación realizando copias previamente. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. en ese caso, el nodo secundario pasará a ser primario y el antiguo primario, cuando vuelva a estar operativo, entrará como secundario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. en ese caso, el nodo secundario pasará a ser primario y el antiguo primario, cuando vuelva a estar operativo, entrará como secundario. lo importante de este proceso es que toda la información (datos, actualizaciones, etc) que le llegaba al primario, la recibía también el nodo secundario, de forma que en pocos segundos se recuperaría el proceso. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "un replicaset consiste en un sistema de respaldo de mongodb, que basado en un modelo maestro-esclavo refinado cuya función es evitar la caída del sistema por fallo en la máquina donde corre el dbms. está compuesto de, al menos, de 3 réplicas que interactúan entre ellas cada 3 segundos mediante pings (un replicaset será primario, otro secundario y el tercero o árbitro tan solo sirve para votar cuál de ellos será el primario (el árbitro no puede ser primario)). los nodos votan al primario y el que gana la votación ejercerá como tal hasta el momento en el que se detecte que este se ha caído. en ese caso, el nodo secundario pasará a ser primario y el antiguo primario, cuando vuelva a estar operativo, entrará como secundario. lo importante de este proceso es que toda la información (datos, actualizaciones, etc) que le llegaba al primario, la recibía también el nodo secundario, de forma que en pocos segundos se recuperaría el proceso. en el caso del replicaset el problema se resuelve de manera instantánea, mientras que con las funciones mongodump y mongorestore es totalmente manual y hay que prever la situación realizando copias previamente. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "a0322a28d3898a031798a6cee6af4178": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.824,
                                            "Frase": "por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.816,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.801,
                                            "Frase": "se necesitan mínimo 3 instancias (servers) para una configuración mínima de replica-set. a partir de allí se pueden agregar más nodos para que por ejemplo sirvan como árbitro. cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.829,
                                            "Frase": "replica-set son los mecanismos de mongodb para garantizar replicación y disponibilidad. se necesitan mínimo 3 instancias (servers) para una configuración mínima de replica-set. a partir de allí se pueden agregar más nodos para que por ejemplo sirvan como árbitro. cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.839,
                                            "Frase": "replica-set son los mecanismos de mongodb para garantizar replicación y disponibilidad. se necesitan mínimo 3 instancias (servers) para una configuración mínima de replica-set. a partir de allí se pueden agregar más nodos para que por ejemplo sirvan como árbitro. cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.843,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.831,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.794,
                                            "Frase": "se necesitan mínimo 3 instancias (servers) para una configuración mínima de replica-set. a partir de allí se pueden agregar más nodos para que por ejemplo sirvan como árbitro. cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.794,
                                            "Frase": "se necesitan mínimo 3 instancias (servers) para una configuración mínima de replica-set. a partir de allí se pueden agregar más nodos para que por ejemplo sirvan como árbitro. cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.782,
                                            "Frase": "replica-set son los mecanismos de mongodb para garantizar replicación y disponibilidad. se necesitan mínimo 3 instancias (servers) para una configuración mínima de replica-set. a partir de allí se pueden agregar más nodos para que por ejemplo sirvan como árbitro. cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "se necesitan mínimo 3 instancias (servers) para una configuración mínima de replica-set. a partir de allí se pueden agregar más nodos para que por ejemplo sirvan como árbitro. cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.899,
                                            "Frase": "se necesitan mínimo 3 instancias (servers) para una configuración mínima de replica-set. a partir de allí se pueden agregar más nodos para que por ejemplo sirvan como árbitro. cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "replica-set son los mecanismos de mongodb para garantizar replicación y disponibilidad. se necesitan mínimo 3 instancias (servers) para una configuración mínima de replica-set. a partir de allí se pueden agregar más nodos para que por ejemplo sirvan como árbitro. cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.869,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "a partir de allí se pueden agregar más nodos para que por ejemplo sirvan como árbitro. cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "se necesitan mínimo 3 instancias (servers) para una configuración mínima de replica-set. a partir de allí se pueden agregar más nodos para que por ejemplo sirvan como árbitro. cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.899,
                                            "Frase": "replica-set son los mecanismos de mongodb para garantizar replicación y disponibilidad. se necesitan mínimo 3 instancias (servers) para una configuración mínima de replica-set. a partir de allí se pueden agregar más nodos para que por ejemplo sirvan como árbitro. cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "se necesitan mínimo 3 instancias (servers) para una configuración mínima de replica-set. a partir de allí se pueden agregar más nodos para que por ejemplo sirvan como árbitro. cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "se necesitan mínimo 3 instancias (servers) para una configuración mínima de replica-set. a partir de allí se pueden agregar más nodos para que por ejemplo sirvan como árbitro. cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "replica-set son los mecanismos de mongodb para garantizar replicación y disponibilidad. se necesitan mínimo 3 instancias (servers) para una configuración mínima de replica-set. a partir de allí se pueden agregar más nodos para que por ejemplo sirvan como árbitro. cuando un nodo primario deja de tener disponibilidad es alertado por un mecanismo de heartbeat, que constantemente está monitoreando los nodos, y entonces un nodo secundario toma su lugar y se convierte en primario. por otro lado, se tiene mongodump permite generar copias de la base de datos exportando un fichero que puede ser restaurado. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "f7fda6adc7b4f3b02e958f2d6b3d96e9": {
                      "minipregunta0": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta1": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta2": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta3": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "respuesta_completa": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      }
           },
           "64ee183c1ed20833aefaacf4daa60f67": {
                      "minipregunta0": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta1": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta2": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta3": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "respuesta_completa": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      }
           },
           "34ce67a2b91a9f3310ff0e93ef1a9c45": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.862,
                                            "Frase": "consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.854,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. el maestro va enviando a los esclavos todos los cambios que va realizando para que estos estén actualizados en todo momento. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.857,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. el maestro va enviando a los esclavos todos los cambios que va realizando para que estos estén actualizados en todo momento. una configuración mínima implica tres máquinas. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. el maestro va enviando a los esclavos todos los cambios que va realizando para que estos estén actualizados en todo momento. una configuración mínima implica tres máquinas. un maestro, un esclavo y un árbitro. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.848,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. el maestro va enviando a los esclavos todos los cambios que va realizando para que estos estén actualizados en todo momento. una configuración mínima implica tres máquinas. un maestro, un esclavo y un árbitro. estas tres máquinas están constantemente enviándose mensajes de ping para saber que están activas. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.856,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.856,
                                            "Frase": "una configuración mínima implica tres máquinas. un maestro, un esclavo y un árbitro. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.819,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.818,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.796,
                                            "Frase": "una configuración mínima implica tres máquinas. un maestro, un esclavo y un árbitro. estas tres máquinas están constantemente enviándose mensajes de ping para saber que están activas. en caso de que una máquina maestra deje de estar activa, el árbitro indicará cual de los esclavos se convertirá en maestro mediante un sistema de votación en el que participan las máquinas activas. la principal diferencia con mongodump es que este tipo de arquitectura restaura el servicio en cuestión de segundos mientras que con mongodump hay que restaurar una copia de seguridad completa previamente almacenada, lo que puede llevar muchos minutos o incluso horas. ",
                                            "Lineas": "Lines 6 - 10"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.79,
                                            "Frase": "esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. el maestro va enviando a los esclavos todos los cambios que va realizando para que estos estén actualizados en todo momento. una configuración mínima implica tres máquinas. un maestro, un esclavo y un árbitro. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.815,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. el maestro va enviando a los esclavos todos los cambios que va realizando para que estos estén actualizados en todo momento. una configuración mínima implica tres máquinas. un maestro, un esclavo y un árbitro. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.799,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. el maestro va enviando a los esclavos todos los cambios que va realizando para que estos estén actualizados en todo momento. una configuración mínima implica tres máquinas. un maestro, un esclavo y un árbitro. estas tres máquinas están constantemente enviándose mensajes de ping para saber que están activas. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "en caso de que una máquina maestra deje de estar activa, el árbitro indicará cual de los esclavos se convertirá en maestro mediante un sistema de votación en el que participan las máquinas activas. ",
                                            "Lineas": "Line 9"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "en caso de que una máquina maestra deje de estar activa, el árbitro indicará cual de los esclavos se convertirá en maestro mediante un sistema de votación en el que participan las máquinas activas. la principal diferencia con mongodump es que este tipo de arquitectura restaura el servicio en cuestión de segundos mientras que con mongodump hay que restaurar una copia de seguridad completa previamente almacenada, lo que puede llevar muchos minutos o incluso horas. ",
                                            "Lineas": "Lines 9 - 10"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "un maestro, un esclavo y un árbitro. estas tres máquinas están constantemente enviándose mensajes de ping para saber que están activas. en caso de que una máquina maestra deje de estar activa, el árbitro indicará cual de los esclavos se convertirá en maestro mediante un sistema de votación en el que participan las máquinas activas. ",
                                            "Lineas": "Lines 7 - 9"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "un maestro, un esclavo y un árbitro. estas tres máquinas están constantemente enviándose mensajes de ping para saber que están activas. en caso de que una máquina maestra deje de estar activa, el árbitro indicará cual de los esclavos se convertirá en maestro mediante un sistema de votación en el que participan las máquinas activas. la principal diferencia con mongodump es que este tipo de arquitectura restaura el servicio en cuestión de segundos mientras que con mongodump hay que restaurar una copia de seguridad completa previamente almacenada, lo que puede llevar muchos minutos o incluso horas. ",
                                            "Lineas": "Lines 7 - 10"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "una configuración mínima implica tres máquinas. un maestro, un esclavo y un árbitro. estas tres máquinas están constantemente enviándose mensajes de ping para saber que están activas. en caso de que una máquina maestra deje de estar activa, el árbitro indicará cual de los esclavos se convertirá en maestro mediante un sistema de votación en el que participan las máquinas activas. la principal diferencia con mongodump es que este tipo de arquitectura restaura el servicio en cuestión de segundos mientras que con mongodump hay que restaurar una copia de seguridad completa previamente almacenada, lo que puede llevar muchos minutos o incluso horas. ",
                                            "Lineas": "Lines 6 - 10"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.892,
                                            "Frase": "esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. el maestro va enviando a los esclavos todos los cambios que va realizando para que estos estén actualizados en todo momento. una configuración mínima implica tres máquinas. un maestro, un esclavo y un árbitro. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. el maestro va enviando a los esclavos todos los cambios que va realizando para que estos estén actualizados en todo momento. una configuración mínima implica tres máquinas. un maestro, un esclavo y un árbitro. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. el maestro va enviando a los esclavos todos los cambios que va realizando para que estos estén actualizados en todo momento. una configuración mínima implica tres máquinas. un maestro, un esclavo y un árbitro. estas tres máquinas están constantemente enviándose mensajes de ping para saber que están activas. en caso de que una máquina maestra deje de estar activa, el árbitro indicará cual de los esclavos se convertirá en maestro mediante un sistema de votación en el que participan las máquinas activas. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "la principal diferencia con mongodump es que este tipo de arquitectura restaura el servicio en cuestión de segundos mientras que con mongodump hay que restaurar una copia de seguridad completa previamente almacenada, lo que puede llevar muchos minutos o incluso horas. ",
                                            "Lineas": "Line 10"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. el maestro va enviando a los esclavos todos los cambios que va realizando para que estos estén actualizados en todo momento. una configuración mínima implica tres máquinas. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. el maestro va enviando a los esclavos todos los cambios que va realizando para que estos estén actualizados en todo momento. una configuración mínima implica tres máquinas. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. el maestro va enviando a los esclavos todos los cambios que va realizando para que estos estén actualizados en todo momento. una configuración mínima implica tres máquinas. un maestro, un esclavo y un árbitro. estas tres máquinas están constantemente enviándose mensajes de ping para saber que están activas. en caso de que una máquina maestra deje de estar activa, el árbitro indicará cual de los esclavos se convertirá en maestro mediante un sistema de votación en el que participan las máquinas activas. ",
                                            "Lineas": "Lines 3 - 9"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. el maestro va enviando a los esclavos todos los cambios que va realizando para que estos estén actualizados en todo momento. una configuración mínima implica tres máquinas. un maestro, un esclavo y un árbitro. estas tres máquinas están constantemente enviándose mensajes de ping para saber que están activas. en caso de que una máquina maestra deje de estar activa, el árbitro indicará cual de los esclavos se convertirá en maestro mediante un sistema de votación en el que participan las máquinas activas. la principal diferencia con mongodump es que este tipo de arquitectura restaura el servicio en cuestión de segundos mientras que con mongodump hay que restaurar una copia de seguridad completa previamente almacenada, lo que puede llevar muchos minutos o incluso horas. ",
                                            "Lineas": "Lines 3 - 10"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "una configuración mínima implica tres máquinas. un maestro, un esclavo y un árbitro. estas tres máquinas están constantemente enviándose mensajes de ping para saber que están activas. en caso de que una máquina maestra deje de estar activa, el árbitro indicará cual de los esclavos se convertirá en maestro mediante un sistema de votación en el que participan las máquinas activas. la principal diferencia con mongodump es que este tipo de arquitectura restaura el servicio en cuestión de segundos mientras que con mongodump hay que restaurar una copia de seguridad completa previamente almacenada, lo que puede llevar muchos minutos o incluso horas. ",
                                            "Lineas": "Lines 6 - 10"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. el maestro va enviando a los esclavos todos los cambios que va realizando para que estos estén actualizados en todo momento. una configuración mínima implica tres máquinas. un maestro, un esclavo y un árbitro. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. el maestro va enviando a los esclavos todos los cambios que va realizando para que estos estén actualizados en todo momento. una configuración mínima implica tres máquinas. un maestro, un esclavo y un árbitro. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "una arquitectura en replica-set en mongodb es un mecanismo de alta disponibilidad. esto quiere decir que, en caso de fallo de una máquina, el servicio quedaría restaurado en cuestión de segundos sin que haya un impacto significativo. consiste en tener al menos una máquina secundaria que contiene una copia idéntica de la base de datos presente en la máquina principal. se trata de una arquitectura de tipo maestro-esclavo. el maestro va enviando a los esclavos todos los cambios que va realizando para que estos estén actualizados en todo momento. una configuración mínima implica tres máquinas. un maestro, un esclavo y un árbitro. estas tres máquinas están constantemente enviándose mensajes de ping para saber que están activas. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "9086ffc9bd11901abadbe95477d2292c": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.848,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.847,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.851,
                                            "Frase": "el árbitro sirve en caso de que exista un empate. la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. sin embargo, ambos son formas de garantizar la seguridad de los datos. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.818,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.791,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.804,
                                            "Frase": "un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. sin embargo, ambos son formas de garantizar la seguridad de los datos. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.81,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.827,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. sin embargo, ambos son formas de garantizar la seguridad de los datos. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.804,
                                            "Frase": "el árbitro sirve en caso de que exista un empate. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.796,
                                            "Frase": "mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.829,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.808,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.77,
                                            "Frase": "mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.778,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.763,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.76,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. sin embargo, ambos son formas de garantizar la seguridad de los datos. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.882,
                                            "Frase": "el árbitro sirve en caso de que exista un empate. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. sin embargo, ambos son formas de garantizar la seguridad de los datos. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. sin embargo, ambos son formas de garantizar la seguridad de los datos. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. sin embargo, ambos son formas de garantizar la seguridad de los datos. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "el árbitro sirve en caso de que exista un empate. la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. sin embargo, ambos son formas de garantizar la seguridad de los datos. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. sin embargo, ambos son formas de garantizar la seguridad de los datos. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. sin embargo, ambos son formas de garantizar la seguridad de los datos. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.877,
                                            "Frase": "un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. sin embargo, ambos son formas de garantizar la seguridad de los datos. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.875,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. sin embargo, ambos son formas de garantizar la seguridad de los datos. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.862,
                                            "Frase": "la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "mongodb nos ofrece una forma de mantener seguros nuestros datos mediante la redundancia de los mismos, ofreciendo alta disponibilidad sobre ellos. mongodb ha realizado un refinamiento sobre el sistema maestro-esclavo, en el cual el nodo maestro recibe y ejecuta las instrucciones y el esclavo las repite. un replicaset consta debe constar de un mínimo de tres nodos: el primario (recibe y ejecuta las instrucciones), el secundario (repite lo que haga el primario) y el árbitro (en caso de que falle el primario, vota para cual debe sustituirle). entre los nodos primario, secundario y árbitro, se envían pings o avisos para comprobar que todos continúan conectados. en el caso de que existan más nodos secundarios, y se cayese el primario, todos los secundarios pueden votar para elegir cual se convierte en primario, pero no todos los secundarios pueden convertirse en primarios. el árbitro sirve en caso de que exista un empate. la diferencia con mongodump radica en que mongodump realiza una copia de los datos, pero no existe esta arquitectura en línea para comprobar todos los pasos que realiza el primario y la comprobación de qué nodos se encuentran activos. sin embargo, ambos son formas de garantizar la seguridad de los datos. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "2a6cb06588a72b29abded5a54d4991c6": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.86,
                                            "Frase": "la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.863,
                                            "Frase": "un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.867,
                                            "Frase": "esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.873,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.859,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.863,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.865,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.852,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. el nodo secundario con más votos pasará a primario, y el antiguo nodo primario cuando se reincorpore lo hará como secundario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.808,
                                            "Frase": "un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.826,
                                            "Frase": "un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.815,
                                            "Frase": "esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.816,
                                            "Frase": "un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.828,
                                            "Frase": "un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.823,
                                            "Frase": "un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. el nodo secundario con más votos pasará a primario, y el antiguo nodo primario cuando se reincorpore lo hará como secundario. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.819,
                                            "Frase": "esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. el nodo secundario con más votos pasará a primario, y el antiguo nodo primario cuando se reincorpore lo hará como secundario. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.812,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. el nodo secundario con más votos pasará a primario, y el antiguo nodo primario cuando se reincorpore lo hará como secundario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "- 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "- 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. el nodo secundario con más votos pasará a primario, y el antiguo nodo primario cuando se reincorpore lo hará como secundario. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "- 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. el nodo secundario con más votos pasará a primario, y el antiguo nodo primario cuando se reincorpore lo hará como secundario. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. el nodo secundario con más votos pasará a primario, y el antiguo nodo primario cuando se reincorpore lo hará como secundario. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. el nodo secundario con más votos pasará a primario, y el antiguo nodo primario cuando se reincorpore lo hará como secundario. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. el nodo secundario con más votos pasará a primario, y el antiguo nodo primario cuando se reincorpore lo hará como secundario. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. el nodo secundario con más votos pasará a primario, y el antiguo nodo primario cuando se reincorpore lo hará como secundario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.855,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.86,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.852,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.848,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.856,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.858,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. el nodo secundario con más votos pasará a primario, y el antiguo nodo primario cuando se reincorpore lo hará como secundario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.882,
                                            "Frase": "en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. el nodo secundario con más votos pasará a primario, y el antiguo nodo primario cuando se reincorpore lo hará como secundario. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "la replicación es una técnica de respaldo que consiste en realizar una copia de los datos en varios nodos (servidores) cada vez que se realiza una escritura en el nodo primario. esta copia se efectúa de forma automática, no de forma manual como en el volcado de datos (dump). un réplica set ofrece respaldo (ante una caída del nodo primario se tiene una copia de los datos), disponibilidad (ante una caída del nodo primario, un secundario pasará a primario) y balanceo de carga (la escritura se realiza en el nodo primario y la lectura en el primario o secundario/s). la configuración mínima de un réplica set consta de: - 1 nodo primario, donde se pueden realizar operaciones de escritura y lectura. - 1 nodo secundario, donde solo se pueden leer datos. - 1 nodo árbitro, el cual establece con su voto de desempate qué nodo secundario debe pasar a primario ante una caída del nodo primario. en caso de caída del servidor primario, los nodos secundarios lanzan un voto para determinar qué nodo debe ser primario. el nodo secundario con más votos pasará a primario, y el antiguo nodo primario cuando se reincorpore lo hará como secundario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "7340ac6989d2ee98c2ea47882d5c3032": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.899,
                                            "Frase": "las funciones o el objetivo principales de replica-set es garantizar la alta disponibilidad de la base o bases de datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "se puede lograr la alta disponibilidad ejecutando o corriendo varias instancias de mongo. la configuración básica de las instancias es: un primario y dos secundarios cuando un nodo primario deja de estar disponible inmediatamente uno de los segundarios toma su lugar la principal diferencia entre replica-set y mongodump es que mongodump es para exportar datos implementaciones independientes es decir conjunto de replicas o clústeres fragmentados. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "las funciones o el objetivo principales de replica-set es garantizar la alta disponibilidad de la base o bases de datos. se puede lograr la alta disponibilidad ejecutando o corriendo varias instancias de mongo. la configuración básica de las instancias es: un primario y dos secundarios cuando un nodo primario deja de estar disponible inmediatamente uno de los segundarios toma su lugar la principal diferencia entre replica-set y mongodump es que mongodump es para exportar datos implementaciones independientes es decir conjunto de replicas o clústeres fragmentados. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.838,
                                            "Frase": "la configuración básica de las instancias es: un primario y dos secundarios cuando un nodo primario deja de estar disponible inmediatamente uno de los segundarios toma su lugar la principal diferencia entre replica-set y mongodump es que mongodump es para exportar datos implementaciones independientes es decir conjunto de replicas o clústeres fragmentados. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.811,
                                            "Frase": "se puede lograr la alta disponibilidad ejecutando o corriendo varias instancias de mongo. la configuración básica de las instancias es: un primario y dos secundarios cuando un nodo primario deja de estar disponible inmediatamente uno de los segundarios toma su lugar la principal diferencia entre replica-set y mongodump es que mongodump es para exportar datos implementaciones independientes es decir conjunto de replicas o clústeres fragmentados. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.794,
                                            "Frase": "las funciones o el objetivo principales de replica-set es garantizar la alta disponibilidad de la base o bases de datos. se puede lograr la alta disponibilidad ejecutando o corriendo varias instancias de mongo. la configuración básica de las instancias es: un primario y dos secundarios cuando un nodo primario deja de estar disponible inmediatamente uno de los segundarios toma su lugar la principal diferencia entre replica-set y mongodump es que mongodump es para exportar datos implementaciones independientes es decir conjunto de replicas o clústeres fragmentados. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.862,
                                            "Frase": "la configuración básica de las instancias es: un primario y dos secundarios cuando un nodo primario deja de estar disponible inmediatamente uno de los segundarios toma su lugar la principal diferencia entre replica-set y mongodump es que mongodump es para exportar datos implementaciones independientes es decir conjunto de replicas o clústeres fragmentados. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.86,
                                            "Frase": "se puede lograr la alta disponibilidad ejecutando o corriendo varias instancias de mongo. la configuración básica de las instancias es: un primario y dos secundarios cuando un nodo primario deja de estar disponible inmediatamente uno de los segundarios toma su lugar la principal diferencia entre replica-set y mongodump es que mongodump es para exportar datos implementaciones independientes es decir conjunto de replicas o clústeres fragmentados. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "las funciones o el objetivo principales de replica-set es garantizar la alta disponibilidad de la base o bases de datos. se puede lograr la alta disponibilidad ejecutando o corriendo varias instancias de mongo. la configuración básica de las instancias es: un primario y dos secundarios cuando un nodo primario deja de estar disponible inmediatamente uno de los segundarios toma su lugar la principal diferencia entre replica-set y mongodump es que mongodump es para exportar datos implementaciones independientes es decir conjunto de replicas o clústeres fragmentados. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "la configuración básica de las instancias es: un primario y dos secundarios cuando un nodo primario deja de estar disponible inmediatamente uno de los segundarios toma su lugar la principal diferencia entre replica-set y mongodump es que mongodump es para exportar datos implementaciones independientes es decir conjunto de replicas o clústeres fragmentados. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "se puede lograr la alta disponibilidad ejecutando o corriendo varias instancias de mongo. la configuración básica de las instancias es: un primario y dos secundarios cuando un nodo primario deja de estar disponible inmediatamente uno de los segundarios toma su lugar la principal diferencia entre replica-set y mongodump es que mongodump es para exportar datos implementaciones independientes es decir conjunto de replicas o clústeres fragmentados. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "las funciones o el objetivo principales de replica-set es garantizar la alta disponibilidad de la base o bases de datos. se puede lograr la alta disponibilidad ejecutando o corriendo varias instancias de mongo. la configuración básica de las instancias es: un primario y dos secundarios cuando un nodo primario deja de estar disponible inmediatamente uno de los segundarios toma su lugar la principal diferencia entre replica-set y mongodump es que mongodump es para exportar datos implementaciones independientes es decir conjunto de replicas o clústeres fragmentados. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "la configuración básica de las instancias es: un primario y dos secundarios cuando un nodo primario deja de estar disponible inmediatamente uno de los segundarios toma su lugar la principal diferencia entre replica-set y mongodump es que mongodump es para exportar datos implementaciones independientes es decir conjunto de replicas o clústeres fragmentados. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "se puede lograr la alta disponibilidad ejecutando o corriendo varias instancias de mongo. la configuración básica de las instancias es: un primario y dos secundarios cuando un nodo primario deja de estar disponible inmediatamente uno de los segundarios toma su lugar la principal diferencia entre replica-set y mongodump es que mongodump es para exportar datos implementaciones independientes es decir conjunto de replicas o clústeres fragmentados. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "las funciones o el objetivo principales de replica-set es garantizar la alta disponibilidad de la base o bases de datos. se puede lograr la alta disponibilidad ejecutando o corriendo varias instancias de mongo. la configuración básica de las instancias es: un primario y dos secundarios cuando un nodo primario deja de estar disponible inmediatamente uno de los segundarios toma su lugar la principal diferencia entre replica-set y mongodump es que mongodump es para exportar datos implementaciones independientes es decir conjunto de replicas o clústeres fragmentados. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "b03dbc813da7be54a82dfe329a859b44": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.825,
                                            "Frase": "una replica-set en mongodb es una arquitectura en la que se garantiza la alta disponibilidad de los datos y protección frente a fallos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "una replica-set en mongodb es una arquitectura en la que se garantiza la alta disponibilidad de los datos y protección frente a fallos. para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.814,
                                            "Frase": "una replica-set en mongodb es una arquitectura en la que se garantiza la alta disponibilidad de los datos y protección frente a fallos. para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.724,
                                            "Frase": "uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. si un nodo primario se cae cuando el nodo árbitro se dé cuenta, le comunicará a un nodo secundario que debe pasar a ser primario. el tiempo en el que esto ocurra depende de la frecuencia con la que se haya configurado la comunicación entre los nodos, que por defecto es 2 segundos. su principal diferencia con mongodump es que mongodump realiza una copia de la base de datos cuando lo ejecutamos, mientras que replica-set va copiando en los nodos todos los cambios que vayamos realizando en la base de datos. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.736,
                                            "Frase": "para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. si un nodo primario se cae cuando el nodo árbitro se dé cuenta, le comunicará a un nodo secundario que debe pasar a ser primario. el tiempo en el que esto ocurra depende de la frecuencia con la que se haya configurado la comunicación entre los nodos, que por defecto es 2 segundos. su principal diferencia con mongodump es que mongodump realiza una copia de la base de datos cuando lo ejecutamos, mientras que replica-set va copiando en los nodos todos los cambios que vayamos realizando en la base de datos. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.775,
                                            "Frase": "una replica-set en mongodb es una arquitectura en la que se garantiza la alta disponibilidad de los datos y protección frente a fallos. para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. si un nodo primario se cae cuando el nodo árbitro se dé cuenta, le comunicará a un nodo secundario que debe pasar a ser primario. el tiempo en el que esto ocurra depende de la frecuencia con la que se haya configurado la comunicación entre los nodos, que por defecto es 2 segundos. su principal diferencia con mongodump es que mongodump realiza una copia de la base de datos cuando lo ejecutamos, mientras que replica-set va copiando en los nodos todos los cambios que vayamos realizando en la base de datos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.702,
                                            "Frase": "uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.765,
                                            "Frase": "para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.784,
                                            "Frase": "una replica-set en mongodb es una arquitectura en la que se garantiza la alta disponibilidad de los datos y protección frente a fallos. para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.728,
                                            "Frase": "una replica-set en mongodb es una arquitectura en la que se garantiza la alta disponibilidad de los datos y protección frente a fallos. para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. si un nodo primario se cae cuando el nodo árbitro se dé cuenta, le comunicará a un nodo secundario que debe pasar a ser primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.732,
                                            "Frase": "una replica-set en mongodb es una arquitectura en la que se garantiza la alta disponibilidad de los datos y protección frente a fallos. para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. si un nodo primario se cae cuando el nodo árbitro se dé cuenta, le comunicará a un nodo secundario que debe pasar a ser primario. el tiempo en el que esto ocurra depende de la frecuencia con la que se haya configurado la comunicación entre los nodos, que por defecto es 2 segundos. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.727,
                                            "Frase": "una replica-set en mongodb es una arquitectura en la que se garantiza la alta disponibilidad de los datos y protección frente a fallos. para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. si un nodo primario se cae cuando el nodo árbitro se dé cuenta, le comunicará a un nodo secundario que debe pasar a ser primario. el tiempo en el que esto ocurra depende de la frecuencia con la que se haya configurado la comunicación entre los nodos, que por defecto es 2 segundos. su principal diferencia con mongodump es que mongodump realiza una copia de la base de datos cuando lo ejecutamos, mientras que replica-set va copiando en los nodos todos los cambios que vayamos realizando en la base de datos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.844,
                                            "Frase": "uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "una replica-set en mongodb es una arquitectura en la que se garantiza la alta disponibilidad de los datos y protección frente a fallos. para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.868,
                                            "Frase": "uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. si un nodo primario se cae cuando el nodo árbitro se dé cuenta, le comunicará a un nodo secundario que debe pasar a ser primario. el tiempo en el que esto ocurra depende de la frecuencia con la que se haya configurado la comunicación entre los nodos, que por defecto es 2 segundos. su principal diferencia con mongodump es que mongodump realiza una copia de la base de datos cuando lo ejecutamos, mientras que replica-set va copiando en los nodos todos los cambios que vayamos realizando en la base de datos. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.881,
                                            "Frase": "para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. si un nodo primario se cae cuando el nodo árbitro se dé cuenta, le comunicará a un nodo secundario que debe pasar a ser primario. el tiempo en el que esto ocurra depende de la frecuencia con la que se haya configurado la comunicación entre los nodos, que por defecto es 2 segundos. su principal diferencia con mongodump es que mongodump realiza una copia de la base de datos cuando lo ejecutamos, mientras que replica-set va copiando en los nodos todos los cambios que vayamos realizando en la base de datos. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.871,
                                            "Frase": "una replica-set en mongodb es una arquitectura en la que se garantiza la alta disponibilidad de los datos y protección frente a fallos. para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. si un nodo primario se cae cuando el nodo árbitro se dé cuenta, le comunicará a un nodo secundario que debe pasar a ser primario. el tiempo en el que esto ocurra depende de la frecuencia con la que se haya configurado la comunicación entre los nodos, que por defecto es 2 segundos. su principal diferencia con mongodump es que mongodump realiza una copia de la base de datos cuando lo ejecutamos, mientras que replica-set va copiando en los nodos todos los cambios que vayamos realizando en la base de datos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "su principal diferencia con mongodump es que mongodump realiza una copia de la base de datos cuando lo ejecutamos, mientras que replica-set va copiando en los nodos todos los cambios que vayamos realizando en la base de datos. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "el tiempo en el que esto ocurra depende de la frecuencia con la que se haya configurado la comunicación entre los nodos, que por defecto es 2 segundos. su principal diferencia con mongodump es que mongodump realiza una copia de la base de datos cuando lo ejecutamos, mientras que replica-set va copiando en los nodos todos los cambios que vayamos realizando en la base de datos. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "una replica-set en mongodb es una arquitectura en la que se garantiza la alta disponibilidad de los datos y protección frente a fallos. para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.858,
                                            "Frase": "uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. si un nodo primario se cae cuando el nodo árbitro se dé cuenta, le comunicará a un nodo secundario que debe pasar a ser primario. el tiempo en el que esto ocurra depende de la frecuencia con la que se haya configurado la comunicación entre los nodos, que por defecto es 2 segundos. su principal diferencia con mongodump es que mongodump realiza una copia de la base de datos cuando lo ejecutamos, mientras que replica-set va copiando en los nodos todos los cambios que vayamos realizando en la base de datos. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.861,
                                            "Frase": "para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. si un nodo primario se cae cuando el nodo árbitro se dé cuenta, le comunicará a un nodo secundario que debe pasar a ser primario. el tiempo en el que esto ocurra depende de la frecuencia con la que se haya configurado la comunicación entre los nodos, que por defecto es 2 segundos. su principal diferencia con mongodump es que mongodump realiza una copia de la base de datos cuando lo ejecutamos, mientras que replica-set va copiando en los nodos todos los cambios que vayamos realizando en la base de datos. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "una replica-set en mongodb es una arquitectura en la que se garantiza la alta disponibilidad de los datos y protección frente a fallos. para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. si un nodo primario se cae cuando el nodo árbitro se dé cuenta, le comunicará a un nodo secundario que debe pasar a ser primario. el tiempo en el que esto ocurra depende de la frecuencia con la que se haya configurado la comunicación entre los nodos, que por defecto es 2 segundos. su principal diferencia con mongodump es que mongodump realiza una copia de la base de datos cuando lo ejecutamos, mientras que replica-set va copiando en los nodos todos los cambios que vayamos realizando en la base de datos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.87,
                                            "Frase": "el tiempo en el que esto ocurra depende de la frecuencia con la que se haya configurado la comunicación entre los nodos, que por defecto es 2 segundos. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "el tiempo en el que esto ocurra depende de la frecuencia con la que se haya configurado la comunicación entre los nodos, que por defecto es 2 segundos. su principal diferencia con mongodump es que mongodump realiza una copia de la base de datos cuando lo ejecutamos, mientras que replica-set va copiando en los nodos todos los cambios que vayamos realizando en la base de datos. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "una replica-set en mongodb es una arquitectura en la que se garantiza la alta disponibilidad de los datos y protección frente a fallos. para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.868,
                                            "Frase": "uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. si un nodo primario se cae cuando el nodo árbitro se dé cuenta, le comunicará a un nodo secundario que debe pasar a ser primario. el tiempo en el que esto ocurra depende de la frecuencia con la que se haya configurado la comunicación entre los nodos, que por defecto es 2 segundos. su principal diferencia con mongodump es que mongodump realiza una copia de la base de datos cuando lo ejecutamos, mientras que replica-set va copiando en los nodos todos los cambios que vayamos realizando en la base de datos. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. si un nodo primario se cae cuando el nodo árbitro se dé cuenta, le comunicará a un nodo secundario que debe pasar a ser primario. el tiempo en el que esto ocurra depende de la frecuencia con la que se haya configurado la comunicación entre los nodos, que por defecto es 2 segundos. su principal diferencia con mongodump es que mongodump realiza una copia de la base de datos cuando lo ejecutamos, mientras que replica-set va copiando en los nodos todos los cambios que vayamos realizando en la base de datos. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "una replica-set en mongodb es una arquitectura en la que se garantiza la alta disponibilidad de los datos y protección frente a fallos. para configurar un replica-set en mongodb hacen falta mínimo 3 nodos. uno primario, otro secundario que realiza las mismas operaciones que el primerio y un nodo árbitro que decide quién es el primario. si un nodo primario se cae cuando el nodo árbitro se dé cuenta, le comunicará a un nodo secundario que debe pasar a ser primario. el tiempo en el que esto ocurra depende de la frecuencia con la que se haya configurado la comunicación entre los nodos, que por defecto es 2 segundos. su principal diferencia con mongodump es que mongodump realiza una copia de la base de datos cuando lo ejecutamos, mientras que replica-set va copiando en los nodos todos los cambios que vayamos realizando en la base de datos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.5,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "c7d1d9c68e49fc55e779a44b4d176400": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.83,
                                            "Frase": "la arquitectura replica- set consiste en crear replicas en nodos diferentes y así garantizar alta disponibilidad al usuario final, esto se puede lograr con la configuración mínima la cual requiere de 3 nodos, estos nodos son primario, secundario y árbitro. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.838,
                                            "Frase": "cunado el nodo primario deja de funcionar, de manera instantánea el nodo secundario se hará cargo. mongodump se encarga de hacer una copia de seguridad que después será restablecida por mongostore a través de los logs, si el nodo donde se hizo la copia de seguridad falla, no habrá la misma disponibilidad, en esto reside la diferencia con la tecnología de replica set. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.786,
                                            "Frase": "par que esto trabaje eficientemente, se creará la relación maestro-esclavo entre los nodos, y se elegirá al nodo primario considerando también al nodo árbitro. cunado el nodo primario deja de funcionar, de manera instantánea el nodo secundario se hará cargo. mongodump se encarga de hacer una copia de seguridad que después será restablecida por mongostore a través de los logs, si el nodo donde se hizo la copia de seguridad falla, no habrá la misma disponibilidad, en esto reside la diferencia con la tecnología de replica set. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.815,
                                            "Frase": "la arquitectura replica- set consiste en crear replicas en nodos diferentes y así garantizar alta disponibilidad al usuario final, esto se puede lograr con la configuración mínima la cual requiere de 3 nodos, estos nodos son primario, secundario y árbitro. par que esto trabaje eficientemente, se creará la relación maestro-esclavo entre los nodos, y se elegirá al nodo primario considerando también al nodo árbitro. cunado el nodo primario deja de funcionar, de manera instantánea el nodo secundario se hará cargo. mongodump se encarga de hacer una copia de seguridad que después será restablecida por mongostore a través de los logs, si el nodo donde se hizo la copia de seguridad falla, no habrá la misma disponibilidad, en esto reside la diferencia con la tecnología de replica set. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.742,
                                            "Frase": "cunado el nodo primario deja de funcionar, de manera instantánea el nodo secundario se hará cargo. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.703,
                                            "Frase": "cunado el nodo primario deja de funcionar, de manera instantánea el nodo secundario se hará cargo. mongodump se encarga de hacer una copia de seguridad que después será restablecida por mongostore a través de los logs, si el nodo donde se hizo la copia de seguridad falla, no habrá la misma disponibilidad, en esto reside la diferencia con la tecnología de replica set. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.685,
                                            "Frase": "la arquitectura replica- set consiste en crear replicas en nodos diferentes y así garantizar alta disponibilidad al usuario final, esto se puede lograr con la configuración mínima la cual requiere de 3 nodos, estos nodos son primario, secundario y árbitro. par que esto trabaje eficientemente, se creará la relación maestro-esclavo entre los nodos, y se elegirá al nodo primario considerando también al nodo árbitro. cunado el nodo primario deja de funcionar, de manera instantánea el nodo secundario se hará cargo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.684,
                                            "Frase": "la arquitectura replica- set consiste en crear replicas en nodos diferentes y así garantizar alta disponibilidad al usuario final, esto se puede lograr con la configuración mínima la cual requiere de 3 nodos, estos nodos son primario, secundario y árbitro. par que esto trabaje eficientemente, se creará la relación maestro-esclavo entre los nodos, y se elegirá al nodo primario considerando también al nodo árbitro. cunado el nodo primario deja de funcionar, de manera instantánea el nodo secundario se hará cargo. mongodump se encarga de hacer una copia de seguridad que después será restablecida por mongostore a través de los logs, si el nodo donde se hizo la copia de seguridad falla, no habrá la misma disponibilidad, en esto reside la diferencia con la tecnología de replica set. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "cunado el nodo primario deja de funcionar, de manera instantánea el nodo secundario se hará cargo. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.868,
                                            "Frase": "par que esto trabaje eficientemente, se creará la relación maestro-esclavo entre los nodos, y se elegirá al nodo primario considerando también al nodo árbitro. cunado el nodo primario deja de funcionar, de manera instantánea el nodo secundario se hará cargo. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "la arquitectura replica- set consiste en crear replicas en nodos diferentes y así garantizar alta disponibilidad al usuario final, esto se puede lograr con la configuración mínima la cual requiere de 3 nodos, estos nodos son primario, secundario y árbitro. par que esto trabaje eficientemente, se creará la relación maestro-esclavo entre los nodos, y se elegirá al nodo primario considerando también al nodo árbitro. cunado el nodo primario deja de funcionar, de manera instantánea el nodo secundario se hará cargo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.862,
                                            "Frase": "la arquitectura replica- set consiste en crear replicas en nodos diferentes y así garantizar alta disponibilidad al usuario final, esto se puede lograr con la configuración mínima la cual requiere de 3 nodos, estos nodos son primario, secundario y árbitro. par que esto trabaje eficientemente, se creará la relación maestro-esclavo entre los nodos, y se elegirá al nodo primario considerando también al nodo árbitro. cunado el nodo primario deja de funcionar, de manera instantánea el nodo secundario se hará cargo. mongodump se encarga de hacer una copia de seguridad que después será restablecida por mongostore a través de los logs, si el nodo donde se hizo la copia de seguridad falla, no habrá la misma disponibilidad, en esto reside la diferencia con la tecnología de replica set. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "mongodump se encarga de hacer una copia de seguridad que después será restablecida por mongostore a través de los logs, si el nodo donde se hizo la copia de seguridad falla, no habrá la misma disponibilidad, en esto reside la diferencia con la tecnología de replica set. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "cunado el nodo primario deja de funcionar, de manera instantánea el nodo secundario se hará cargo. mongodump se encarga de hacer una copia de seguridad que después será restablecida por mongostore a través de los logs, si el nodo donde se hizo la copia de seguridad falla, no habrá la misma disponibilidad, en esto reside la diferencia con la tecnología de replica set. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "par que esto trabaje eficientemente, se creará la relación maestro-esclavo entre los nodos, y se elegirá al nodo primario considerando también al nodo árbitro. cunado el nodo primario deja de funcionar, de manera instantánea el nodo secundario se hará cargo. mongodump se encarga de hacer una copia de seguridad que después será restablecida por mongostore a través de los logs, si el nodo donde se hizo la copia de seguridad falla, no habrá la misma disponibilidad, en esto reside la diferencia con la tecnología de replica set. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "la arquitectura replica- set consiste en crear replicas en nodos diferentes y así garantizar alta disponibilidad al usuario final, esto se puede lograr con la configuración mínima la cual requiere de 3 nodos, estos nodos son primario, secundario y árbitro. par que esto trabaje eficientemente, se creará la relación maestro-esclavo entre los nodos, y se elegirá al nodo primario considerando también al nodo árbitro. cunado el nodo primario deja de funcionar, de manera instantánea el nodo secundario se hará cargo. mongodump se encarga de hacer una copia de seguridad que después será restablecida por mongostore a través de los logs, si el nodo donde se hizo la copia de seguridad falla, no habrá la misma disponibilidad, en esto reside la diferencia con la tecnología de replica set. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.873,
                                            "Frase": "la arquitectura replica- set consiste en crear replicas en nodos diferentes y así garantizar alta disponibilidad al usuario final, esto se puede lograr con la configuración mínima la cual requiere de 3 nodos, estos nodos son primario, secundario y árbitro. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "cunado el nodo primario deja de funcionar, de manera instantánea el nodo secundario se hará cargo. mongodump se encarga de hacer una copia de seguridad que después será restablecida por mongostore a través de los logs, si el nodo donde se hizo la copia de seguridad falla, no habrá la misma disponibilidad, en esto reside la diferencia con la tecnología de replica set. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "la arquitectura replica- set consiste en crear replicas en nodos diferentes y así garantizar alta disponibilidad al usuario final, esto se puede lograr con la configuración mínima la cual requiere de 3 nodos, estos nodos son primario, secundario y árbitro. par que esto trabaje eficientemente, se creará la relación maestro-esclavo entre los nodos, y se elegirá al nodo primario considerando también al nodo árbitro. cunado el nodo primario deja de funcionar, de manera instantánea el nodo secundario se hará cargo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "la arquitectura replica- set consiste en crear replicas en nodos diferentes y así garantizar alta disponibilidad al usuario final, esto se puede lograr con la configuración mínima la cual requiere de 3 nodos, estos nodos son primario, secundario y árbitro. par que esto trabaje eficientemente, se creará la relación maestro-esclavo entre los nodos, y se elegirá al nodo primario considerando también al nodo árbitro. cunado el nodo primario deja de funcionar, de manera instantánea el nodo secundario se hará cargo. mongodump se encarga de hacer una copia de seguridad que después será restablecida por mongostore a través de los logs, si el nodo donde se hizo la copia de seguridad falla, no habrá la misma disponibilidad, en esto reside la diferencia con la tecnología de replica set. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "aca2b1ba75453033e32a15383895ef5a": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. para establecer la disponibilidad de los nodos, cada pocos segundos estos intercambian un ping que indica su disponibilidad. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.869,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. para establecer la disponibilidad de los nodos, cada pocos segundos estos intercambian un ping que indica su disponibilidad. en una configuración replicaset, el nodo primario es el que escribe la información, mientras que la lectura puede ser solo desde el nodo primario, o lo que es más habitual también desde los secundarios mejorando la disponibilidad de la información  un replicaset permite configurar como se van a comportar los nodos, con parámetros como:  \tarbiteronly: el nodo nunca será primario,  \tpriority establecer la prioridad,  \tslavedelay: que permite que los datos tengan delay por si hubiera un borrado no deseado de los datos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.776,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.821,
                                            "Frase": "otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.838,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.825,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.819,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. para establecer la disponibilidad de los nodos, cada pocos segundos estos intercambian un ping que indica su disponibilidad. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.8,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. para establecer la disponibilidad de los nodos, cada pocos segundos estos intercambian un ping que indica su disponibilidad. en una configuración replicaset, el nodo primario es el que escribe la información, mientras que la lectura puede ser solo desde el nodo primario, o lo que es más habitual también desde los secundarios mejorando la disponibilidad de la información  un replicaset permite configurar como se van a comportar los nodos, con parámetros como:  \tarbiteronly: el nodo nunca será primario,  \tpriority establecer la prioridad,  \tslavedelay: que permite que los datos tengan delay por si hubiera un borrado no deseado de los datos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. para establecer la disponibilidad de los nodos, cada pocos segundos estos intercambian un ping que indica su disponibilidad. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. para establecer la disponibilidad de los nodos, cada pocos segundos estos intercambian un ping que indica su disponibilidad. en una configuración replicaset, el nodo primario es el que escribe la información, mientras que la lectura puede ser solo desde el nodo primario, o lo que es más habitual también desde los secundarios mejorando la disponibilidad de la información  un replicaset permite configurar como se van a comportar los nodos, con parámetros como:  \tarbiteronly: el nodo nunca será primario,  \tpriority establecer la prioridad,  \tslavedelay: que permite que los datos tengan delay por si hubiera un borrado no deseado de los datos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. para establecer la disponibilidad de los nodos, cada pocos segundos estos intercambian un ping que indica su disponibilidad. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. para establecer la disponibilidad de los nodos, cada pocos segundos estos intercambian un ping que indica su disponibilidad. en una configuración replicaset, el nodo primario es el que escribe la información, mientras que la lectura puede ser solo desde el nodo primario, o lo que es más habitual también desde los secundarios mejorando la disponibilidad de la información  un replicaset permite configurar como se van a comportar los nodos, con parámetros como:  \tarbiteronly: el nodo nunca será primario,  \tpriority establecer la prioridad,  \tslavedelay: que permite que los datos tengan delay por si hubiera un borrado no deseado de los datos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.971,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.973,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.971,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. para establecer la disponibilidad de los nodos, cada pocos segundos estos intercambian un ping que indica su disponibilidad. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "la arquitectura de replicaset es una de las maneras que ofrece mongo de asegurar el acceso a la información en caso de un fallo con la bd. otra alternativa, es el uso de mongodump y mongorestore, pero esta opción únicamente ofrece fotos de los datos, es decir si se produce una pérdida de información se perdería lo cambiado entre este momento del fallo y el de mongodump. en un replicaset hay 3 tipos de nodos: nodo primario, nodo secundario y nodo arbitro. en el momento de la creación, o cuando el nodo primario deja de estar disponible, entre los nodos secundarios y con ayuda de los arbitro se decide cual es nodo primario. para establecer la disponibilidad de los nodos, cada pocos segundos estos intercambian un ping que indica su disponibilidad. en una configuración replicaset, el nodo primario es el que escribe la información, mientras que la lectura puede ser solo desde el nodo primario, o lo que es más habitual también desde los secundarios mejorando la disponibilidad de la información  un replicaset permite configurar como se van a comportar los nodos, con parámetros como:  \tarbiteronly: el nodo nunca será primario,  \tpriority establecer la prioridad,  \tslavedelay: que permite que los datos tengan delay por si hubiera un borrado no deseado de los datos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "761c1c9b8459ec1b129a8d9b5d587f57": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "la arquitectura replica-set de mongodb hace alusión a una de las configuraciones estructurales de respaldo que ofrece esta base de datos nosql, la cuál hace permite asegurar en un mayor grado la disponibilidad de los datos. dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "la arquitectura replica-set de mongodb hace alusión a una de las configuraciones estructurales de respaldo que ofrece esta base de datos nosql, la cuál hace permite asegurar en un mayor grado la disponibilidad de los datos. dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. -\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. -\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "la arquitectura replica-set de mongodb hace alusión a una de las configuraciones estructurales de respaldo que ofrece esta base de datos nosql, la cuál hace permite asegurar en un mayor grado la disponibilidad de los datos. dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. -\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "la arquitectura replica-set de mongodb hace alusión a una de las configuraciones estructurales de respaldo que ofrece esta base de datos nosql, la cuál hace permite asegurar en un mayor grado la disponibilidad de los datos. dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. -\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "la arquitectura replica-set de mongodb hace alusión a una de las configuraciones estructurales de respaldo que ofrece esta base de datos nosql, la cuál hace permite asegurar en un mayor grado la disponibilidad de los datos. dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. -\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "la arquitectura replica-set de mongodb hace alusión a una de las configuraciones estructurales de respaldo que ofrece esta base de datos nosql, la cuál hace permite asegurar en un mayor grado la disponibilidad de los datos. dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. -\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.812,
                                            "Frase": "la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.823,
                                            "Frase": "en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.818,
                                            "Frase": "podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.816,
                                            "Frase": "esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.811,
                                            "Frase": "-\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.815,
                                            "Frase": "-\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.813,
                                            "Frase": "dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. -\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.807,
                                            "Frase": "la arquitectura replica-set de mongodb hace alusión a una de las configuraciones estructurales de respaldo que ofrece esta base de datos nosql, la cuál hace permite asegurar en un mayor grado la disponibilidad de los datos. dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. -\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "-\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "-\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "-\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. -\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. -\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). mientras que mongodump es una alternativa de respaldo mucho más cercana a las copias de directorio convencionales, ya que se base en la copia de todos o parte de los datos en directorio externos, algo que ofrece seguridad frente a la recuperación, pero no agilidad  en caso de necesidad de restauración, ya que en este caso, necesitaría hacer uso de mongorestore para recuperar el respaldo generado por mongodump en la ubicación concreta. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "la arquitectura replica-set de mongodb hace alusión a una de las configuraciones estructurales de respaldo que ofrece esta base de datos nosql, la cuál hace permite asegurar en un mayor grado la disponibilidad de los datos. dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "-\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. -\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "la arquitectura replica-set de mongodb hace alusión a una de las configuraciones estructurales de respaldo que ofrece esta base de datos nosql, la cuál hace permite asegurar en un mayor grado la disponibilidad de los datos. dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. -\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "la arquitectura replica-set de mongodb hace alusión a una de las configuraciones estructurales de respaldo que ofrece esta base de datos nosql, la cuál hace permite asegurar en un mayor grado la disponibilidad de los datos. dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. -\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "-\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). mientras que mongodump es una alternativa de respaldo mucho más cercana a las copias de directorio convencionales, ya que se base en la copia de todos o parte de los datos en directorio externos, algo que ofrece seguridad frente a la recuperación, pero no agilidad  en caso de necesidad de restauración, ya que en este caso, necesitaría hacer uso de mongorestore para recuperar el respaldo generado por mongodump en la ubicación concreta. ",
                                            "Lineas": "Lines 3 - 9"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. -\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). mientras que mongodump es una alternativa de respaldo mucho más cercana a las copias de directorio convencionales, ya que se base en la copia de todos o parte de los datos en directorio externos, algo que ofrece seguridad frente a la recuperación, pero no agilidad  en caso de necesidad de restauración, ya que en este caso, necesitaría hacer uso de mongorestore para recuperar el respaldo generado por mongodump en la ubicación concreta. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.963,
                                            "Frase": "esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.961,
                                            "Frase": "-\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "-\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.958,
                                            "Frase": "dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. -\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.958,
                                            "Frase": "la arquitectura replica-set de mongodb hace alusión a una de las configuraciones estructurales de respaldo que ofrece esta base de datos nosql, la cuál hace permite asegurar en un mayor grado la disponibilidad de los datos. dicha configuración está basada en la definición de tres tipos de nodos en su sistema de almacenamiento distribuido, cada uno con una función propia dentro de la tarea de respaldo y que son los siguientes: -\tnodo principal: constituye el datanode de almacenamiento principal, es decir, es en éste donde se leen y escriben directamente los datos. -\tnodo secundario: hace la función datanode de respaldo del nodo principal, es decir, recibe la información generada por el nodo principal con el retraso/delay establecido por el intervalo de pings enviados entre los mismos. -\tnodo árbitro: se limita únicamente de administrar y votar/asignar el papel (principal, secundario) de los nodos de tal manera que se garantice la mayor disponibilidad posible. esta configuración de respaldo requiere por tanto de un mínimo de 3 nodos para su funcionamiento en producción, siendo posible la configuración de muchos más por supuesto, gracias a escalabilidad horizontal que ofrece la base de datos mongodb. podríamos sumar más máquinas/nodos que nos permitan cumplir con el factor de replicación (nº de nodos de respaldo) que se requiera. en el caso que uno de los nodos elegidos como principal, se caía/pierda disponibilidad el nodo árbitro actúa nombrando un nuevo nodo principal (normalmente según el índice de probabilidad del resto de nodos para ser elegidos como principal votes) y considerando que el nodo secundario del principal caído, dispone del respaldo y metadatos generados por el mismo. la principal diferencia que separa esta configuración de réplicas a la funcionalidad ofrecida por mongodump, es el dinamismo que ofrece, al disponer de un coordinador/árbitro dentro del propio sistema de almacenamiento distribuido, que además está configurado para que tome un comportamiento de preventivo y reactivo, en caso de fallo de los nodos, para el aseguramiento de la disponibilidad de la base de datos, pudiendo reestablecerse de manera ágil (cuestión de segundos). ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "d1bff6709d7728e5a45af677ae0b75c1": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "la arquitectura de réplica-set en mongodb permite la redundancia de datos e incrementa la disponibilidad de los datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "la arquitectura de réplica-set en mongodb permite la redundancia de datos e incrementa la disponibilidad de los datos. es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "la arquitectura de réplica-set en mongodb permite la redundancia de datos e incrementa la disponibilidad de los datos. es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "la arquitectura de réplica-set en mongodb permite la redundancia de datos e incrementa la disponibilidad de los datos. es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "la arquitectura de réplica-set en mongodb permite la redundancia de datos e incrementa la disponibilidad de los datos. es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "la arquitectura de réplica-set en mongodb permite la redundancia de datos e incrementa la disponibilidad de los datos. es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "la arquitectura de réplica-set en mongodb permite la redundancia de datos e incrementa la disponibilidad de los datos. es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "la arquitectura de réplica-set en mongodb permite la redundancia de datos e incrementa la disponibilidad de los datos. es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.796,
                                            "Frase": "una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.811,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. la principal diferencia con mongodump es que es un proceso automático, sin tener que realizar las operaciones de movimiento de las copias de seguridad. ",
                                            "Lineas": "Lines 8 - 9"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.804,
                                            "Frase": "el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. la principal diferencia con mongodump es que es un proceso automático, sin tener que realizar las operaciones de movimiento de las copias de seguridad. ",
                                            "Lineas": "Lines 7 - 9"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.807,
                                            "Frase": "para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. la principal diferencia con mongodump es que es un proceso automático, sin tener que realizar las operaciones de movimiento de las copias de seguridad. ",
                                            "Lineas": "Lines 6 - 9"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.797,
                                            "Frase": "los nodos mantienen el control unos sobre otros. para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. la principal diferencia con mongodump es que es un proceso automático, sin tener que realizar las operaciones de movimiento de las copias de seguridad. ",
                                            "Lineas": "Lines 5 - 9"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.808,
                                            "Frase": "una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. la principal diferencia con mongodump es que es un proceso automático, sin tener que realizar las operaciones de movimiento de las copias de seguridad. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.8,
                                            "Frase": "es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.81,
                                            "Frase": "es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. la principal diferencia con mongodump es que es un proceso automático, sin tener que realizar las operaciones de movimiento de las copias de seguridad. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. la principal diferencia con mongodump es que es un proceso automático, sin tener que realizar las operaciones de movimiento de las copias de seguridad. ",
                                            "Lineas": "Lines 8 - 9"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. ",
                                            "Lineas": "Lines 6 - 8"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. la principal diferencia con mongodump es que es un proceso automático, sin tener que realizar las operaciones de movimiento de las copias de seguridad. ",
                                            "Lineas": "Lines 6 - 9"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "los nodos mantienen el control unos sobre otros. para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. la principal diferencia con mongodump es que es un proceso automático, sin tener que realizar las operaciones de movimiento de las copias de seguridad. ",
                                            "Lineas": "Lines 5 - 9"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. la principal diferencia con mongodump es que es un proceso automático, sin tener que realizar las operaciones de movimiento de las copias de seguridad. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. la principal diferencia con mongodump es que es un proceso automático, sin tener que realizar las operaciones de movimiento de las copias de seguridad. ",
                                            "Lineas": "Lines 3 - 9"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. la principal diferencia con mongodump es que es un proceso automático, sin tener que realizar las operaciones de movimiento de las copias de seguridad. ",
                                            "Lineas": "Lines 2 - 9"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "la principal diferencia con mongodump es que es un proceso automático, sin tener que realizar las operaciones de movimiento de las copias de seguridad. ",
                                            "Lineas": "Line 9"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "la arquitectura de réplica-set en mongodb permite la redundancia de datos e incrementa la disponibilidad de los datos. es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "la arquitectura de réplica-set en mongodb permite la redundancia de datos e incrementa la disponibilidad de los datos. es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "la arquitectura de réplica-set en mongodb permite la redundancia de datos e incrementa la disponibilidad de los datos. es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "la arquitectura de réplica-set en mongodb permite la redundancia de datos e incrementa la disponibilidad de los datos. es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "la arquitectura de réplica-set en mongodb permite la redundancia de datos e incrementa la disponibilidad de los datos. es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "la arquitectura de réplica-set en mongodb permite la redundancia de datos e incrementa la disponibilidad de los datos. es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. la principal diferencia con mongodump es que es un proceso automático, sin tener que realizar las operaciones de movimiento de las copias de seguridad. ",
                                            "Lineas": "Lines 8 - 9"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. la principal diferencia con mongodump es que es un proceso automático, sin tener que realizar las operaciones de movimiento de las copias de seguridad. ",
                                            "Lineas": "Lines 7 - 9"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. la principal diferencia con mongodump es que es un proceso automático, sin tener que realizar las operaciones de movimiento de las copias de seguridad. ",
                                            "Lineas": "Lines 6 - 9"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "la arquitectura de réplica-set en mongodb permite la redundancia de datos e incrementa la disponibilidad de los datos. es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. la principal diferencia con mongodump es que es un proceso automático, sin tener que realizar las operaciones de movimiento de las copias de seguridad. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "la arquitectura de réplica-set en mongodb permite la redundancia de datos e incrementa la disponibilidad de los datos. es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "la arquitectura de réplica-set en mongodb permite la redundancia de datos e incrementa la disponibilidad de los datos. es una mejora sobre el modelo de maestro-esclavo, y es lo que ha definido como conjunto réplica -set. con este método se permite recuperar de forma automática una recuperación a fallos. una característica de los replica set es que no definen un nodo maestro estático, es asignado al azar y esta asignación se actualiza en función de la disponibilidad de los nodos. los nodos mantienen el control unos sobre otros. para crear un conjunto réplica set es necesario tener tres nodos (configuración mínima recomendable) de los cuáles dos nodos serán instancias de mongod con acceso a los datos; uno de estos será el nodo primario y el otro replicará las operaciones. el tercer nodo es el llamado nodo arbitrario y se utiliza para decidir qué nodo deber asignado como principal. cuando el nodo primario deja de tener disponibilidad el nodo secundario pasa a ser el principal ya que tenemos la figura del nodo arbitrario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "d0a3fba491eba5731343558ae81076d4": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "una arquitectura replica-set consiste en un modelo de replicación de datos, su función principal es de tener una alta disponibilidad de los datos y un mínimo tiempo de recuperación frente a fallos que puedan ocurrir. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.827,
                                            "Frase": "una arquitectura replica-set consiste en un modelo de replicación de datos, su función principal es de tener una alta disponibilidad de los datos y un mínimo tiempo de recuperación frente a fallos que puedan ocurrir. para su configuración se necesita mínimo 3 nodos, 2 que corren mongos y tienen acceso a los datos, uno que actúa como primario y el otro como secundario que es donde se replican los datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.817,
                                            "Frase": "una arquitectura replica-set consiste en un modelo de replicación de datos, su función principal es de tener una alta disponibilidad de los datos y un mínimo tiempo de recuperación frente a fallos que puedan ocurrir. para su configuración se necesita mínimo 3 nodos, 2 que corren mongos y tienen acceso a los datos, uno que actúa como primario y el otro como secundario que es donde se replican los datos. el tercer nodo actuará como un árbitro para indicar quien debe ser el nodo primario cuando este deja de estar disponible. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.82,
                                            "Frase": "una arquitectura replica-set consiste en un modelo de replicación de datos, su función principal es de tener una alta disponibilidad de los datos y un mínimo tiempo de recuperación frente a fallos que puedan ocurrir. para su configuración se necesita mínimo 3 nodos, 2 que corren mongos y tienen acceso a los datos, uno que actúa como primario y el otro como secundario que es donde se replican los datos. el tercer nodo actuará como un árbitro para indicar quien debe ser el nodo primario cuando este deja de estar disponible. la diferencia principal con mongodump es que con la replica-set se mantiene todos los datos replicados y respaldados en todo momento mientras que con mongodump se tiene respaldo hasta un instante de tiempo dado. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.813,
                                            "Frase": "una arquitectura replica-set consiste en un modelo de replicación de datos, su función principal es de tener una alta disponibilidad de los datos y un mínimo tiempo de recuperación frente a fallos que puedan ocurrir. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.764,
                                            "Frase": "el tercer nodo actuará como un árbitro para indicar quien debe ser el nodo primario cuando este deja de estar disponible. la diferencia principal con mongodump es que con la replica-set se mantiene todos los datos replicados y respaldados en todo momento mientras que con mongodump se tiene respaldo hasta un instante de tiempo dado. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.778,
                                            "Frase": "una arquitectura replica-set consiste en un modelo de replicación de datos, su función principal es de tener una alta disponibilidad de los datos y un mínimo tiempo de recuperación frente a fallos que puedan ocurrir. para su configuración se necesita mínimo 3 nodos, 2 que corren mongos y tienen acceso a los datos, uno que actúa como primario y el otro como secundario que es donde se replican los datos. el tercer nodo actuará como un árbitro para indicar quien debe ser el nodo primario cuando este deja de estar disponible. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.762,
                                            "Frase": "una arquitectura replica-set consiste en un modelo de replicación de datos, su función principal es de tener una alta disponibilidad de los datos y un mínimo tiempo de recuperación frente a fallos que puedan ocurrir. para su configuración se necesita mínimo 3 nodos, 2 que corren mongos y tienen acceso a los datos, uno que actúa como primario y el otro como secundario que es donde se replican los datos. el tercer nodo actuará como un árbitro para indicar quien debe ser el nodo primario cuando este deja de estar disponible. la diferencia principal con mongodump es que con la replica-set se mantiene todos los datos replicados y respaldados en todo momento mientras que con mongodump se tiene respaldo hasta un instante de tiempo dado. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "el tercer nodo actuará como un árbitro para indicar quien debe ser el nodo primario cuando este deja de estar disponible. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "el tercer nodo actuará como un árbitro para indicar quien debe ser el nodo primario cuando este deja de estar disponible. la diferencia principal con mongodump es que con la replica-set se mantiene todos los datos replicados y respaldados en todo momento mientras que con mongodump se tiene respaldo hasta un instante de tiempo dado. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "una arquitectura replica-set consiste en un modelo de replicación de datos, su función principal es de tener una alta disponibilidad de los datos y un mínimo tiempo de recuperación frente a fallos que puedan ocurrir. para su configuración se necesita mínimo 3 nodos, 2 que corren mongos y tienen acceso a los datos, uno que actúa como primario y el otro como secundario que es donde se replican los datos. el tercer nodo actuará como un árbitro para indicar quien debe ser el nodo primario cuando este deja de estar disponible. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "una arquitectura replica-set consiste en un modelo de replicación de datos, su función principal es de tener una alta disponibilidad de los datos y un mínimo tiempo de recuperación frente a fallos que puedan ocurrir. para su configuración se necesita mínimo 3 nodos, 2 que corren mongos y tienen acceso a los datos, uno que actúa como primario y el otro como secundario que es donde se replican los datos. el tercer nodo actuará como un árbitro para indicar quien debe ser el nodo primario cuando este deja de estar disponible. la diferencia principal con mongodump es que con la replica-set se mantiene todos los datos replicados y respaldados en todo momento mientras que con mongodump se tiene respaldo hasta un instante de tiempo dado. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "una arquitectura replica-set consiste en un modelo de replicación de datos, su función principal es de tener una alta disponibilidad de los datos y un mínimo tiempo de recuperación frente a fallos que puedan ocurrir. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "una arquitectura replica-set consiste en un modelo de replicación de datos, su función principal es de tener una alta disponibilidad de los datos y un mínimo tiempo de recuperación frente a fallos que puedan ocurrir. para su configuración se necesita mínimo 3 nodos, 2 que corren mongos y tienen acceso a los datos, uno que actúa como primario y el otro como secundario que es donde se replican los datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "una arquitectura replica-set consiste en un modelo de replicación de datos, su función principal es de tener una alta disponibilidad de los datos y un mínimo tiempo de recuperación frente a fallos que puedan ocurrir. para su configuración se necesita mínimo 3 nodos, 2 que corren mongos y tienen acceso a los datos, uno que actúa como primario y el otro como secundario que es donde se replican los datos. el tercer nodo actuará como un árbitro para indicar quien debe ser el nodo primario cuando este deja de estar disponible. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "una arquitectura replica-set consiste en un modelo de replicación de datos, su función principal es de tener una alta disponibilidad de los datos y un mínimo tiempo de recuperación frente a fallos que puedan ocurrir. para su configuración se necesita mínimo 3 nodos, 2 que corren mongos y tienen acceso a los datos, uno que actúa como primario y el otro como secundario que es donde se replican los datos. el tercer nodo actuará como un árbitro para indicar quien debe ser el nodo primario cuando este deja de estar disponible. la diferencia principal con mongodump es que con la replica-set se mantiene todos los datos replicados y respaldados en todo momento mientras que con mongodump se tiene respaldo hasta un instante de tiempo dado. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "una arquitectura replica-set consiste en un modelo de replicación de datos, su función principal es de tener una alta disponibilidad de los datos y un mínimo tiempo de recuperación frente a fallos que puedan ocurrir. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "una arquitectura replica-set consiste en un modelo de replicación de datos, su función principal es de tener una alta disponibilidad de los datos y un mínimo tiempo de recuperación frente a fallos que puedan ocurrir. para su configuración se necesita mínimo 3 nodos, 2 que corren mongos y tienen acceso a los datos, uno que actúa como primario y el otro como secundario que es donde se replican los datos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "una arquitectura replica-set consiste en un modelo de replicación de datos, su función principal es de tener una alta disponibilidad de los datos y un mínimo tiempo de recuperación frente a fallos que puedan ocurrir. para su configuración se necesita mínimo 3 nodos, 2 que corren mongos y tienen acceso a los datos, uno que actúa como primario y el otro como secundario que es donde se replican los datos. el tercer nodo actuará como un árbitro para indicar quien debe ser el nodo primario cuando este deja de estar disponible. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "una arquitectura replica-set consiste en un modelo de replicación de datos, su función principal es de tener una alta disponibilidad de los datos y un mínimo tiempo de recuperación frente a fallos que puedan ocurrir. para su configuración se necesita mínimo 3 nodos, 2 que corren mongos y tienen acceso a los datos, uno que actúa como primario y el otro como secundario que es donde se replican los datos. el tercer nodo actuará como un árbitro para indicar quien debe ser el nodo primario cuando este deja de estar disponible. la diferencia principal con mongodump es que con la replica-set se mantiene todos los datos replicados y respaldados en todo momento mientras que con mongodump se tiene respaldo hasta un instante de tiempo dado. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "cb8cf42d095c349f8a1b3797b91c8294": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.858,
                                            "Frase": "a continuación se detalla la funcionalidad:   la principal diferencia es que  mongodum permite realizar respaldos de colecciones, bases de datos y documentos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.825,
                                            "Frase": "divide el conjunto de datos escalabilidad vertical y horizontal, para una configuración mínima deben existir 3 nodos, cuando un nodo primario deja de tener funcionalidad el secundario replica las operaciones que se realizan sobre el primario y el arbitro decide el nodo que será el nuevo primario. a continuación se detalla la funcionalidad:   la principal diferencia es que  mongodum permite realizar respaldos de colecciones, bases de datos y documentos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.754,
                                            "Frase": "divide el conjunto de datos escalabilidad vertical y horizontal, para una configuración mínima deben existir 3 nodos, cuando un nodo primario deja de tener funcionalidad el secundario replica las operaciones que se realizan sobre el primario y el arbitro decide el nodo que será el nuevo primario. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.772,
                                            "Frase": "divide el conjunto de datos escalabilidad vertical y horizontal, para una configuración mínima deben existir 3 nodos, cuando un nodo primario deja de tener funcionalidad el secundario replica las operaciones que se realizan sobre el primario y el arbitro decide el nodo que será el nuevo primario. a continuación se detalla la funcionalidad:   la principal diferencia es que  mongodum permite realizar respaldos de colecciones, bases de datos y documentos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.929,
                                            "Frase": "divide el conjunto de datos escalabilidad vertical y horizontal, para una configuración mínima deben existir 3 nodos, cuando un nodo primario deja de tener funcionalidad el secundario replica las operaciones que se realizan sobre el primario y el arbitro decide el nodo que será el nuevo primario. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "divide el conjunto de datos escalabilidad vertical y horizontal, para una configuración mínima deben existir 3 nodos, cuando un nodo primario deja de tener funcionalidad el secundario replica las operaciones que se realizan sobre el primario y el arbitro decide el nodo que será el nuevo primario. a continuación se detalla la funcionalidad:   la principal diferencia es que  mongodum permite realizar respaldos de colecciones, bases de datos y documentos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "a continuación se detalla la funcionalidad:   la principal diferencia es que  mongodum permite realizar respaldos de colecciones, bases de datos y documentos. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.875,
                                            "Frase": "divide el conjunto de datos escalabilidad vertical y horizontal, para una configuración mínima deben existir 3 nodos, cuando un nodo primario deja de tener funcionalidad el secundario replica las operaciones que se realizan sobre el primario y el arbitro decide el nodo que será el nuevo primario. a continuación se detalla la funcionalidad:   la principal diferencia es que  mongodum permite realizar respaldos de colecciones, bases de datos y documentos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.871,
                                            "Frase": "divide el conjunto de datos escalabilidad vertical y horizontal, para una configuración mínima deben existir 3 nodos, cuando un nodo primario deja de tener funcionalidad el secundario replica las operaciones que se realizan sobre el primario y el arbitro decide el nodo que será el nuevo primario. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "divide el conjunto de datos escalabilidad vertical y horizontal, para una configuración mínima deben existir 3 nodos, cuando un nodo primario deja de tener funcionalidad el secundario replica las operaciones que se realizan sobre el primario y el arbitro decide el nodo que será el nuevo primario. a continuación se detalla la funcionalidad:   la principal diferencia es que  mongodum permite realizar respaldos de colecciones, bases de datos y documentos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "3536d62c26ca741b459c426edcf8c53f": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "la función de una replica-set es recuperar el sistema ante fallos de forma automática para ampliar la funcionalidad y la disponibilidad de una base de datos, podría tener, como configuración mínima un nodo primario y dos nodos secundarios. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "la función de una replica-set es recuperar el sistema ante fallos de forma automática para ampliar la funcionalidad y la disponibilidad de una base de datos, podría tener, como configuración mínima un nodo primario y dos nodos secundarios. la réplica de datos se hace desde el nodo primario hacia los nodos secundarios. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.808,
                                            "Frase": "la función de una replica-set es recuperar el sistema ante fallos de forma automática para ampliar la funcionalidad y la disponibilidad de una base de datos, podría tener, como configuración mínima un nodo primario y dos nodos secundarios. la réplica de datos se hace desde el nodo primario hacia los nodos secundarios. cuando el nodo primario deja de tener disponibilidad se elige al azar a otro nodo para que sea el nodo maestro y para esto se debe hacer ping a los demás nodos, el nodo árbitro debe elegir cual nodo será el nodo primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.852,
                                            "Frase": "la función de una replica-set es recuperar el sistema ante fallos de forma automática para ampliar la funcionalidad y la disponibilidad de una base de datos, podría tener, como configuración mínima un nodo primario y dos nodos secundarios. la réplica de datos se hace desde el nodo primario hacia los nodos secundarios. cuando el nodo primario deja de tener disponibilidad se elige al azar a otro nodo para que sea el nodo maestro y para esto se debe hacer ping a los demás nodos, el nodo árbitro debe elegir cual nodo será el nodo primario. la principal diferencia con mongodump es que mongodump hace una copia de seguridad de una base de datos al ejecutarse un comando específico y mongodump realiza respaldo de datos entre nodos al caerse un nodo y de esta manera se asegura la perfecta disponibilidad, en cambio con mongodump, se interrumpe la disponibilidad en el momento de hacer el import del backup. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.806,
                                            "Frase": "la principal diferencia con mongodump es que mongodump hace una copia de seguridad de una base de datos al ejecutarse un comando específico y mongodump realiza respaldo de datos entre nodos al caerse un nodo y de esta manera se asegura la perfecta disponibilidad, en cambio con mongodump, se interrumpe la disponibilidad en el momento de hacer el import del backup. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.769,
                                            "Frase": "la función de una replica-set es recuperar el sistema ante fallos de forma automática para ampliar la funcionalidad y la disponibilidad de una base de datos, podría tener, como configuración mínima un nodo primario y dos nodos secundarios. la réplica de datos se hace desde el nodo primario hacia los nodos secundarios. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.746,
                                            "Frase": "la réplica de datos se hace desde el nodo primario hacia los nodos secundarios. cuando el nodo primario deja de tener disponibilidad se elige al azar a otro nodo para que sea el nodo maestro y para esto se debe hacer ping a los demás nodos, el nodo árbitro debe elegir cual nodo será el nodo primario. la principal diferencia con mongodump es que mongodump hace una copia de seguridad de una base de datos al ejecutarse un comando específico y mongodump realiza respaldo de datos entre nodos al caerse un nodo y de esta manera se asegura la perfecta disponibilidad, en cambio con mongodump, se interrumpe la disponibilidad en el momento de hacer el import del backup. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.777,
                                            "Frase": "la función de una replica-set es recuperar el sistema ante fallos de forma automática para ampliar la funcionalidad y la disponibilidad de una base de datos, podría tener, como configuración mínima un nodo primario y dos nodos secundarios. la réplica de datos se hace desde el nodo primario hacia los nodos secundarios. cuando el nodo primario deja de tener disponibilidad se elige al azar a otro nodo para que sea el nodo maestro y para esto se debe hacer ping a los demás nodos, el nodo árbitro debe elegir cual nodo será el nodo primario. la principal diferencia con mongodump es que mongodump hace una copia de seguridad de una base de datos al ejecutarse un comando específico y mongodump realiza respaldo de datos entre nodos al caerse un nodo y de esta manera se asegura la perfecta disponibilidad, en cambio con mongodump, se interrumpe la disponibilidad en el momento de hacer el import del backup. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "la principal diferencia con mongodump es que mongodump hace una copia de seguridad de una base de datos al ejecutarse un comando específico y mongodump realiza respaldo de datos entre nodos al caerse un nodo y de esta manera se asegura la perfecta disponibilidad, en cambio con mongodump, se interrumpe la disponibilidad en el momento de hacer el import del backup. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad se elige al azar a otro nodo para que sea el nodo maestro y para esto se debe hacer ping a los demás nodos, el nodo árbitro debe elegir cual nodo será el nodo primario. la principal diferencia con mongodump es que mongodump hace una copia de seguridad de una base de datos al ejecutarse un comando específico y mongodump realiza respaldo de datos entre nodos al caerse un nodo y de esta manera se asegura la perfecta disponibilidad, en cambio con mongodump, se interrumpe la disponibilidad en el momento de hacer el import del backup. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "la réplica de datos se hace desde el nodo primario hacia los nodos secundarios. cuando el nodo primario deja de tener disponibilidad se elige al azar a otro nodo para que sea el nodo maestro y para esto se debe hacer ping a los demás nodos, el nodo árbitro debe elegir cual nodo será el nodo primario. la principal diferencia con mongodump es que mongodump hace una copia de seguridad de una base de datos al ejecutarse un comando específico y mongodump realiza respaldo de datos entre nodos al caerse un nodo y de esta manera se asegura la perfecta disponibilidad, en cambio con mongodump, se interrumpe la disponibilidad en el momento de hacer el import del backup. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "la función de una replica-set es recuperar el sistema ante fallos de forma automática para ampliar la funcionalidad y la disponibilidad de una base de datos, podría tener, como configuración mínima un nodo primario y dos nodos secundarios. la réplica de datos se hace desde el nodo primario hacia los nodos secundarios. cuando el nodo primario deja de tener disponibilidad se elige al azar a otro nodo para que sea el nodo maestro y para esto se debe hacer ping a los demás nodos, el nodo árbitro debe elegir cual nodo será el nodo primario. la principal diferencia con mongodump es que mongodump hace una copia de seguridad de una base de datos al ejecutarse un comando específico y mongodump realiza respaldo de datos entre nodos al caerse un nodo y de esta manera se asegura la perfecta disponibilidad, en cambio con mongodump, se interrumpe la disponibilidad en el momento de hacer el import del backup. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "la función de una replica-set es recuperar el sistema ante fallos de forma automática para ampliar la funcionalidad y la disponibilidad de una base de datos, podría tener, como configuración mínima un nodo primario y dos nodos secundarios. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "la función de una replica-set es recuperar el sistema ante fallos de forma automática para ampliar la funcionalidad y la disponibilidad de una base de datos, podría tener, como configuración mínima un nodo primario y dos nodos secundarios. la réplica de datos se hace desde el nodo primario hacia los nodos secundarios. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.865,
                                            "Frase": "la función de una replica-set es recuperar el sistema ante fallos de forma automática para ampliar la funcionalidad y la disponibilidad de una base de datos, podría tener, como configuración mínima un nodo primario y dos nodos secundarios. la réplica de datos se hace desde el nodo primario hacia los nodos secundarios. cuando el nodo primario deja de tener disponibilidad se elige al azar a otro nodo para que sea el nodo maestro y para esto se debe hacer ping a los demás nodos, el nodo árbitro debe elegir cual nodo será el nodo primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.899,
                                            "Frase": "la función de una replica-set es recuperar el sistema ante fallos de forma automática para ampliar la funcionalidad y la disponibilidad de una base de datos, podría tener, como configuración mínima un nodo primario y dos nodos secundarios. la réplica de datos se hace desde el nodo primario hacia los nodos secundarios. cuando el nodo primario deja de tener disponibilidad se elige al azar a otro nodo para que sea el nodo maestro y para esto se debe hacer ping a los demás nodos, el nodo árbitro debe elegir cual nodo será el nodo primario. la principal diferencia con mongodump es que mongodump hace una copia de seguridad de una base de datos al ejecutarse un comando específico y mongodump realiza respaldo de datos entre nodos al caerse un nodo y de esta manera se asegura la perfecta disponibilidad, en cambio con mongodump, se interrumpe la disponibilidad en el momento de hacer el import del backup. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.954,
                                            "Frase": "la principal diferencia con mongodump es que mongodump hace una copia de seguridad de una base de datos al ejecutarse un comando específico y mongodump realiza respaldo de datos entre nodos al caerse un nodo y de esta manera se asegura la perfecta disponibilidad, en cambio con mongodump, se interrumpe la disponibilidad en el momento de hacer el import del backup. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "la función de una replica-set es recuperar el sistema ante fallos de forma automática para ampliar la funcionalidad y la disponibilidad de una base de datos, podría tener, como configuración mínima un nodo primario y dos nodos secundarios. la réplica de datos se hace desde el nodo primario hacia los nodos secundarios. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "la función de una replica-set es recuperar el sistema ante fallos de forma automática para ampliar la funcionalidad y la disponibilidad de una base de datos, podría tener, como configuración mínima un nodo primario y dos nodos secundarios. la réplica de datos se hace desde el nodo primario hacia los nodos secundarios. cuando el nodo primario deja de tener disponibilidad se elige al azar a otro nodo para que sea el nodo maestro y para esto se debe hacer ping a los demás nodos, el nodo árbitro debe elegir cual nodo será el nodo primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "la función de una replica-set es recuperar el sistema ante fallos de forma automática para ampliar la funcionalidad y la disponibilidad de una base de datos, podría tener, como configuración mínima un nodo primario y dos nodos secundarios. la réplica de datos se hace desde el nodo primario hacia los nodos secundarios. cuando el nodo primario deja de tener disponibilidad se elige al azar a otro nodo para que sea el nodo maestro y para esto se debe hacer ping a los demás nodos, el nodo árbitro debe elegir cual nodo será el nodo primario. la principal diferencia con mongodump es que mongodump hace una copia de seguridad de una base de datos al ejecutarse un comando específico y mongodump realiza respaldo de datos entre nodos al caerse un nodo y de esta manera se asegura la perfecta disponibilidad, en cambio con mongodump, se interrumpe la disponibilidad en el momento de hacer el import del backup. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "40f310f15c326b49d534adb6e15cf073": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "el método de replica-set permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar una replicación de los datos en mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. la principal diferencia con mongodump, es que esté realiza una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución, esto permite realizar una copia de seguridad para un servidor o base de datos, o permite utilizar una consulta para copiar solo una parte de la colección. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.863,
                                            "Frase": "el método de replica-set permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar una replicación de los datos en mongodb. para una configuración mínima es necesario 3 nodos, los cuales dos nodos son instancias de mongod con acceso a los datos, uno de estos nodos es el nodo primario y el otro nodo replica las operaciones que se realizan sobre el primario. el tercer nodo es llamado, árbitro, y su única función es decidir qué nodo deber ser asignado como primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.851,
                                            "Frase": "para una configuración mínima es necesario 3 nodos, los cuales dos nodos son instancias de mongod con acceso a los datos, uno de estos nodos es el nodo primario y el otro nodo replica las operaciones que se realizan sobre el primario. el tercer nodo es llamado, árbitro, y su única función es decidir qué nodo deber ser asignado como primario. cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. la principal diferencia con mongodump, es que esté realiza una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución, esto permite realizar una copia de seguridad para un servidor o base de datos, o permite utilizar una consulta para copiar solo una parte de la colección. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "el método de replica-set permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar una replicación de los datos en mongodb. para una configuración mínima es necesario 3 nodos, los cuales dos nodos son instancias de mongod con acceso a los datos, uno de estos nodos es el nodo primario y el otro nodo replica las operaciones que se realizan sobre el primario. el tercer nodo es llamado, árbitro, y su única función es decidir qué nodo deber ser asignado como primario. cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. la principal diferencia con mongodump, es que esté realiza una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución, esto permite realizar una copia de seguridad para un servidor o base de datos, o permite utilizar una consulta para copiar solo una parte de la colección. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.753,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.799,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. la principal diferencia con mongodump, es que esté realiza una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución, esto permite realizar una copia de seguridad para un servidor o base de datos, o permite utilizar una consulta para copiar solo una parte de la colección. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.811,
                                            "Frase": "el tercer nodo es llamado, árbitro, y su única función es decidir qué nodo deber ser asignado como primario. cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. la principal diferencia con mongodump, es que esté realiza una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución, esto permite realizar una copia de seguridad para un servidor o base de datos, o permite utilizar una consulta para copiar solo una parte de la colección. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.796,
                                            "Frase": "el método de replica-set permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar una replicación de los datos en mongodb. para una configuración mínima es necesario 3 nodos, los cuales dos nodos son instancias de mongod con acceso a los datos, uno de estos nodos es el nodo primario y el otro nodo replica las operaciones que se realizan sobre el primario. el tercer nodo es llamado, árbitro, y su única función es decidir qué nodo deber ser asignado como primario. cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.797,
                                            "Frase": "el método de replica-set permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar una replicación de los datos en mongodb. para una configuración mínima es necesario 3 nodos, los cuales dos nodos son instancias de mongod con acceso a los datos, uno de estos nodos es el nodo primario y el otro nodo replica las operaciones que se realizan sobre el primario. el tercer nodo es llamado, árbitro, y su única función es decidir qué nodo deber ser asignado como primario. cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. la principal diferencia con mongodump, es que esté realiza una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución, esto permite realizar una copia de seguridad para un servidor o base de datos, o permite utilizar una consulta para copiar solo una parte de la colección. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.871,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "para una configuración mínima es necesario 3 nodos, los cuales dos nodos son instancias de mongod con acceso a los datos, uno de estos nodos es el nodo primario y el otro nodo replica las operaciones que se realizan sobre el primario. el tercer nodo es llamado, árbitro, y su única función es decidir qué nodo deber ser asignado como primario. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "para una configuración mínima es necesario 3 nodos, los cuales dos nodos son instancias de mongod con acceso a los datos, uno de estos nodos es el nodo primario y el otro nodo replica las operaciones que se realizan sobre el primario. el tercer nodo es llamado, árbitro, y su única función es decidir qué nodo deber ser asignado como primario. cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "el método de replica-set permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar una replicación de los datos en mongodb. para una configuración mínima es necesario 3 nodos, los cuales dos nodos son instancias de mongod con acceso a los datos, uno de estos nodos es el nodo primario y el otro nodo replica las operaciones que se realizan sobre el primario. el tercer nodo es llamado, árbitro, y su única función es decidir qué nodo deber ser asignado como primario. cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "el método de replica-set permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar una replicación de los datos en mongodb. para una configuración mínima es necesario 3 nodos, los cuales dos nodos son instancias de mongod con acceso a los datos, uno de estos nodos es el nodo primario y el otro nodo replica las operaciones que se realizan sobre el primario. el tercer nodo es llamado, árbitro, y su única función es decidir qué nodo deber ser asignado como primario. cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. la principal diferencia con mongodump, es que esté realiza una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución, esto permite realizar una copia de seguridad para un servidor o base de datos, o permite utilizar una consulta para copiar solo una parte de la colección. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "el método de replica-set permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar una replicación de los datos en mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. la principal diferencia con mongodump, es que esté realiza una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución, esto permite realizar una copia de seguridad para un servidor o base de datos, o permite utilizar una consulta para copiar solo una parte de la colección. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.898,
                                            "Frase": "el método de replica-set permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar una replicación de los datos en mongodb. para una configuración mínima es necesario 3 nodos, los cuales dos nodos son instancias de mongod con acceso a los datos, uno de estos nodos es el nodo primario y el otro nodo replica las operaciones que se realizan sobre el primario. el tercer nodo es llamado, árbitro, y su única función es decidir qué nodo deber ser asignado como primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.899,
                                            "Frase": "para una configuración mínima es necesario 3 nodos, los cuales dos nodos son instancias de mongod con acceso a los datos, uno de estos nodos es el nodo primario y el otro nodo replica las operaciones que se realizan sobre el primario. el tercer nodo es llamado, árbitro, y su única función es decidir qué nodo deber ser asignado como primario. cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. la principal diferencia con mongodump, es que esté realiza una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución, esto permite realizar una copia de seguridad para un servidor o base de datos, o permite utilizar una consulta para copiar solo una parte de la colección. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "el método de replica-set permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar una replicación de los datos en mongodb. para una configuración mínima es necesario 3 nodos, los cuales dos nodos son instancias de mongod con acceso a los datos, uno de estos nodos es el nodo primario y el otro nodo replica las operaciones que se realizan sobre el primario. el tercer nodo es llamado, árbitro, y su única función es decidir qué nodo deber ser asignado como primario. cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. la principal diferencia con mongodump, es que esté realiza una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución, esto permite realizar una copia de seguridad para un servidor o base de datos, o permite utilizar una consulta para copiar solo una parte de la colección. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "el método de replica-set permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar una replicación de los datos en mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. la principal diferencia con mongodump, es que esté realiza una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución, esto permite realizar una copia de seguridad para un servidor o base de datos, o permite utilizar una consulta para copiar solo una parte de la colección. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "el método de replica-set permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar una replicación de los datos en mongodb. para una configuración mínima es necesario 3 nodos, los cuales dos nodos son instancias de mongod con acceso a los datos, uno de estos nodos es el nodo primario y el otro nodo replica las operaciones que se realizan sobre el primario. el tercer nodo es llamado, árbitro, y su única función es decidir qué nodo deber ser asignado como primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "para una configuración mínima es necesario 3 nodos, los cuales dos nodos son instancias de mongod con acceso a los datos, uno de estos nodos es el nodo primario y el otro nodo replica las operaciones que se realizan sobre el primario. el tercer nodo es llamado, árbitro, y su única función es decidir qué nodo deber ser asignado como primario. cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. la principal diferencia con mongodump, es que esté realiza una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución, esto permite realizar una copia de seguridad para un servidor o base de datos, o permite utilizar una consulta para copiar solo una parte de la colección. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "el método de replica-set permite una recuperación a fallos de forma automática, y es la forma recomendada de implementar una replicación de los datos en mongodb. para una configuración mínima es necesario 3 nodos, los cuales dos nodos son instancias de mongod con acceso a los datos, uno de estos nodos es el nodo primario y el otro nodo replica las operaciones que se realizan sobre el primario. el tercer nodo es llamado, árbitro, y su única función es decidir qué nodo deber ser asignado como primario. cuando un nodo primario deja de tener disponibilidad, es cuando actúa el tercer nodo árbitro, que decide quien pasa a ser el nodo primario. la principal diferencia con mongodump, es que esté realiza una copia de seguridad de los datos conectándose a una instancia de mongod o mongos en ejecución, esto permite realizar una copia de seguridad para un servidor o base de datos, o permite utilizar una consulta para copiar solo una parte de la colección. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "5e3d220728b3995577e63f5641e81516": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.816,
                                            "Frase": "varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.855,
                                            "Frase": "varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "un replica-set en mongodb consiste en varios nodos (ordenadores ejecutando el proceso) con una configuración específica para replicar los documentos en los diferentes nodos. varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.862,
                                            "Frase": "un replica-set en mongodb consiste en varios nodos (ordenadores ejecutando el proceso) con una configuración específica para replicar los documentos en los diferentes nodos. varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.85,
                                            "Frase": "un replica-set en mongodb consiste en varios nodos (ordenadores ejecutando el proceso) con una configuración específica para replicar los documentos en los diferentes nodos. varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.843,
                                            "Frase": "un replica-set en mongodb consiste en varios nodos (ordenadores ejecutando el proceso) con una configuración específica para replicar los documentos en los diferentes nodos. varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. mongodump es similar a un software de copia de seguridad mientras que un replica-set sería lo análogo a un sistema raid. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.779,
                                            "Frase": "mongodump es similar a un software de copia de seguridad mientras que un replica-set sería lo análogo a un sistema raid. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.78,
                                            "Frase": "la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. mongodump es similar a un software de copia de seguridad mientras que un replica-set sería lo análogo a un sistema raid. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.781,
                                            "Frase": "cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. mongodump es similar a un software de copia de seguridad mientras que un replica-set sería lo análogo a un sistema raid. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.802,
                                            "Frase": "la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. mongodump es similar a un software de copia de seguridad mientras que un replica-set sería lo análogo a un sistema raid. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.787,
                                            "Frase": "la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. mongodump es similar a un software de copia de seguridad mientras que un replica-set sería lo análogo a un sistema raid. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.792,
                                            "Frase": "varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. mongodump es similar a un software de copia de seguridad mientras que un replica-set sería lo análogo a un sistema raid. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.797,
                                            "Frase": "un replica-set en mongodb consiste en varios nodos (ordenadores ejecutando el proceso) con una configuración específica para replicar los documentos en los diferentes nodos. varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. mongodump es similar a un software de copia de seguridad mientras que un replica-set sería lo análogo a un sistema raid. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. mongodump es similar a un software de copia de seguridad mientras que un replica-set sería lo análogo a un sistema raid. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "un replica-set en mongodb consiste en varios nodos (ordenadores ejecutando el proceso) con una configuración específica para replicar los documentos en los diferentes nodos. varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "un replica-set en mongodb consiste en varios nodos (ordenadores ejecutando el proceso) con una configuración específica para replicar los documentos en los diferentes nodos. varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. mongodump es similar a un software de copia de seguridad mientras que un replica-set sería lo análogo a un sistema raid. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "un replica-set en mongodb consiste en varios nodos (ordenadores ejecutando el proceso) con una configuración específica para replicar los documentos en los diferentes nodos. varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "un replica-set en mongodb consiste en varios nodos (ordenadores ejecutando el proceso) con una configuración específica para replicar los documentos en los diferentes nodos. varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "un replica-set en mongodb consiste en varios nodos (ordenadores ejecutando el proceso) con una configuración específica para replicar los documentos en los diferentes nodos. varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "un replica-set en mongodb consiste en varios nodos (ordenadores ejecutando el proceso) con una configuración específica para replicar los documentos en los diferentes nodos. varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. mongodump es similar a un software de copia de seguridad mientras que un replica-set sería lo análogo a un sistema raid. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "un replica-set en mongodb consiste en varios nodos (ordenadores ejecutando el proceso) con una configuración específica para replicar los documentos en los diferentes nodos. varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "un replica-set en mongodb consiste en varios nodos (ordenadores ejecutando el proceso) con una configuración específica para replicar los documentos en los diferentes nodos. varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "un replica-set en mongodb consiste en varios nodos (ordenadores ejecutando el proceso) con una configuración específica para replicar los documentos en los diferentes nodos. varios nodos serán almacenes de datos y otro estará funcionando en el rol de árbitro. la función de esta configuración es aumentar la disponibilidad de los datos y generar redundancia, de forma que si un nodo cae o se corrompe, no se pierda la información. la configuración mínima serían 3 nodos, 1 árbitro y 2 almacenes de datos. cuando el nodo primario deja de estar disponible el árbitro asignará ese rol a otro nodo. la diferencia con mongodump es que mongodump hace una copia de seguridad en un momento concreto y si la base de datos se pierde, se puede restaurar al estado en el que estaba en el momento de hacer la copia, mientras que el réplica-set añade redundancia al vuelo. mongodump es similar a un software de copia de seguridad mientras que un replica-set sería lo análogo a un sistema raid. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "527dbc614d8db1a8fa3a2905050e4b38": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.897,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.883,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.832,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.793,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. con dos nodos secundarios se puede realizar el desempate (por este mismo motivo los nodos tienen que ser siempre impares), y lo mismo con un secundario más un nodo árbitro; aunque cabe destacar que éste solamente cumple esta función, no se almacenan datos sobre este y por ende no podría tomar el rol de primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.796,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. con dos nodos secundarios se puede realizar el desempate (por este mismo motivo los nodos tienen que ser siempre impares), y lo mismo con un secundario más un nodo árbitro; aunque cabe destacar que éste solamente cumple esta función, no se almacenan datos sobre este y por ende no podría tomar el rol de primario. pasada la votación el secundario que se encuentre más actualizado con respecto a la información del primario, pasa a tomar el lugar de éste. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.787,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. con dos nodos secundarios se puede realizar el desempate (por este mismo motivo los nodos tienen que ser siempre impares), y lo mismo con un secundario más un nodo árbitro; aunque cabe destacar que éste solamente cumple esta función, no se almacenan datos sobre este y por ende no podría tomar el rol de primario. pasada la votación el secundario que se encuentre más actualizado con respecto a la información del primario, pasa a tomar el lugar de éste. y si se diera el caso de que el que fue primario se recupere del fallo, queda en el rol de secundario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.756,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.809,
                                            "Frase": "es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.825,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.78,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.754,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.748,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. con dos nodos secundarios se puede realizar el desempate (por este mismo motivo los nodos tienen que ser siempre impares), y lo mismo con un secundario más un nodo árbitro; aunque cabe destacar que éste solamente cumple esta función, no se almacenan datos sobre este y por ende no podría tomar el rol de primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.744,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. con dos nodos secundarios se puede realizar el desempate (por este mismo motivo los nodos tienen que ser siempre impares), y lo mismo con un secundario más un nodo árbitro; aunque cabe destacar que éste solamente cumple esta función, no se almacenan datos sobre este y por ende no podría tomar el rol de primario. pasada la votación el secundario que se encuentre más actualizado con respecto a la información del primario, pasa a tomar el lugar de éste. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.744,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. con dos nodos secundarios se puede realizar el desempate (por este mismo motivo los nodos tienen que ser siempre impares), y lo mismo con un secundario más un nodo árbitro; aunque cabe destacar que éste solamente cumple esta función, no se almacenan datos sobre este y por ende no podría tomar el rol de primario. pasada la votación el secundario que se encuentre más actualizado con respecto a la información del primario, pasa a tomar el lugar de éste. y si se diera el caso de que el que fue primario se recupere del fallo, queda en el rol de secundario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.863,
                                            "Frase": "los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.892,
                                            "Frase": "pasada la votación el secundario que se encuentre más actualizado con respecto a la información del primario, pasa a tomar el lugar de éste. y si se diera el caso de que el que fue primario se recupere del fallo, queda en el rol de secundario. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. con dos nodos secundarios se puede realizar el desempate (por este mismo motivo los nodos tienen que ser siempre impares), y lo mismo con un secundario más un nodo árbitro; aunque cabe destacar que éste solamente cumple esta función, no se almacenan datos sobre este y por ende no podría tomar el rol de primario. pasada la votación el secundario que se encuentre más actualizado con respecto a la información del primario, pasa a tomar el lugar de éste. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. con dos nodos secundarios se puede realizar el desempate (por este mismo motivo los nodos tienen que ser siempre impares), y lo mismo con un secundario más un nodo árbitro; aunque cabe destacar que éste solamente cumple esta función, no se almacenan datos sobre este y por ende no podría tomar el rol de primario. pasada la votación el secundario que se encuentre más actualizado con respecto a la información del primario, pasa a tomar el lugar de éste. y si se diera el caso de que el que fue primario se recupere del fallo, queda en el rol de secundario. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. con dos nodos secundarios se puede realizar el desempate (por este mismo motivo los nodos tienen que ser siempre impares), y lo mismo con un secundario más un nodo árbitro; aunque cabe destacar que éste solamente cumple esta función, no se almacenan datos sobre este y por ende no podría tomar el rol de primario. pasada la votación el secundario que se encuentre más actualizado con respecto a la información del primario, pasa a tomar el lugar de éste. y si se diera el caso de que el que fue primario se recupere del fallo, queda en el rol de secundario. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. con dos nodos secundarios se puede realizar el desempate (por este mismo motivo los nodos tienen que ser siempre impares), y lo mismo con un secundario más un nodo árbitro; aunque cabe destacar que éste solamente cumple esta función, no se almacenan datos sobre este y por ende no podría tomar el rol de primario. pasada la votación el secundario que se encuentre más actualizado con respecto a la información del primario, pasa a tomar el lugar de éste. y si se diera el caso de que el que fue primario se recupere del fallo, queda en el rol de secundario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. con dos nodos secundarios se puede realizar el desempate (por este mismo motivo los nodos tienen que ser siempre impares), y lo mismo con un secundario más un nodo árbitro; aunque cabe destacar que éste solamente cumple esta función, no se almacenan datos sobre este y por ende no podría tomar el rol de primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.899,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. con dos nodos secundarios se puede realizar el desempate (por este mismo motivo los nodos tienen que ser siempre impares), y lo mismo con un secundario más un nodo árbitro; aunque cabe destacar que éste solamente cumple esta función, no se almacenan datos sobre este y por ende no podría tomar el rol de primario. pasada la votación el secundario que se encuentre más actualizado con respecto a la información del primario, pasa a tomar el lugar de éste. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. con dos nodos secundarios se puede realizar el desempate (por este mismo motivo los nodos tienen que ser siempre impares), y lo mismo con un secundario más un nodo árbitro; aunque cabe destacar que éste solamente cumple esta función, no se almacenan datos sobre este y por ende no podría tomar el rol de primario. pasada la votación el secundario que se encuentre más actualizado con respecto a la información del primario, pasa a tomar el lugar de éste. y si se diera el caso de que el que fue primario se recupere del fallo, queda en el rol de secundario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. con dos nodos secundarios se puede realizar el desempate (por este mismo motivo los nodos tienen que ser siempre impares), y lo mismo con un secundario más un nodo árbitro; aunque cabe destacar que éste solamente cumple esta función, no se almacenan datos sobre este y por ende no podría tomar el rol de primario. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. con dos nodos secundarios se puede realizar el desempate (por este mismo motivo los nodos tienen que ser siempre impares), y lo mismo con un secundario más un nodo árbitro; aunque cabe destacar que éste solamente cumple esta función, no se almacenan datos sobre este y por ende no podría tomar el rol de primario. pasada la votación el secundario que se encuentre más actualizado con respecto a la información del primario, pasa a tomar el lugar de éste. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "un réplica-set se refiere a la configuración de varios nodos en un sistema de almacenamiento distribuido que almacenan la misma información, otorgando respaldo, alta disponibilidad y balanceo de la carga. es una réplica viva lo que permite la recuperación de fallos de forma automática. son necesarios mínimamente tres nodos: uno principal y dos secundarios, o uno principal, un secundario más un árbitro. la escritura se hace sobre el nodo principal, y el/los secundarios van replicando la información de este, lo que permite que el cliente pueda a su vez realizar la lectura de cualquiera de estos, aprovechando la distribución. los nodos deben ser impares ya que en el caso de que falle el principal, alguno de los secundarios deberá tomar su lugar, en este suceso se llama a una votación para evaluar qué nodo pasará a ser el primario, y si hubiera solamente un nodo secundario no se lograría la mayoría en la votación (1/2) quedando en modo sólo lectura. con dos nodos secundarios se puede realizar el desempate (por este mismo motivo los nodos tienen que ser siempre impares), y lo mismo con un secundario más un nodo árbitro; aunque cabe destacar que éste solamente cumple esta función, no se almacenan datos sobre este y por ende no podría tomar el rol de primario. pasada la votación el secundario que se encuentre más actualizado con respecto a la información del primario, pasa a tomar el lugar de éste. y si se diera el caso de que el que fue primario se recupere del fallo, queda en el rol de secundario. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "b29f6499069390727264f92b4fab2539": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "arquitectura replica- set en mongo este método permite una recuperación a fallos de forma automática y es la forma recomendada de replicación de datos en mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.874,
                                            "Frase": "arquitectura replica- set en mongo este método permite una recuperación a fallos de forma automática y es la forma recomendada de replicación de datos en mongodb. para una configuración mínima son necesarios tres nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.863,
                                            "Frase": "arquitectura replica- set en mongo este método permite una recuperación a fallos de forma automática y es la forma recomendada de replicación de datos en mongodb. para una configuración mínima son necesarios tres nodos. dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "arquitectura replica- set en mongo este método permite una recuperación a fallos de forma automática y es la forma recomendada de replicación de datos en mongodb. para una configuración mínima son necesarios tres nodos. dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. mongodump hace una copia de seguridad de los datos conectándose a una instancia de mongo. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "arquitectura replica- set en mongo este método permite una recuperación a fallos de forma automática y es la forma recomendada de replicación de datos en mongodb. para una configuración mínima son necesarios tres nodos. dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. mongodump hace una copia de seguridad de los datos conectándose a una instancia de mongo. esto permite crear una copia de seguridad para una base datos o un servidor. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.724,
                                            "Frase": "esto permite crear una copia de seguridad para una base datos o un servidor. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.713,
                                            "Frase": "mongodump hace una copia de seguridad de los datos conectándose a una instancia de mongo. esto permite crear una copia de seguridad para una base datos o un servidor. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.731,
                                            "Frase": "dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. mongodump hace una copia de seguridad de los datos conectándose a una instancia de mongo. esto permite crear una copia de seguridad para una base datos o un servidor. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.723,
                                            "Frase": "para una configuración mínima son necesarios tres nodos. dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. mongodump hace una copia de seguridad de los datos conectándose a una instancia de mongo. esto permite crear una copia de seguridad para una base datos o un servidor. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.737,
                                            "Frase": "arquitectura replica- set en mongo este método permite una recuperación a fallos de forma automática y es la forma recomendada de replicación de datos en mongodb. para una configuración mínima son necesarios tres nodos. dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. mongodump hace una copia de seguridad de los datos conectándose a una instancia de mongo. esto permite crear una copia de seguridad para una base datos o un servidor. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "para una configuración mínima son necesarios tres nodos. dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. mongodump hace una copia de seguridad de los datos conectándose a una instancia de mongo. esto permite crear una copia de seguridad para una base datos o un servidor. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.871,
                                            "Frase": "para una configuración mínima son necesarios tres nodos. dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. mongodump hace una copia de seguridad de los datos conectándose a una instancia de mongo. esto permite crear una copia de seguridad para una base datos o un servidor. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.865,
                                            "Frase": "arquitectura replica- set en mongo este método permite una recuperación a fallos de forma automática y es la forma recomendada de replicación de datos en mongodb. para una configuración mínima son necesarios tres nodos. dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. mongodump hace una copia de seguridad de los datos conectándose a una instancia de mongo. esto permite crear una copia de seguridad para una base datos o un servidor. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "arquitectura replica- set en mongo este método permite una recuperación a fallos de forma automática y es la forma recomendada de replicación de datos en mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "arquitectura replica- set en mongo este método permite una recuperación a fallos de forma automática y es la forma recomendada de replicación de datos en mongodb. para una configuración mínima son necesarios tres nodos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "arquitectura replica- set en mongo este método permite una recuperación a fallos de forma automática y es la forma recomendada de replicación de datos en mongodb. para una configuración mínima son necesarios tres nodos. dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "arquitectura replica- set en mongo este método permite una recuperación a fallos de forma automática y es la forma recomendada de replicación de datos en mongodb. para una configuración mínima son necesarios tres nodos. dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. mongodump hace una copia de seguridad de los datos conectándose a una instancia de mongo. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "arquitectura replica- set en mongo este método permite una recuperación a fallos de forma automática y es la forma recomendada de replicación de datos en mongodb. para una configuración mínima son necesarios tres nodos. dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. mongodump hace una copia de seguridad de los datos conectándose a una instancia de mongo. esto permite crear una copia de seguridad para una base datos o un servidor. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "arquitectura replica- set en mongo este método permite una recuperación a fallos de forma automática y es la forma recomendada de replicación de datos en mongodb. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. mongodump hace una copia de seguridad de los datos conectándose a una instancia de mongo. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "arquitectura replica- set en mongo este método permite una recuperación a fallos de forma automática y es la forma recomendada de replicación de datos en mongodb. para una configuración mínima son necesarios tres nodos. dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "arquitectura replica- set en mongo este método permite una recuperación a fallos de forma automática y es la forma recomendada de replicación de datos en mongodb. para una configuración mínima son necesarios tres nodos. dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. mongodump hace una copia de seguridad de los datos conectándose a una instancia de mongo. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "arquitectura replica- set en mongo este método permite una recuperación a fallos de forma automática y es la forma recomendada de replicación de datos en mongodb. para una configuración mínima son necesarios tres nodos. dos nodos serán instancias de mongo con acceso a los datos, uno de ellos será el nodo primario y el otro replica las operaciones que se realicen sobre el nodo primario en caso de dejar de tener disponibilidad. mongodump hace una copia de seguridad de los datos conectándose a una instancia de mongo. esto permite crear una copia de seguridad para una base datos o un servidor. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "5c5a89dcd8685f5e85e1b0e328cfdc41": {
                      "minipregunta0": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta1": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta2": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta3": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "respuesta_completa": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      }
           },
           "21d11c2f294578dc099d9d701d6efe02": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "una arquitectura en replica set, hace referencia al modelo maestro  esclavo, donde su función es la de recuperación de fallos de manera automática mediante la replicación, lo cual es su principal objetivo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "una arquitectura en replica set, hace referencia al modelo maestro  esclavo, donde su función es la de recuperación de fallos de manera automática mediante la replicación, lo cual es su principal objetivo. para esta función se requiere de 3 nodos, denominados: principal, secundario y arbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.882,
                                            "Frase": "una arquitectura en replica set, hace referencia al modelo maestro  esclavo, donde su función es la de recuperación de fallos de manera automática mediante la replicación, lo cual es su principal objetivo. para esta función se requiere de 3 nodos, denominados: principal, secundario y arbitro. en caso que el nodo primario deje de función, el nodo arbitro será el encargado de decidir que nodo será utilizado como primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.774,
                                            "Frase": "una arquitectura en replica set, hace referencia al modelo maestro  esclavo, donde su función es la de recuperación de fallos de manera automática mediante la replicación, lo cual es su principal objetivo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.792,
                                            "Frase": "una arquitectura en replica set, hace referencia al modelo maestro  esclavo, donde su función es la de recuperación de fallos de manera automática mediante la replicación, lo cual es su principal objetivo. para esta función se requiere de 3 nodos, denominados: principal, secundario y arbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.819,
                                            "Frase": "una arquitectura en replica set, hace referencia al modelo maestro  esclavo, donde su función es la de recuperación de fallos de manera automática mediante la replicación, lo cual es su principal objetivo. para esta función se requiere de 3 nodos, denominados: principal, secundario y arbitro. en caso que el nodo primario deje de función, el nodo arbitro será el encargado de decidir que nodo será utilizado como primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "en caso que el nodo primario deje de función, el nodo arbitro será el encargado de decidir que nodo será utilizado como primario. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "para esta función se requiere de 3 nodos, denominados: principal, secundario y arbitro. en caso que el nodo primario deje de función, el nodo arbitro será el encargado de decidir que nodo será utilizado como primario. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "una arquitectura en replica set, hace referencia al modelo maestro  esclavo, donde su función es la de recuperación de fallos de manera automática mediante la replicación, lo cual es su principal objetivo. para esta función se requiere de 3 nodos, denominados: principal, secundario y arbitro. en caso que el nodo primario deje de función, el nodo arbitro será el encargado de decidir que nodo será utilizado como primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "una arquitectura en replica set, hace referencia al modelo maestro  esclavo, donde su función es la de recuperación de fallos de manera automática mediante la replicación, lo cual es su principal objetivo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "una arquitectura en replica set, hace referencia al modelo maestro  esclavo, donde su función es la de recuperación de fallos de manera automática mediante la replicación, lo cual es su principal objetivo. para esta función se requiere de 3 nodos, denominados: principal, secundario y arbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "una arquitectura en replica set, hace referencia al modelo maestro  esclavo, donde su función es la de recuperación de fallos de manera automática mediante la replicación, lo cual es su principal objetivo. para esta función se requiere de 3 nodos, denominados: principal, secundario y arbitro. en caso que el nodo primario deje de función, el nodo arbitro será el encargado de decidir que nodo será utilizado como primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.899,
                                            "Frase": "una arquitectura en replica set, hace referencia al modelo maestro  esclavo, donde su función es la de recuperación de fallos de manera automática mediante la replicación, lo cual es su principal objetivo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "una arquitectura en replica set, hace referencia al modelo maestro  esclavo, donde su función es la de recuperación de fallos de manera automática mediante la replicación, lo cual es su principal objetivo. para esta función se requiere de 3 nodos, denominados: principal, secundario y arbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.958,
                                            "Frase": "una arquitectura en replica set, hace referencia al modelo maestro  esclavo, donde su función es la de recuperación de fallos de manera automática mediante la replicación, lo cual es su principal objetivo. para esta función se requiere de 3 nodos, denominados: principal, secundario y arbitro. en caso que el nodo primario deje de función, el nodo arbitro será el encargado de decidir que nodo será utilizado como primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "054b955cfb5d435f27ff18b109b136e1": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "mongodb usa varias formas de gestión. la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "mongodb usa varias formas de gestión. la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ¿cuántos nodos son necesarios para una configuración mínima?. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "3)\tbalanceo de carga: en caso de que haya varios nodos secundarios, se puede decidir mediante hashed keys cómo se distribuirá la carga en cada uno de ellos. ¿cuál es la principal diferencia con mongodump?. la principal diferencia con mongodump es que mongo dump cubre la seguridad haciendo una foto fija de la base de datos en un cierto momento y almacenándola. digamos que congela la información que tiene la base de datos en ese momento, pero no es un almacenamiento vivo. mongodump es útil cuando queremos migrar datos de una base a otra, por ejemplo. ",
                                            "Lineas": "Lines 14 - 18"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.874,
                                            "Frase": "mongodb usa varias formas de gestión. la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ¿cuántos nodos son necesarios para una configuración mínima?. mínimamente tendremos un nodo primario, uno secundario y un árbitro que no almacene información y que sólo sirva para votar y desempatar en caso de tener que realizar elecciones para elegir nodo primario por motivo de indisponibilidad. un replica-set tiene básicamente 3 ventajas: 1)\trespaldo: tiene posibilidad de hacer réplicas vivas. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.852,
                                            "Frase": "mongodb usa varias formas de gestión. la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ¿cuántos nodos son necesarios para una configuración mínima?. mínimamente tendremos un nodo primario, uno secundario y un árbitro que no almacene información y que sólo sirva para votar y desempatar en caso de tener que realizar elecciones para elegir nodo primario por motivo de indisponibilidad. un replica-set tiene básicamente 3 ventajas: 1)\trespaldo: tiene posibilidad de hacer réplicas vivas. 2)\tdisponibilidad: tenemos un nodo primario que es nuestro servidor mongodb y cuando modificamos en este servidor, estos cambios se propagan a nodos secundarios con un desfase de unos segundos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.845,
                                            "Frase": "en principio aquel que haya tenga la información más actualizada, es decir, el último que haya recibido la copia de la información del nodo primario. si hubiese empate de votos por paridad en el número de nodos, intervendría el árbitro para decidir quien toma el control. una vez el antiguo nodo primario vuelve a estar disponible, éste pasaría a ser secundario sin quitarle el cargo del nodo primario a quien lo tenga en esos momentos. 3)\tbalanceo de carga: en caso de que haya varios nodos secundarios, se puede decidir mediante hashed keys cómo se distribuirá la carga en cada uno de ellos. ¿cuál es la principal diferencia con mongodump?. la principal diferencia con mongodump es que mongo dump cubre la seguridad haciendo una foto fija de la base de datos en un cierto momento y almacenándola. digamos que congela la información que tiene la base de datos en ese momento, pero no es un almacenamiento vivo. mongodump es útil cuando queremos migrar datos de una base a otra, por ejemplo. ",
                                            "Lineas": "Lines 11 - 18"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "la función básica de un replica-set es el respaldo. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.899,
                                            "Frase": "la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "mongodb usa varias formas de gestión. la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "mongodb usa varias formas de gestión. la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ¿cuántos nodos son necesarios para una configuración mínima?. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.858,
                                            "Frase": "la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ¿cuántos nodos son necesarios para una configuración mínima?. mínimamente tendremos un nodo primario, uno secundario y un árbitro que no almacene información y que sólo sirva para votar y desempatar en caso de tener que realizar elecciones para elegir nodo primario por motivo de indisponibilidad. un replica-set tiene básicamente 3 ventajas: 1)\trespaldo: tiene posibilidad de hacer réplicas vivas. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.857,
                                            "Frase": "mongodb usa varias formas de gestión. la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ¿cuántos nodos son necesarios para una configuración mínima?. mínimamente tendremos un nodo primario, uno secundario y un árbitro que no almacene información y que sólo sirva para votar y desempatar en caso de tener que realizar elecciones para elegir nodo primario por motivo de indisponibilidad. un replica-set tiene básicamente 3 ventajas: 1)\trespaldo: tiene posibilidad de hacer réplicas vivas. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.857,
                                            "Frase": "mongodb usa varias formas de gestión. la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ¿cuántos nodos son necesarios para una configuración mínima?. mínimamente tendremos un nodo primario, uno secundario y un árbitro que no almacene información y que sólo sirva para votar y desempatar en caso de tener que realizar elecciones para elegir nodo primario por motivo de indisponibilidad. un replica-set tiene básicamente 3 ventajas: 1)\trespaldo: tiene posibilidad de hacer réplicas vivas. 2)\tdisponibilidad: tenemos un nodo primario que es nuestro servidor mongodb y cuando modificamos en este servidor, estos cambios se propagan a nodos secundarios con un desfase de unos segundos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.85,
                                            "Frase": "mongodb usa varias formas de gestión. la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ¿cuántos nodos son necesarios para una configuración mínima?. mínimamente tendremos un nodo primario, uno secundario y un árbitro que no almacene información y que sólo sirva para votar y desempatar en caso de tener que realizar elecciones para elegir nodo primario por motivo de indisponibilidad. un replica-set tiene básicamente 3 ventajas: 1)\trespaldo: tiene posibilidad de hacer réplicas vivas. 2)\tdisponibilidad: tenemos un nodo primario que es nuestro servidor mongodb y cuando modificamos en este servidor, estos cambios se propagan a nodos secundarios con un desfase de unos segundos. ¿qué ocurre cuando el nodo primario deja de tener disponibilidad?. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "en caso de que el nodo primario quede indisponible, los nodos secundarios dejarían de recibir señal (heartbeat) y automáticamente uno de ellos debe tomar el control. ",
                                            "Lineas": "Line 9"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "en principio aquel que haya tenga la información más actualizada, es decir, el último que haya recibido la copia de la información del nodo primario. si hubiese empate de votos por paridad en el número de nodos, intervendría el árbitro para decidir quien toma el control. ",
                                            "Lineas": "Lines 11 - 12"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "en caso de que el nodo primario quede indisponible, los nodos secundarios dejarían de recibir señal (heartbeat) y automáticamente uno de ellos debe tomar el control. ¿cómo se decide quien toma el control?. en principio aquel que haya tenga la información más actualizada, es decir, el último que haya recibido la copia de la información del nodo primario. ",
                                            "Lineas": "Lines 9 - 11"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.953,
                                            "Frase": "en caso de que el nodo primario quede indisponible, los nodos secundarios dejarían de recibir señal (heartbeat) y automáticamente uno de ellos debe tomar el control. ¿cómo se decide quien toma el control?. en principio aquel que haya tenga la información más actualizada, es decir, el último que haya recibido la copia de la información del nodo primario. si hubiese empate de votos por paridad en el número de nodos, intervendría el árbitro para decidir quien toma el control. ",
                                            "Lineas": "Lines 9 - 12"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "¿qué ocurre cuando el nodo primario deja de tener disponibilidad?. en caso de que el nodo primario quede indisponible, los nodos secundarios dejarían de recibir señal (heartbeat) y automáticamente uno de ellos debe tomar el control. ¿cómo se decide quien toma el control?. en principio aquel que haya tenga la información más actualizada, es decir, el último que haya recibido la copia de la información del nodo primario. si hubiese empate de votos por paridad en el número de nodos, intervendría el árbitro para decidir quien toma el control. ",
                                            "Lineas": "Lines 8 - 12"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "2)\tdisponibilidad: tenemos un nodo primario que es nuestro servidor mongodb y cuando modificamos en este servidor, estos cambios se propagan a nodos secundarios con un desfase de unos segundos. ¿qué ocurre cuando el nodo primario deja de tener disponibilidad?. en caso de que el nodo primario quede indisponible, los nodos secundarios dejarían de recibir señal (heartbeat) y automáticamente uno de ellos debe tomar el control. ¿cómo se decide quien toma el control?. en principio aquel que haya tenga la información más actualizada, es decir, el último que haya recibido la copia de la información del nodo primario. si hubiese empate de votos por paridad en el número de nodos, intervendría el árbitro para decidir quien toma el control. ",
                                            "Lineas": "Lines 7 - 12"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "un replica-set tiene básicamente 3 ventajas: 1)\trespaldo: tiene posibilidad de hacer réplicas vivas. 2)\tdisponibilidad: tenemos un nodo primario que es nuestro servidor mongodb y cuando modificamos en este servidor, estos cambios se propagan a nodos secundarios con un desfase de unos segundos. ¿qué ocurre cuando el nodo primario deja de tener disponibilidad?. en caso de que el nodo primario quede indisponible, los nodos secundarios dejarían de recibir señal (heartbeat) y automáticamente uno de ellos debe tomar el control. ¿cómo se decide quien toma el control?. en principio aquel que haya tenga la información más actualizada, es decir, el último que haya recibido la copia de la información del nodo primario. si hubiese empate de votos por paridad en el número de nodos, intervendría el árbitro para decidir quien toma el control. ",
                                            "Lineas": "Lines 6 - 12"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "un replica-set tiene básicamente 3 ventajas: 1)\trespaldo: tiene posibilidad de hacer réplicas vivas. 2)\tdisponibilidad: tenemos un nodo primario que es nuestro servidor mongodb y cuando modificamos en este servidor, estos cambios se propagan a nodos secundarios con un desfase de unos segundos. ¿qué ocurre cuando el nodo primario deja de tener disponibilidad?. en caso de que el nodo primario quede indisponible, los nodos secundarios dejarían de recibir señal (heartbeat) y automáticamente uno de ellos debe tomar el control. ¿cómo se decide quien toma el control?. en principio aquel que haya tenga la información más actualizada, es decir, el último que haya recibido la copia de la información del nodo primario. si hubiese empate de votos por paridad en el número de nodos, intervendría el árbitro para decidir quien toma el control. una vez el antiguo nodo primario vuelve a estar disponible, éste pasaría a ser secundario sin quitarle el cargo del nodo primario a quien lo tenga en esos momentos. ",
                                            "Lineas": "Lines 6 - 13"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "la principal diferencia con mongodump es que mongo dump cubre la seguridad haciendo una foto fija de la base de datos en un cierto momento y almacenándola. ",
                                            "Lineas": "Line 16"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "la principal diferencia con mongodump es que mongo dump cubre la seguridad haciendo una foto fija de la base de datos en un cierto momento y almacenándola. digamos que congela la información que tiene la base de datos en ese momento, pero no es un almacenamiento vivo. ",
                                            "Lineas": "Lines 16 - 17"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "la principal diferencia con mongodump es que mongo dump cubre la seguridad haciendo una foto fija de la base de datos en un cierto momento y almacenándola. digamos que congela la información que tiene la base de datos en ese momento, pero no es un almacenamiento vivo. mongodump es útil cuando queremos migrar datos de una base a otra, por ejemplo. ",
                                            "Lineas": "Lines 16 - 18"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "la principal diferencia con mongodump es que mongo dump cubre la seguridad haciendo una foto fija de la base de datos en un cierto momento y almacenándola. digamos que congela la información que tiene la base de datos en ese momento, pero no es un almacenamiento vivo. mongodump es útil cuando queremos migrar datos de una base a otra, por ejemplo. la foto fija se guarda con mongodump y luego se extraería con mongorestore para volcarla donde quisiésemos. ",
                                            "Lineas": "Lines 16 - 19"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "3)\tbalanceo de carga: en caso de que haya varios nodos secundarios, se puede decidir mediante hashed keys cómo se distribuirá la carga en cada uno de ellos. ¿cuál es la principal diferencia con mongodump?. la principal diferencia con mongodump es que mongo dump cubre la seguridad haciendo una foto fija de la base de datos en un cierto momento y almacenándola. digamos que congela la información que tiene la base de datos en ese momento, pero no es un almacenamiento vivo. mongodump es útil cuando queremos migrar datos de una base a otra, por ejemplo. ",
                                            "Lineas": "Lines 14 - 18"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "3)\tbalanceo de carga: en caso de que haya varios nodos secundarios, se puede decidir mediante hashed keys cómo se distribuirá la carga en cada uno de ellos. ¿cuál es la principal diferencia con mongodump?. la principal diferencia con mongodump es que mongo dump cubre la seguridad haciendo una foto fija de la base de datos en un cierto momento y almacenándola. digamos que congela la información que tiene la base de datos en ese momento, pero no es un almacenamiento vivo. mongodump es útil cuando queremos migrar datos de una base a otra, por ejemplo. la foto fija se guarda con mongodump y luego se extraería con mongorestore para volcarla donde quisiésemos. ",
                                            "Lineas": "Lines 14 - 19"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "una vez el antiguo nodo primario vuelve a estar disponible, éste pasaría a ser secundario sin quitarle el cargo del nodo primario a quien lo tenga en esos momentos. 3)\tbalanceo de carga: en caso de que haya varios nodos secundarios, se puede decidir mediante hashed keys cómo se distribuirá la carga en cada uno de ellos. ¿cuál es la principal diferencia con mongodump?. la principal diferencia con mongodump es que mongo dump cubre la seguridad haciendo una foto fija de la base de datos en un cierto momento y almacenándola. digamos que congela la información que tiene la base de datos en ese momento, pero no es un almacenamiento vivo. mongodump es útil cuando queremos migrar datos de una base a otra, por ejemplo. la foto fija se guarda con mongodump y luego se extraería con mongorestore para volcarla donde quisiésemos. ",
                                            "Lineas": "Lines 13 - 19"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "en principio aquel que haya tenga la información más actualizada, es decir, el último que haya recibido la copia de la información del nodo primario. si hubiese empate de votos por paridad en el número de nodos, intervendría el árbitro para decidir quien toma el control. una vez el antiguo nodo primario vuelve a estar disponible, éste pasaría a ser secundario sin quitarle el cargo del nodo primario a quien lo tenga en esos momentos. 3)\tbalanceo de carga: en caso de que haya varios nodos secundarios, se puede decidir mediante hashed keys cómo se distribuirá la carga en cada uno de ellos. ¿cuál es la principal diferencia con mongodump?. la principal diferencia con mongodump es que mongo dump cubre la seguridad haciendo una foto fija de la base de datos en un cierto momento y almacenándola. digamos que congela la información que tiene la base de datos en ese momento, pero no es un almacenamiento vivo. mongodump es útil cuando queremos migrar datos de una base a otra, por ejemplo. ",
                                            "Lineas": "Lines 11 - 18"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.957,
                                            "Frase": "un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.958,
                                            "Frase": "la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.965,
                                            "Frase": "mongodb usa varias formas de gestión. la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ¿cuántos nodos son necesarios para una configuración mínima?. mínimamente tendremos un nodo primario, uno secundario y un árbitro que no almacene información y que sólo sirva para votar y desempatar en caso de tener que realizar elecciones para elegir nodo primario por motivo de indisponibilidad. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "mongodb usa varias formas de gestión. la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ¿cuántos nodos son necesarios para una configuración mínima?. mínimamente tendremos un nodo primario, uno secundario y un árbitro que no almacene información y que sólo sirva para votar y desempatar en caso de tener que realizar elecciones para elegir nodo primario por motivo de indisponibilidad. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "mongodb usa varias formas de gestión. la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ¿cuántos nodos son necesarios para una configuración mínima?. mínimamente tendremos un nodo primario, uno secundario y un árbitro que no almacene información y que sólo sirva para votar y desempatar en caso de tener que realizar elecciones para elegir nodo primario por motivo de indisponibilidad. un replica-set tiene básicamente 3 ventajas: 1)\trespaldo: tiene posibilidad de hacer réplicas vivas. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.94,
                                            "Frase": "mongodb usa varias formas de gestión. la función básica de un replica-set es el respaldo. un replica-set es una configuración de varios nodos que almacenan la misma información con el objetivo de ofrecer disponibilidad alta. ¿cuántos nodos son necesarios para una configuración mínima?. mínimamente tendremos un nodo primario, uno secundario y un árbitro que no almacene información y que sólo sirva para votar y desempatar en caso de tener que realizar elecciones para elegir nodo primario por motivo de indisponibilidad. un replica-set tiene básicamente 3 ventajas: 1)\trespaldo: tiene posibilidad de hacer réplicas vivas. 2)\tdisponibilidad: tenemos un nodo primario que es nuestro servidor mongodb y cuando modificamos en este servidor, estos cambios se propagan a nodos secundarios con un desfase de unos segundos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "en caso de que el nodo primario quede indisponible, los nodos secundarios dejarían de recibir señal (heartbeat) y automáticamente uno de ellos debe tomar el control. ¿cómo se decide quien toma el control?. en principio aquel que haya tenga la información más actualizada, es decir, el último que haya recibido la copia de la información del nodo primario. si hubiese empate de votos por paridad en el número de nodos, intervendría el árbitro para decidir quien toma el control. una vez el antiguo nodo primario vuelve a estar disponible, éste pasaría a ser secundario sin quitarle el cargo del nodo primario a quien lo tenga en esos momentos. 3)\tbalanceo de carga: en caso de que haya varios nodos secundarios, se puede decidir mediante hashed keys cómo se distribuirá la carga en cada uno de ellos. ¿cuál es la principal diferencia con mongodump?. la principal diferencia con mongodump es que mongo dump cubre la seguridad haciendo una foto fija de la base de datos en un cierto momento y almacenándola. ",
                                            "Lineas": "Lines 9 - 16"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 1.0,
                                 "Umbral 0.4 - 0.9": 1.0,
                                 "Umbral 0.5 - 0.9": 1.0,
                                 "Umbral 0.6 - 0.9": 1.0,
                                 "Umbral 0.7 - 0.9": 1.0,
                                 "Umbral 0.8 - 0.9": 1.0,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "812eace7c692fa287fa5ff524697107b": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.889,
                                            "Frase": "mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.93,
                                            "Frase": "mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replicaset se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replicaset se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.854,
                                            "Frase": "se requieren 3 nodos que son definidas como nodo principal, nodos secundarios en donde uno de estos últimos nodos se comporta como árbitro para la selección del nodo principal. entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replicaset se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.853,
                                            "Frase": "es un grupo de instancias de mongo que contienen el mismo conjunto de datos. replicate set cuya función principal es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se requieren 3 nodos que son definidas como nodo principal, nodos secundarios en donde uno de estos últimos nodos se comporta como árbitro para la selección del nodo principal. entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "es un grupo de instancias de mongo que contienen el mismo conjunto de datos. replicate set cuya función principal es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se requieren 3 nodos que son definidas como nodo principal, nodos secundarios en donde uno de estos últimos nodos se comporta como árbitro para la selección del nodo principal. entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replicaset se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.874,
                                            "Frase": "es un grupo de instancias de mongo que contienen el mismo conjunto de datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.83,
                                            "Frase": "entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.811,
                                            "Frase": "entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replicaset se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.766,
                                            "Frase": "es un grupo de instancias de mongo que contienen el mismo conjunto de datos. replicate set cuya función principal es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se requieren 3 nodos que son definidas como nodo principal, nodos secundarios en donde uno de estos últimos nodos se comporta como árbitro para la selección del nodo principal. entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.79,
                                            "Frase": "es un grupo de instancias de mongo que contienen el mismo conjunto de datos. replicate set cuya función principal es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se requieren 3 nodos que son definidas como nodo principal, nodos secundarios en donde uno de estos últimos nodos se comporta como árbitro para la selección del nodo principal. entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.783,
                                            "Frase": "es un grupo de instancias de mongo que contienen el mismo conjunto de datos. replicate set cuya función principal es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se requieren 3 nodos que son definidas como nodo principal, nodos secundarios en donde uno de estos últimos nodos se comporta como árbitro para la selección del nodo principal. entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replicaset se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "es un grupo de instancias de mongo que contienen el mismo conjunto de datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "es un grupo de instancias de mongo que contienen el mismo conjunto de datos. replicate set cuya función principal es replicar las definiciones que contiene el nodo principal a los nodos secundarios. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replicaset se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "es un grupo de instancias de mongo que contienen el mismo conjunto de datos. replicate set cuya función principal es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se requieren 3 nodos que son definidas como nodo principal, nodos secundarios en donde uno de estos últimos nodos se comporta como árbitro para la selección del nodo principal. entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "es un grupo de instancias de mongo que contienen el mismo conjunto de datos. replicate set cuya función principal es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se requieren 3 nodos que son definidas como nodo principal, nodos secundarios en donde uno de estos últimos nodos se comporta como árbitro para la selección del nodo principal. entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "es un grupo de instancias de mongo que contienen el mismo conjunto de datos. replicate set cuya función principal es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se requieren 3 nodos que son definidas como nodo principal, nodos secundarios en donde uno de estos últimos nodos se comporta como árbitro para la selección del nodo principal. entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replicaset se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.848,
                                            "Frase": "mientras que replicaset se encarga de la alta disponibilidad. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replicaset se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replicaset se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "se requieren 3 nodos que son definidas como nodo principal, nodos secundarios en donde uno de estos últimos nodos se comporta como árbitro para la selección del nodo principal. entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replicaset se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "replicate set cuya función principal es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se requieren 3 nodos que son definidas como nodo principal, nodos secundarios en donde uno de estos últimos nodos se comporta como árbitro para la selección del nodo principal. entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replicaset se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "es un grupo de instancias de mongo que contienen el mismo conjunto de datos. replicate set cuya función principal es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se requieren 3 nodos que son definidas como nodo principal, nodos secundarios en donde uno de estos últimos nodos se comporta como árbitro para la selección del nodo principal. entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replicaset se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "es un grupo de instancias de mongo que contienen el mismo conjunto de datos. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.965,
                                            "Frase": "entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replicaset se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "se requieren 3 nodos que son definidas como nodo principal, nodos secundarios en donde uno de estos últimos nodos se comporta como árbitro para la selección del nodo principal. entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replicaset se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "es un grupo de instancias de mongo que contienen el mismo conjunto de datos. replicate set cuya función principal es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se requieren 3 nodos que son definidas como nodo principal, nodos secundarios en donde uno de estos últimos nodos se comporta como árbitro para la selección del nodo principal. entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "es un grupo de instancias de mongo que contienen el mismo conjunto de datos. replicate set cuya función principal es replicar las definiciones que contiene el nodo principal a los nodos secundarios. se requieren 3 nodos que son definidas como nodo principal, nodos secundarios en donde uno de estos últimos nodos se comporta como árbitro para la selección del nodo principal. entra en función el nodo que esta configurado como arbitro para seleccionar un nodo principal. mongodump es usado para realizar copias de seguridad de base de datos, colecciones de mongo. mientras que replicaset se encarga de la alta disponibilidad. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "2fb405439e8aaae1d342716e1b595d83": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.861,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.873,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.88,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.831,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. si el nodo primario cae y deja de tener disponibilidad el resto de nodos se dan cuenta gracias al heartbeat que se envían cada 3 segundos y en ese momento serán los secundarios los que decidirán mediante votación cuál de ellos pasa a ser el nuevo nodo principal. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.82,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. si el nodo primario cae y deja de tener disponibilidad el resto de nodos se dan cuenta gracias al heartbeat que se envían cada 3 segundos y en ese momento serán los secundarios los que decidirán mediante votación cuál de ellos pasa a ser el nuevo nodo principal. el método de copia de seguridad mongodump solo sirve para hacer una copia de una foto fija a la bbdd si se hacen modificaciones posteriores al restaurar la bbdd se habrán perdido mientras que con un replica-set los demás nodos están constantemente actualizados. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.795,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. si el nodo primario cae y deja de tener disponibilidad el resto de nodos se dan cuenta gracias al heartbeat que se envían cada 3 segundos y en ese momento serán los secundarios los que decidirán mediante votación cuál de ellos pasa a ser el nuevo nodo principal. el método de copia de seguridad mongodump solo sirve para hacer una copia de una foto fija a la bbdd si se hacen modificaciones posteriores al restaurar la bbdd se habrán perdido mientras que con un replica-set los demás nodos están constantemente actualizados. por el contrario, si borramos un elemento y futuramente queremos recuperarlo con replica-set no podremos mientras que con mongodump lo recuperariamos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.77,
                                            "Frase": "además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.796,
                                            "Frase": "además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.754,
                                            "Frase": "se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.77,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.742,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. si el nodo primario cae y deja de tener disponibilidad el resto de nodos se dan cuenta gracias al heartbeat que se envían cada 3 segundos y en ese momento serán los secundarios los que decidirán mediante votación cuál de ellos pasa a ser el nuevo nodo principal. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.729,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. si el nodo primario cae y deja de tener disponibilidad el resto de nodos se dan cuenta gracias al heartbeat que se envían cada 3 segundos y en ese momento serán los secundarios los que decidirán mediante votación cuál de ellos pasa a ser el nuevo nodo principal. el método de copia de seguridad mongodump solo sirve para hacer una copia de una foto fija a la bbdd si se hacen modificaciones posteriores al restaurar la bbdd se habrán perdido mientras que con un replica-set los demás nodos están constantemente actualizados. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.724,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. si el nodo primario cae y deja de tener disponibilidad el resto de nodos se dan cuenta gracias al heartbeat que se envían cada 3 segundos y en ese momento serán los secundarios los que decidirán mediante votación cuál de ellos pasa a ser el nuevo nodo principal. el método de copia de seguridad mongodump solo sirve para hacer una copia de una foto fija a la bbdd si se hacen modificaciones posteriores al restaurar la bbdd se habrán perdido mientras que con un replica-set los demás nodos están constantemente actualizados. por el contrario, si borramos un elemento y futuramente queremos recuperarlo con replica-set no podremos mientras que con mongodump lo recuperariamos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.899,
                                            "Frase": "además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. si el nodo primario cae y deja de tener disponibilidad el resto de nodos se dan cuenta gracias al heartbeat que se envían cada 3 segundos y en ese momento serán los secundarios los que decidirán mediante votación cuál de ellos pasa a ser el nuevo nodo principal. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. si el nodo primario cae y deja de tener disponibilidad el resto de nodos se dan cuenta gracias al heartbeat que se envían cada 3 segundos y en ese momento serán los secundarios los que decidirán mediante votación cuál de ellos pasa a ser el nuevo nodo principal. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. si el nodo primario cae y deja de tener disponibilidad el resto de nodos se dan cuenta gracias al heartbeat que se envían cada 3 segundos y en ese momento serán los secundarios los que decidirán mediante votación cuál de ellos pasa a ser el nuevo nodo principal. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. si el nodo primario cae y deja de tener disponibilidad el resto de nodos se dan cuenta gracias al heartbeat que se envían cada 3 segundos y en ese momento serán los secundarios los que decidirán mediante votación cuál de ellos pasa a ser el nuevo nodo principal. el método de copia de seguridad mongodump solo sirve para hacer una copia de una foto fija a la bbdd si se hacen modificaciones posteriores al restaurar la bbdd se habrán perdido mientras que con un replica-set los demás nodos están constantemente actualizados. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. si el nodo primario cae y deja de tener disponibilidad el resto de nodos se dan cuenta gracias al heartbeat que se envían cada 3 segundos y en ese momento serán los secundarios los que decidirán mediante votación cuál de ellos pasa a ser el nuevo nodo principal. el método de copia de seguridad mongodump solo sirve para hacer una copia de una foto fija a la bbdd si se hacen modificaciones posteriores al restaurar la bbdd se habrán perdido mientras que con un replica-set los demás nodos están constantemente actualizados. por el contrario, si borramos un elemento y futuramente queremos recuperarlo con replica-set no podremos mientras que con mongodump lo recuperariamos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. si el nodo primario cae y deja de tener disponibilidad el resto de nodos se dan cuenta gracias al heartbeat que se envían cada 3 segundos y en ese momento serán los secundarios los que decidirán mediante votación cuál de ellos pasa a ser el nuevo nodo principal. el método de copia de seguridad mongodump solo sirve para hacer una copia de una foto fija a la bbdd si se hacen modificaciones posteriores al restaurar la bbdd se habrán perdido mientras que con un replica-set los demás nodos están constantemente actualizados. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. si el nodo primario cae y deja de tener disponibilidad el resto de nodos se dan cuenta gracias al heartbeat que se envían cada 3 segundos y en ese momento serán los secundarios los que decidirán mediante votación cuál de ellos pasa a ser el nuevo nodo principal. el método de copia de seguridad mongodump solo sirve para hacer una copia de una foto fija a la bbdd si se hacen modificaciones posteriores al restaurar la bbdd se habrán perdido mientras que con un replica-set los demás nodos están constantemente actualizados. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.888,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. si el nodo primario cae y deja de tener disponibilidad el resto de nodos se dan cuenta gracias al heartbeat que se envían cada 3 segundos y en ese momento serán los secundarios los que decidirán mediante votación cuál de ellos pasa a ser el nuevo nodo principal. el método de copia de seguridad mongodump solo sirve para hacer una copia de una foto fija a la bbdd si se hacen modificaciones posteriores al restaurar la bbdd se habrán perdido mientras que con un replica-set los demás nodos están constantemente actualizados. por el contrario, si borramos un elemento y futuramente queremos recuperarlo con replica-set no podremos mientras que con mongodump lo recuperariamos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. si el nodo primario cae y deja de tener disponibilidad el resto de nodos se dan cuenta gracias al heartbeat que se envían cada 3 segundos y en ese momento serán los secundarios los que decidirán mediante votación cuál de ellos pasa a ser el nuevo nodo principal. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. si el nodo primario cae y deja de tener disponibilidad el resto de nodos se dan cuenta gracias al heartbeat que se envían cada 3 segundos y en ese momento serán los secundarios los que decidirán mediante votación cuál de ellos pasa a ser el nuevo nodo principal. el método de copia de seguridad mongodump solo sirve para hacer una copia de una foto fija a la bbdd si se hacen modificaciones posteriores al restaurar la bbdd se habrán perdido mientras que con un replica-set los demás nodos están constantemente actualizados. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "replica-set es un método de replicación utilizado por mongodb para dar respaldo a los datos de la bbdd. se trata de un método de redundancia de datos para dar respaldo y aumentar la disponibilidad de los mismos y poder seguir trabajando pese a que uno de los nodos se caiga. además, mejora el rendimiento puesto que solo es necesario escribir en el nodo principal, pero podemos leer de cualquiera de los nodos. para una configuración mínima es necesario tener mínimo 3 nodos, 1 primario y el resto secundarios. si el nodo primario cae y deja de tener disponibilidad el resto de nodos se dan cuenta gracias al heartbeat que se envían cada 3 segundos y en ese momento serán los secundarios los que decidirán mediante votación cuál de ellos pasa a ser el nuevo nodo principal. el método de copia de seguridad mongodump solo sirve para hacer una copia de una foto fija a la bbdd si se hacen modificaciones posteriores al restaurar la bbdd se habrán perdido mientras que con un replica-set los demás nodos están constantemente actualizados. por el contrario, si borramos un elemento y futuramente queremos recuperarlo con replica-set no podremos mientras que con mongodump lo recuperariamos. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "f7285176074d58e58fbbc2c485926167": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.728,
                                            "Frase": "se diferencia en mongodump en que este permite realizar copias de un colección o documento mediante una instrucción, la cual se guarda en una carpeta. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.668,
                                            "Frase": "la arquitectura en réplica set se realiza como una prevención a fallos, se necesitan al menos 3 nodos, de los cuales uno será árbitro, los otros dos van a ser instancias de mongo, pero uno de ellos será el principal y el otro la réplica, sin embargo, el nodo principal no es estacionario, se va actualizando según la disponibilidad que se tenga (esto lo decide el árbitro, ya que los nodos se comunican enviando señales cada dos segundo para indicar que siguen activos), por lo que si se cae el nodo principal no hay pérdida de información. se diferencia en mongodump en que este permite realizar copias de un colección o documento mediante una instrucción, la cual se guarda en una carpeta. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.679,
                                            "Frase": "se diferencia en mongodump en que este permite realizar copias de un colección o documento mediante una instrucción, la cual se guarda en una carpeta. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.624,
                                            "Frase": "la arquitectura en réplica set se realiza como una prevención a fallos, se necesitan al menos 3 nodos, de los cuales uno será árbitro, los otros dos van a ser instancias de mongo, pero uno de ellos será el principal y el otro la réplica, sin embargo, el nodo principal no es estacionario, se va actualizando según la disponibilidad que se tenga (esto lo decide el árbitro, ya que los nodos se comunican enviando señales cada dos segundo para indicar que siguen activos), por lo que si se cae el nodo principal no hay pérdida de información. se diferencia en mongodump en que este permite realizar copias de un colección o documento mediante una instrucción, la cual se guarda en una carpeta. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.79,
                                            "Frase": "la arquitectura en réplica set se realiza como una prevención a fallos, se necesitan al menos 3 nodos, de los cuales uno será árbitro, los otros dos van a ser instancias de mongo, pero uno de ellos será el principal y el otro la réplica, sin embargo, el nodo principal no es estacionario, se va actualizando según la disponibilidad que se tenga (esto lo decide el árbitro, ya que los nodos se comunican enviando señales cada dos segundo para indicar que siguen activos), por lo que si se cae el nodo principal no hay pérdida de información. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.813,
                                            "Frase": "la arquitectura en réplica set se realiza como una prevención a fallos, se necesitan al menos 3 nodos, de los cuales uno será árbitro, los otros dos van a ser instancias de mongo, pero uno de ellos será el principal y el otro la réplica, sin embargo, el nodo principal no es estacionario, se va actualizando según la disponibilidad que se tenga (esto lo decide el árbitro, ya que los nodos se comunican enviando señales cada dos segundo para indicar que siguen activos), por lo que si se cae el nodo principal no hay pérdida de información. se diferencia en mongodump en que este permite realizar copias de un colección o documento mediante una instrucción, la cual se guarda en una carpeta. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.863,
                                            "Frase": "se diferencia en mongodump en que este permite realizar copias de un colección o documento mediante una instrucción, la cual se guarda en una carpeta. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.837,
                                            "Frase": "la arquitectura en réplica set se realiza como una prevención a fallos, se necesitan al menos 3 nodos, de los cuales uno será árbitro, los otros dos van a ser instancias de mongo, pero uno de ellos será el principal y el otro la réplica, sin embargo, el nodo principal no es estacionario, se va actualizando según la disponibilidad que se tenga (esto lo decide el árbitro, ya que los nodos se comunican enviando señales cada dos segundo para indicar que siguen activos), por lo que si se cae el nodo principal no hay pérdida de información. se diferencia en mongodump en que este permite realizar copias de un colección o documento mediante una instrucción, la cual se guarda en una carpeta. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.83,
                                            "Frase": "se diferencia en mongodump en que este permite realizar copias de un colección o documento mediante una instrucción, la cual se guarda en una carpeta. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.813,
                                            "Frase": "la arquitectura en réplica set se realiza como una prevención a fallos, se necesitan al menos 3 nodos, de los cuales uno será árbitro, los otros dos van a ser instancias de mongo, pero uno de ellos será el principal y el otro la réplica, sin embargo, el nodo principal no es estacionario, se va actualizando según la disponibilidad que se tenga (esto lo decide el árbitro, ya que los nodos se comunican enviando señales cada dos segundo para indicar que siguen activos), por lo que si se cae el nodo principal no hay pérdida de información. se diferencia en mongodump en que este permite realizar copias de un colección o documento mediante una instrucción, la cual se guarda en una carpeta. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.75,
                                 "Umbral 0.4 - 0.8": 0.75,
                                 "Umbral 0.5 - 0.8": 0.75,
                                 "Umbral 0.6 - 0.8": 0.75,
                                 "Umbral 0.7 - 0.8": 0.625,
                                 "Umbral 0.3 - 0.9": 0.5,
                                 "Umbral 0.4 - 0.9": 0.5,
                                 "Umbral 0.5 - 0.9": 0.5,
                                 "Umbral 0.6 - 0.9": 0.5,
                                 "Umbral 0.7 - 0.9": 0.375,
                                 "Umbral 0.8 - 0.9": 0.25,
                                 "Umbral 0.3 - 0.7": 0.875,
                                 "Umbral 0.4 - 0.7": 0.875,
                                 "Umbral 0.5 - 0.7": 0.875,
                                 "Umbral 0.6 - 0.7": 0.875,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "53ebdb2239cc53c714efaaa26e576c4c": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "el replica-set permite la redundancia de datos y la alta disponibilidad. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "un replica-set consiste en la replicación de servidores. se puede implementar en mongodb y se trata de una refinación del modelo maestro-esclavo. el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.919,
                                            "Frase": "un replica-set consiste en la replicación de servidores. se puede implementar en mongodb y se trata de una refinación del modelo maestro-esclavo. el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.902,
                                            "Frase": "un replica-set consiste en la replicación de servidores. se puede implementar en mongodb y se trata de una refinación del modelo maestro-esclavo. el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.867,
                                            "Frase": "el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. en caso de que el nodo primario falle se realiza una votación donde el nodo árbitro se encarga de elegir al nuevo nodo primario. la elección la toma en función del número de votos de cada uno de los nodos secundarios y de sus características, ya que hay nodos que no pueden ser nunca nodo primario, por ejemplo, el nodo árbitro o un nodo que esté oculto. mongodump es un comando que se emplea para realizar una copia de seguridad (volcado de datos) de la base de datos tal y como si se tomara una fotografía. ",
                                            "Lineas": "Lines 3 - 9"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.868,
                                            "Frase": "el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. en caso de que el nodo primario falle se realiza una votación donde el nodo árbitro se encarga de elegir al nuevo nodo primario. la elección la toma en función del número de votos de cada uno de los nodos secundarios y de sus características, ya que hay nodos que no pueden ser nunca nodo primario, por ejemplo, el nodo árbitro o un nodo que esté oculto. mongodump es un comando que se emplea para realizar una copia de seguridad (volcado de datos) de la base de datos tal y como si se tomara una fotografía. sin embargo, un replica-set permite tener una imagen actualizada en todos los nodos pertenecientes al conjunto sin necesidad de realizar una copia. ",
                                            "Lineas": "Lines 3 - 10"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.877,
                                            "Frase": "se puede implementar en mongodb y se trata de una refinación del modelo maestro-esclavo. el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "un replica-set consiste en la replicación de servidores. se puede implementar en mongodb y se trata de una refinación del modelo maestro-esclavo. el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.86,
                                            "Frase": "un replica-set consiste en la replicación de servidores. se puede implementar en mongodb y se trata de una refinación del modelo maestro-esclavo. el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.834,
                                            "Frase": "un replica-set consiste en la replicación de servidores. se puede implementar en mongodb y se trata de una refinación del modelo maestro-esclavo. el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. en caso de que el nodo primario falle se realiza una votación donde el nodo árbitro se encarga de elegir al nuevo nodo primario. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.822,
                                            "Frase": "el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. en caso de que el nodo primario falle se realiza una votación donde el nodo árbitro se encarga de elegir al nuevo nodo primario. la elección la toma en función del número de votos de cada uno de los nodos secundarios y de sus características, ya que hay nodos que no pueden ser nunca nodo primario, por ejemplo, el nodo árbitro o un nodo que esté oculto. mongodump es un comando que se emplea para realizar una copia de seguridad (volcado de datos) de la base de datos tal y como si se tomara una fotografía. sin embargo, un replica-set permite tener una imagen actualizada en todos los nodos pertenecientes al conjunto sin necesidad de realizar una copia. ",
                                            "Lineas": "Lines 3 - 10"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "la elección la toma en función del número de votos de cada uno de los nodos secundarios y de sus características, ya que hay nodos que no pueden ser nunca nodo primario, por ejemplo, el nodo árbitro o un nodo que esté oculto. ",
                                            "Lineas": "Line 8"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.921,
                                            "Frase": "en caso de que el nodo primario falle se realiza una votación donde el nodo árbitro se encarga de elegir al nuevo nodo primario. la elección la toma en función del número de votos de cada uno de los nodos secundarios y de sus características, ya que hay nodos que no pueden ser nunca nodo primario, por ejemplo, el nodo árbitro o un nodo que esté oculto. ",
                                            "Lineas": "Lines 7 - 8"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. en caso de que el nodo primario falle se realiza una votación donde el nodo árbitro se encarga de elegir al nuevo nodo primario. la elección la toma en función del número de votos de cada uno de los nodos secundarios y de sus características, ya que hay nodos que no pueden ser nunca nodo primario, por ejemplo, el nodo árbitro o un nodo que esté oculto. ",
                                            "Lineas": "Lines 5 - 8"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. en caso de que el nodo primario falle se realiza una votación donde el nodo árbitro se encarga de elegir al nuevo nodo primario. la elección la toma en función del número de votos de cada uno de los nodos secundarios y de sus características, ya que hay nodos que no pueden ser nunca nodo primario, por ejemplo, el nodo árbitro o un nodo que esté oculto. ",
                                            "Lineas": "Lines 4 - 8"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.946,
                                            "Frase": "el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. en caso de que el nodo primario falle se realiza una votación donde el nodo árbitro se encarga de elegir al nuevo nodo primario. la elección la toma en función del número de votos de cada uno de los nodos secundarios y de sus características, ya que hay nodos que no pueden ser nunca nodo primario, por ejemplo, el nodo árbitro o un nodo que esté oculto. ",
                                            "Lineas": "Lines 3 - 8"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "se puede implementar en mongodb y se trata de una refinación del modelo maestro-esclavo. el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. en caso de que el nodo primario falle se realiza una votación donde el nodo árbitro se encarga de elegir al nuevo nodo primario. la elección la toma en función del número de votos de cada uno de los nodos secundarios y de sus características, ya que hay nodos que no pueden ser nunca nodo primario, por ejemplo, el nodo árbitro o un nodo que esté oculto. ",
                                            "Lineas": "Lines 2 - 8"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "un replica-set consiste en la replicación de servidores. se puede implementar en mongodb y se trata de una refinación del modelo maestro-esclavo. el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. en caso de que el nodo primario falle se realiza una votación donde el nodo árbitro se encarga de elegir al nuevo nodo primario. la elección la toma en función del número de votos de cada uno de los nodos secundarios y de sus características, ya que hay nodos que no pueden ser nunca nodo primario, por ejemplo, el nodo árbitro o un nodo que esté oculto. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "mongodump es un comando que se emplea para realizar una copia de seguridad (volcado de datos) de la base de datos tal y como si se tomara una fotografía. ",
                                            "Lineas": "Line 9"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "mongodump es un comando que se emplea para realizar una copia de seguridad (volcado de datos) de la base de datos tal y como si se tomara una fotografía. sin embargo, un replica-set permite tener una imagen actualizada en todos los nodos pertenecientes al conjunto sin necesidad de realizar una copia. ",
                                            "Lineas": "Lines 9 - 10"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "la elección la toma en función del número de votos de cada uno de los nodos secundarios y de sus características, ya que hay nodos que no pueden ser nunca nodo primario, por ejemplo, el nodo árbitro o un nodo que esté oculto. mongodump es un comando que se emplea para realizar una copia de seguridad (volcado de datos) de la base de datos tal y como si se tomara una fotografía. sin embargo, un replica-set permite tener una imagen actualizada en todos los nodos pertenecientes al conjunto sin necesidad de realizar una copia. ",
                                            "Lineas": "Lines 8 - 10"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "un replica-set consiste en la replicación de servidores. se puede implementar en mongodb y se trata de una refinación del modelo maestro-esclavo. el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "el nodo primario se escoge a la hora de crear el replica-set. en caso de que el nodo primario falle se realiza una votación donde el nodo árbitro se encarga de elegir al nuevo nodo primario. la elección la toma en función del número de votos de cada uno de los nodos secundarios y de sus características, ya que hay nodos que no pueden ser nunca nodo primario, por ejemplo, el nodo árbitro o un nodo que esté oculto. mongodump es un comando que se emplea para realizar una copia de seguridad (volcado de datos) de la base de datos tal y como si se tomara una fotografía. sin embargo, un replica-set permite tener una imagen actualizada en todos los nodos pertenecientes al conjunto sin necesidad de realizar una copia. ",
                                            "Lineas": "Lines 6 - 10"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. en caso de que el nodo primario falle se realiza una votación donde el nodo árbitro se encarga de elegir al nuevo nodo primario. la elección la toma en función del número de votos de cada uno de los nodos secundarios y de sus características, ya que hay nodos que no pueden ser nunca nodo primario, por ejemplo, el nodo árbitro o un nodo que esté oculto. mongodump es un comando que se emplea para realizar una copia de seguridad (volcado de datos) de la base de datos tal y como si se tomara una fotografía. ",
                                            "Lineas": "Lines 4 - 9"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. en caso de que el nodo primario falle se realiza una votación donde el nodo árbitro se encarga de elegir al nuevo nodo primario. la elección la toma en función del número de votos de cada uno de los nodos secundarios y de sus características, ya que hay nodos que no pueden ser nunca nodo primario, por ejemplo, el nodo árbitro o un nodo que esté oculto. mongodump es un comando que se emplea para realizar una copia de seguridad (volcado de datos) de la base de datos tal y como si se tomara una fotografía. ",
                                            "Lineas": "Lines 3 - 9"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. en caso de que el nodo primario falle se realiza una votación donde el nodo árbitro se encarga de elegir al nuevo nodo primario. la elección la toma en función del número de votos de cada uno de los nodos secundarios y de sus características, ya que hay nodos que no pueden ser nunca nodo primario, por ejemplo, el nodo árbitro o un nodo que esté oculto. mongodump es un comando que se emplea para realizar una copia de seguridad (volcado de datos) de la base de datos tal y como si se tomara una fotografía. sin embargo, un replica-set permite tener una imagen actualizada en todos los nodos pertenecientes al conjunto sin necesidad de realizar una copia. ",
                                            "Lineas": "Lines 3 - 10"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "además, sirve como medida anti-caída de un servidor y también para implementar la replicación. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.961,
                                            "Frase": "el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.963,
                                            "Frase": "se puede implementar en mongodb y se trata de una refinación del modelo maestro-esclavo. el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.964,
                                            "Frase": "un replica-set consiste en la replicación de servidores. se puede implementar en mongodb y se trata de una refinación del modelo maestro-esclavo. el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.958,
                                            "Frase": "un replica-set consiste en la replicación de servidores. se puede implementar en mongodb y se trata de una refinación del modelo maestro-esclavo. el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.959,
                                            "Frase": "el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. en caso de que el nodo primario falle se realiza una votación donde el nodo árbitro se encarga de elegir al nuevo nodo primario. la elección la toma en función del número de votos de cada uno de los nodos secundarios y de sus características, ya que hay nodos que no pueden ser nunca nodo primario, por ejemplo, el nodo árbitro o un nodo que esté oculto. mongodump es un comando que se emplea para realizar una copia de seguridad (volcado de datos) de la base de datos tal y como si se tomara una fotografía. ",
                                            "Lineas": "Lines 3 - 9"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.96,
                                            "Frase": "el replica-set permite la redundancia de datos y la alta disponibilidad. además, sirve como medida anti-caída de un servidor y también para implementar la replicación. la configuración mínima de un replica-set consta de tres nodos: un nodo primario, un nodo secundario y un nodo árbitro. el nodo primario se escoge a la hora de crear el replica-set. en caso de que el nodo primario falle se realiza una votación donde el nodo árbitro se encarga de elegir al nuevo nodo primario. la elección la toma en función del número de votos de cada uno de los nodos secundarios y de sus características, ya que hay nodos que no pueden ser nunca nodo primario, por ejemplo, el nodo árbitro o un nodo que esté oculto. mongodump es un comando que se emplea para realizar una copia de seguridad (volcado de datos) de la base de datos tal y como si se tomara una fotografía. sin embargo, un replica-set permite tener una imagen actualizada en todos los nodos pertenecientes al conjunto sin necesidad de realizar una copia. ",
                                            "Lineas": "Lines 3 - 10"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 1.0,
                                 "Umbral 0.4 - 0.9": 1.0,
                                 "Umbral 0.5 - 0.9": 1.0,
                                 "Umbral 0.6 - 0.9": 1.0,
                                 "Umbral 0.7 - 0.9": 1.0,
                                 "Umbral 0.8 - 0.9": 1.0,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "e8de7e25ccce23438087cf820c323b8d": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.86,
                                            "Frase": "la principal diferencia con mongodump es la forma en que hace la copia de los datos. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.861,
                                            "Frase": "cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.856,
                                            "Frase": "la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.86,
                                            "Frase": "un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.851,
                                            "Frase": "para ello se definen distintas máquinas (nodos) que participarán en esta arquitectura. un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.856,
                                            "Frase": "la arquitectura de replica-set añade redundancia a los datos almacenados en mongo frente a fallos. para ello se definen distintas máquinas (nodos) que participarán en esta arquitectura. un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.837,
                                            "Frase": "la arquitectura de replica-set añade redundancia a los datos almacenados en mongo frente a fallos. para ello se definen distintas máquinas (nodos) que participarán en esta arquitectura. un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. mongodump hace una foto instantánea en el momento de ejecución, sin embargo, replica-set mantiene las copias actualizadas al momento, pudiendo seguir dando servicio incluso si se cae un nodo. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.795,
                                            "Frase": "un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.804,
                                            "Frase": "un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.775,
                                            "Frase": "para ello se definen distintas máquinas (nodos) que participarán en esta arquitectura. un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.78,
                                            "Frase": "un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.775,
                                            "Frase": "un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. mongodump hace una foto instantánea en el momento de ejecución, sin embargo, replica-set mantiene las copias actualizadas al momento, pudiendo seguir dando servicio incluso si se cae un nodo. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.767,
                                            "Frase": "para ello se definen distintas máquinas (nodos) que participarán en esta arquitectura. un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. mongodump hace una foto instantánea en el momento de ejecución, sin embargo, replica-set mantiene las copias actualizadas al momento, pudiendo seguir dando servicio incluso si se cae un nodo. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.75,
                                            "Frase": "la arquitectura de replica-set añade redundancia a los datos almacenados en mongo frente a fallos. para ello se definen distintas máquinas (nodos) que participarán en esta arquitectura. un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. mongodump hace una foto instantánea en el momento de ejecución, sin embargo, replica-set mantiene las copias actualizadas al momento, pudiendo seguir dando servicio incluso si se cae un nodo. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "para ello se definen distintas máquinas (nodos) que participarán en esta arquitectura. un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.937,
                                            "Frase": "un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. mongodump hace una foto instantánea en el momento de ejecución, sin embargo, replica-set mantiene las copias actualizadas al momento, pudiendo seguir dando servicio incluso si se cae un nodo. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "para ello se definen distintas máquinas (nodos) que participarán en esta arquitectura. un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. mongodump hace una foto instantánea en el momento de ejecución, sin embargo, replica-set mantiene las copias actualizadas al momento, pudiendo seguir dando servicio incluso si se cae un nodo. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "la arquitectura de replica-set añade redundancia a los datos almacenados en mongo frente a fallos. para ello se definen distintas máquinas (nodos) que participarán en esta arquitectura. un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. mongodump hace una foto instantánea en el momento de ejecución, sin embargo, replica-set mantiene las copias actualizadas al momento, pudiendo seguir dando servicio incluso si se cae un nodo. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "la principal diferencia con mongodump es la forma en que hace la copia de los datos. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "la principal diferencia con mongodump es la forma en que hace la copia de los datos. mongodump hace una foto instantánea en el momento de ejecución, sin embargo, replica-set mantiene las copias actualizadas al momento, pudiendo seguir dando servicio incluso si se cae un nodo. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. mongodump hace una foto instantánea en el momento de ejecución, sin embargo, replica-set mantiene las copias actualizadas al momento, pudiendo seguir dando servicio incluso si se cae un nodo. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "para ello se definen distintas máquinas (nodos) que participarán en esta arquitectura. un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "la arquitectura de replica-set añade redundancia a los datos almacenados en mongo frente a fallos. para ello se definen distintas máquinas (nodos) que participarán en esta arquitectura. un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "la arquitectura de replica-set añade redundancia a los datos almacenados en mongo frente a fallos. para ello se definen distintas máquinas (nodos) que participarán en esta arquitectura. un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. mongodump hace una foto instantánea en el momento de ejecución, sin embargo, replica-set mantiene las copias actualizadas al momento, pudiendo seguir dando servicio incluso si se cae un nodo. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.863,
                                            "Frase": "cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. mongodump hace una foto instantánea en el momento de ejecución, sin embargo, replica-set mantiene las copias actualizadas al momento, pudiendo seguir dando servicio incluso si se cae un nodo. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. ",
                                            "Lineas": "Lines 3 - 6"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. mongodump hace una foto instantánea en el momento de ejecución, sin embargo, replica-set mantiene las copias actualizadas al momento, pudiendo seguir dando servicio incluso si se cae un nodo. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.939,
                                            "Frase": "para ello se definen distintas máquinas (nodos) que participarán en esta arquitectura. un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. mongodump hace una foto instantánea en el momento de ejecución, sin embargo, replica-set mantiene las copias actualizadas al momento, pudiendo seguir dando servicio incluso si se cae un nodo. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "la arquitectura de replica-set añade redundancia a los datos almacenados en mongo frente a fallos. para ello se definen distintas máquinas (nodos) que participarán en esta arquitectura. un nodo primario será el que procese las solicitudes (lectura, escritura), y un nodo secundario recibirá órdenes del primario para replicar los cambios. la asignación de los roles de cada nodo se hace a través de un nodo árbitro, lo que conforma la configuración mínima de 3 nodos. cuando el nodo primario deja de estar disponible se asigna el rol de nodo primario a uno de los secundarios que estén activos, evitando así interrumpir el servicio. la principal diferencia con mongodump es la forma en que hace la copia de los datos. mongodump hace una foto instantánea en el momento de ejecución, sin embargo, replica-set mantiene las copias actualizadas al momento, pudiendo seguir dando servicio incluso si se cae un nodo. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "34523c68fa60ddf61f36e33d10e525eb": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.786,
                                            "Frase": "diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.804,
                                            "Frase": "en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.81,
                                            "Frase": "puede configurarse en modo primario-secundario, donde el secundario simplemente replica los datos del principal, o con varios secundarios. en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.802,
                                            "Frase": "puede configurarse en modo primario-secundario, donde el secundario simplemente replica los datos del principal, o con varios secundarios. en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. el replica-set está pensado para tener alta disponibilidad, y que cuando se cae un nodo, los demás se hacen cargo de su parte de los datos sin que suponga una degradación del servicio (bueno degradación habrá al tener un nodo menos, pero el servicio seguirá funcionando de manera transparente a sus clientes). ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.792,
                                            "Frase": "los replica-set son varios servidores mongo que funcionan conjuntamente dando redundancia a los datos que almacenan. puede configurarse en modo primario-secundario, donde el secundario simplemente replica los datos del principal, o con varios secundarios. en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. el replica-set está pensado para tener alta disponibilidad, y que cuando se cae un nodo, los demás se hacen cargo de su parte de los datos sin que suponga una degradación del servicio (bueno degradación habrá al tener un nodo menos, pero el servicio seguirá funcionando de manera transparente a sus clientes). ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.793,
                                            "Frase": "diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.796,
                                            "Frase": "en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.792,
                                            "Frase": "puede configurarse en modo primario-secundario, donde el secundario simplemente replica los datos del principal, o con varios secundarios. en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.779,
                                            "Frase": "puede configurarse en modo primario-secundario, donde el secundario simplemente replica los datos del principal, o con varios secundarios. en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. el replica-set está pensado para tener alta disponibilidad, y que cuando se cae un nodo, los demás se hacen cargo de su parte de los datos sin que suponga una degradación del servicio (bueno degradación habrá al tener un nodo menos, pero el servicio seguirá funcionando de manera transparente a sus clientes). ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.75,
                                            "Frase": "los replica-set son varios servidores mongo que funcionan conjuntamente dando redundancia a los datos que almacenan. puede configurarse en modo primario-secundario, donde el secundario simplemente replica los datos del principal, o con varios secundarios. en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. el replica-set está pensado para tener alta disponibilidad, y que cuando se cae un nodo, los demás se hacen cargo de su parte de los datos sin que suponga una degradación del servicio (bueno degradación habrá al tener un nodo menos, pero el servicio seguirá funcionando de manera transparente a sus clientes). ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "puede configurarse en modo primario-secundario, donde el secundario simplemente replica los datos del principal, o con varios secundarios. en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.936,
                                            "Frase": "puede configurarse en modo primario-secundario, donde el secundario simplemente replica los datos del principal, o con varios secundarios. en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "puede configurarse en modo primario-secundario, donde el secundario simplemente replica los datos del principal, o con varios secundarios. en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. el replica-set está pensado para tener alta disponibilidad, y que cuando se cae un nodo, los demás se hacen cargo de su parte de los datos sin que suponga una degradación del servicio (bueno degradación habrá al tener un nodo menos, pero el servicio seguirá funcionando de manera transparente a sus clientes). ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "los replica-set son varios servidores mongo que funcionan conjuntamente dando redundancia a los datos que almacenan. puede configurarse en modo primario-secundario, donde el secundario simplemente replica los datos del principal, o con varios secundarios. en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. el replica-set está pensado para tener alta disponibilidad, y que cuando se cae un nodo, los demás se hacen cargo de su parte de los datos sin que suponga una degradación del servicio (bueno degradación habrá al tener un nodo menos, pero el servicio seguirá funcionando de manera transparente a sus clientes). ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.855,
                                            "Frase": "diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.87,
                                            "Frase": "en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "puede configurarse en modo primario-secundario, donde el secundario simplemente replica los datos del principal, o con varios secundarios. en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.877,
                                            "Frase": "los replica-set son varios servidores mongo que funcionan conjuntamente dando redundancia a los datos que almacenan. puede configurarse en modo primario-secundario, donde el secundario simplemente replica los datos del principal, o con varios secundarios. en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "los replica-set son varios servidores mongo que funcionan conjuntamente dando redundancia a los datos que almacenan. puede configurarse en modo primario-secundario, donde el secundario simplemente replica los datos del principal, o con varios secundarios. en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. el replica-set está pensado para tener alta disponibilidad, y que cuando se cae un nodo, los demás se hacen cargo de su parte de los datos sin que suponga una degradación del servicio (bueno degradación habrá al tener un nodo menos, pero el servicio seguirá funcionando de manera transparente a sus clientes). ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.912,
                                            "Frase": "en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.933,
                                            "Frase": "puede configurarse en modo primario-secundario, donde el secundario simplemente replica los datos del principal, o con varios secundarios. en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "puede configurarse en modo primario-secundario, donde el secundario simplemente replica los datos del principal, o con varios secundarios. en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. el replica-set está pensado para tener alta disponibilidad, y que cuando se cae un nodo, los demás se hacen cargo de su parte de los datos sin que suponga una degradación del servicio (bueno degradación habrá al tener un nodo menos, pero el servicio seguirá funcionando de manera transparente a sus clientes). ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.914,
                                            "Frase": "los replica-set son varios servidores mongo que funcionan conjuntamente dando redundancia a los datos que almacenan. puede configurarse en modo primario-secundario, donde el secundario simplemente replica los datos del principal, o con varios secundarios. en este último caso cada nodo almacena una parte de los datos, que también estará replicada en al menos otro nodo, y cuando el nodo primario cae existe la figura de un árbitro que decide cual de los secundarios pasa a ser el nodo primario. diferencias con mongodump, muchas, y similitudes más bien pocas: mongodump simplemente hace un volcado de los documentos de la bd a un fichero, para poder recuperarlo a modo de inserts con mongorestore en el caso que ocurriera un desastre. el replica-set está pensado para tener alta disponibilidad, y que cuando se cae un nodo, los demás se hacen cargo de su parte de los datos sin que suponga una degradación del servicio (bueno degradación habrá al tener un nodo menos, pero el servicio seguirá funcionando de manera transparente a sus clientes). ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.5,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "b0616bb8de9475d9491a9581e6ed9811": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "un replica-set es el nombre dado a un grupo/cluster de shards/nodos con la función de distribuir la carga de las operaciones en los distintos shards que componen la arquitectura horizontal de mongodb, con una configuración mínima de 3 equipos siendo uno de ellos el shard primario quien se encarga de los metadatos y como se encuentra distribuida la información en el entorno. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "un replica-set es el nombre dado a un grupo/cluster de shards/nodos con la función de distribuir la carga de las operaciones en los distintos shards que componen la arquitectura horizontal de mongodb, con una configuración mínima de 3 equipos siendo uno de ellos el shard primario quien se encarga de los metadatos y como se encuentra distribuida la información en el entorno. normalmente la configuración viene predeterminada para hacer uso de un shard primario, pero se puede configurar opciones de backup para garantizar alta disponibilidad y contingencias a prueba de fallos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.782,
                                            "Frase": "un replica-set es el nombre dado a un grupo/cluster de shards/nodos con la función de distribuir la carga de las operaciones en los distintos shards que componen la arquitectura horizontal de mongodb, con una configuración mínima de 3 equipos siendo uno de ellos el shard primario quien se encarga de los metadatos y como se encuentra distribuida la información en el entorno. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.779,
                                            "Frase": "un replica-set es el nombre dado a un grupo/cluster de shards/nodos con la función de distribuir la carga de las operaciones en los distintos shards que componen la arquitectura horizontal de mongodb, con una configuración mínima de 3 equipos siendo uno de ellos el shard primario quien se encarga de los metadatos y como se encuentra distribuida la información en el entorno. normalmente la configuración viene predeterminada para hacer uso de un shard primario, pero se puede configurar opciones de backup para garantizar alta disponibilidad y contingencias a prueba de fallos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.883,
                                            "Frase": "un replica-set es el nombre dado a un grupo/cluster de shards/nodos con la función de distribuir la carga de las operaciones en los distintos shards que componen la arquitectura horizontal de mongodb, con una configuración mínima de 3 equipos siendo uno de ellos el shard primario quien se encarga de los metadatos y como se encuentra distribuida la información en el entorno. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.885,
                                            "Frase": "un replica-set es el nombre dado a un grupo/cluster de shards/nodos con la función de distribuir la carga de las operaciones en los distintos shards que componen la arquitectura horizontal de mongodb, con una configuración mínima de 3 equipos siendo uno de ellos el shard primario quien se encarga de los metadatos y como se encuentra distribuida la información en el entorno. normalmente la configuración viene predeterminada para hacer uso de un shard primario, pero se puede configurar opciones de backup para garantizar alta disponibilidad y contingencias a prueba de fallos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "un replica-set es el nombre dado a un grupo/cluster de shards/nodos con la función de distribuir la carga de las operaciones en los distintos shards que componen la arquitectura horizontal de mongodb, con una configuración mínima de 3 equipos siendo uno de ellos el shard primario quien se encarga de los metadatos y como se encuentra distribuida la información en el entorno. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "un replica-set es el nombre dado a un grupo/cluster de shards/nodos con la función de distribuir la carga de las operaciones en los distintos shards que componen la arquitectura horizontal de mongodb, con una configuración mínima de 3 equipos siendo uno de ellos el shard primario quien se encarga de los metadatos y como se encuentra distribuida la información en el entorno. normalmente la configuración viene predeterminada para hacer uso de un shard primario, pero se puede configurar opciones de backup para garantizar alta disponibilidad y contingencias a prueba de fallos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "un replica-set es el nombre dado a un grupo/cluster de shards/nodos con la función de distribuir la carga de las operaciones en los distintos shards que componen la arquitectura horizontal de mongodb, con una configuración mínima de 3 equipos siendo uno de ellos el shard primario quien se encarga de los metadatos y como se encuentra distribuida la información en el entorno. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "un replica-set es el nombre dado a un grupo/cluster de shards/nodos con la función de distribuir la carga de las operaciones en los distintos shards que componen la arquitectura horizontal de mongodb, con una configuración mínima de 3 equipos siendo uno de ellos el shard primario quien se encarga de los metadatos y como se encuentra distribuida la información en el entorno. normalmente la configuración viene predeterminada para hacer uso de un shard primario, pero se puede configurar opciones de backup para garantizar alta disponibilidad y contingencias a prueba de fallos. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.625,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "653e6dc27f1031bcd8e1c1fa62070649": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.883,
                                            "Frase": "existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. ",
                                            "Lineas": "Line 9"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.863,
                                            "Frase": "existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. ",
                                            "Lineas": "Lines 9 - 10"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. la diferencia fundamental entre los replicasets y mongodump es que mientras los replicaset realizan copias continuas y automáticas de los datos del nodo principal en otros nodos (copias actualizadas), mongodump es una copia de un momento concreto (no actualizada). ",
                                            "Lineas": "Lines 9 - 11"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.875,
                                            "Frase": "además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. la diferencia fundamental entre los replicasets y mongodump es que mientras los replicaset realizan copias continuas y automáticas de los datos del nodo principal en otros nodos (copias actualizadas), mongodump es una copia de un momento concreto (no actualizada). ",
                                            "Lineas": "Lines 8 - 11"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "este tiene el único papel de decidir en las votaciones. además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. la diferencia fundamental entre los replicasets y mongodump es que mientras los replicaset realizan copias continuas y automáticas de los datos del nodo principal en otros nodos (copias actualizadas), mongodump es una copia de un momento concreto (no actualizada). ",
                                            "Lineas": "Lines 7 - 11"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.878,
                                            "Frase": "para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. la diferencia fundamental entre los replicasets y mongodump es que mientras los replicaset realizan copias continuas y automáticas de los datos del nodo principal en otros nodos (copias actualizadas), mongodump es una copia de un momento concreto (no actualizada). ",
                                            "Lineas": "Lines 6 - 11"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.877,
                                            "Frase": "en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. la diferencia fundamental entre los replicasets y mongodump es que mientras los replicaset realizan copias continuas y automáticas de los datos del nodo principal en otros nodos (copias actualizadas), mongodump es una copia de un momento concreto (no actualizada). ",
                                            "Lineas": "Lines 5 - 11"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.879,
                                            "Frase": "este mecanismo aporta alta disponibilidad, consistencia y robustez frente a fallos en los servidores. en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. la diferencia fundamental entre los replicasets y mongodump es que mientras los replicaset realizan copias continuas y automáticas de los datos del nodo principal en otros nodos (copias actualizadas), mongodump es una copia de un momento concreto (no actualizada). ",
                                            "Lineas": "Lines 4 - 11"
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "un replica-set es un mecanismo de respaldo de mongodb que consiste en interconectar un conjunto de nodos o servidores siguiendo el modelo maestro-esclavo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "un replica-set es un mecanismo de respaldo de mongodb que consiste en interconectar un conjunto de nodos o servidores siguiendo el modelo maestro-esclavo. de este conjunto de nodos o servidores interconectados (al menos dos), uno de ellos es elegido nodo primario y, a parte de ese, debe haber, al menos, un nodo secundario. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.799,
                                            "Frase": "un replica-set es un mecanismo de respaldo de mongodb que consiste en interconectar un conjunto de nodos o servidores siguiendo el modelo maestro-esclavo. de este conjunto de nodos o servidores interconectados (al menos dos), uno de ellos es elegido nodo primario y, a parte de ese, debe haber, al menos, un nodo secundario. el nodo primario será el que responda ante operaciones crud realizadas por las aplicaciones cliente y deberá propagar las modificaciones de los datos a los nodos secundarios, de modo que cada uno de ellos tenga siempre una imagen actualizada de los datos. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.802,
                                            "Frase": "para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. ",
                                            "Lineas": "Lines 6 - 9"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.803,
                                            "Frase": "en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. ",
                                            "Lineas": "Lines 5 - 9"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.799,
                                            "Frase": "un replica-set es un mecanismo de respaldo de mongodb que consiste en interconectar un conjunto de nodos o servidores siguiendo el modelo maestro-esclavo. de este conjunto de nodos o servidores interconectados (al menos dos), uno de ellos es elegido nodo primario y, a parte de ese, debe haber, al menos, un nodo secundario. el nodo primario será el que responda ante operaciones crud realizadas por las aplicaciones cliente y deberá propagar las modificaciones de los datos a los nodos secundarios, de modo que cada uno de ellos tenga siempre una imagen actualizada de los datos. este mecanismo aporta alta disponibilidad, consistencia y robustez frente a fallos en los servidores. en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.801,
                                            "Frase": "un replica-set es un mecanismo de respaldo de mongodb que consiste en interconectar un conjunto de nodos o servidores siguiendo el modelo maestro-esclavo. de este conjunto de nodos o servidores interconectados (al menos dos), uno de ellos es elegido nodo primario y, a parte de ese, debe haber, al menos, un nodo secundario. el nodo primario será el que responda ante operaciones crud realizadas por las aplicaciones cliente y deberá propagar las modificaciones de los datos a los nodos secundarios, de modo que cada uno de ellos tenga siempre una imagen actualizada de los datos. este mecanismo aporta alta disponibilidad, consistencia y robustez frente a fallos en los servidores. en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.802,
                                            "Frase": "un replica-set es un mecanismo de respaldo de mongodb que consiste en interconectar un conjunto de nodos o servidores siguiendo el modelo maestro-esclavo. de este conjunto de nodos o servidores interconectados (al menos dos), uno de ellos es elegido nodo primario y, a parte de ese, debe haber, al menos, un nodo secundario. el nodo primario será el que responda ante operaciones crud realizadas por las aplicaciones cliente y deberá propagar las modificaciones de los datos a los nodos secundarios, de modo que cada uno de ellos tenga siempre una imagen actualizada de los datos. este mecanismo aporta alta disponibilidad, consistencia y robustez frente a fallos en los servidores. en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.959,
                                            "Frase": "en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "este mecanismo aporta alta disponibilidad, consistencia y robustez frente a fallos en los servidores. en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "un replica-set es un mecanismo de respaldo de mongodb que consiste en interconectar un conjunto de nodos o servidores siguiendo el modelo maestro-esclavo. de este conjunto de nodos o servidores interconectados (al menos dos), uno de ellos es elegido nodo primario y, a parte de ese, debe haber, al menos, un nodo secundario. el nodo primario será el que responda ante operaciones crud realizadas por las aplicaciones cliente y deberá propagar las modificaciones de los datos a los nodos secundarios, de modo que cada uno de ellos tenga siempre una imagen actualizada de los datos. este mecanismo aporta alta disponibilidad, consistencia y robustez frente a fallos en los servidores. en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "un replica-set es un mecanismo de respaldo de mongodb que consiste en interconectar un conjunto de nodos o servidores siguiendo el modelo maestro-esclavo. de este conjunto de nodos o servidores interconectados (al menos dos), uno de ellos es elegido nodo primario y, a parte de ese, debe haber, al menos, un nodo secundario. el nodo primario será el que responda ante operaciones crud realizadas por las aplicaciones cliente y deberá propagar las modificaciones de los datos a los nodos secundarios, de modo que cada uno de ellos tenga siempre una imagen actualizada de los datos. este mecanismo aporta alta disponibilidad, consistencia y robustez frente a fallos en los servidores. en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.949,
                                            "Frase": "un replica-set es un mecanismo de respaldo de mongodb que consiste en interconectar un conjunto de nodos o servidores siguiendo el modelo maestro-esclavo. de este conjunto de nodos o servidores interconectados (al menos dos), uno de ellos es elegido nodo primario y, a parte de ese, debe haber, al menos, un nodo secundario. el nodo primario será el que responda ante operaciones crud realizadas por las aplicaciones cliente y deberá propagar las modificaciones de los datos a los nodos secundarios, de modo que cada uno de ellos tenga siempre una imagen actualizada de los datos. este mecanismo aporta alta disponibilidad, consistencia y robustez frente a fallos en los servidores. en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "un replica-set es un mecanismo de respaldo de mongodb que consiste en interconectar un conjunto de nodos o servidores siguiendo el modelo maestro-esclavo. de este conjunto de nodos o servidores interconectados (al menos dos), uno de ellos es elegido nodo primario y, a parte de ese, debe haber, al menos, un nodo secundario. el nodo primario será el que responda ante operaciones crud realizadas por las aplicaciones cliente y deberá propagar las modificaciones de los datos a los nodos secundarios, de modo que cada uno de ellos tenga siempre una imagen actualizada de los datos. este mecanismo aporta alta disponibilidad, consistencia y robustez frente a fallos en los servidores. en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. ",
                                            "Lineas": "Lines 1 - 8"
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. ",
                                            "Lineas": "Line 9"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.924,
                                            "Frase": "existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. ",
                                            "Lineas": "Lines 9 - 10"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. la diferencia fundamental entre los replicasets y mongodump es que mientras los replicaset realizan copias continuas y automáticas de los datos del nodo principal en otros nodos (copias actualizadas), mongodump es una copia de un momento concreto (no actualizada). ",
                                            "Lineas": "Lines 9 - 11"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. la diferencia fundamental entre los replicasets y mongodump es que mientras los replicaset realizan copias continuas y automáticas de los datos del nodo principal en otros nodos (copias actualizadas), mongodump es una copia de un momento concreto (no actualizada). ",
                                            "Lineas": "Lines 8 - 11"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.901,
                                            "Frase": "este tiene el único papel de decidir en las votaciones. además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. la diferencia fundamental entre los replicasets y mongodump es que mientras los replicaset realizan copias continuas y automáticas de los datos del nodo principal en otros nodos (copias actualizadas), mongodump es una copia de un momento concreto (no actualizada). ",
                                            "Lineas": "Lines 7 - 11"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. la diferencia fundamental entre los replicasets y mongodump es que mientras los replicaset realizan copias continuas y automáticas de los datos del nodo principal en otros nodos (copias actualizadas), mongodump es una copia de un momento concreto (no actualizada). ",
                                            "Lineas": "Lines 6 - 11"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.899,
                                            "Frase": "este mecanismo aporta alta disponibilidad, consistencia y robustez frente a fallos en los servidores. en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. ",
                                            "Lineas": "Lines 4 - 10"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.906,
                                            "Frase": "el nodo primario será el que responda ante operaciones crud realizadas por las aplicaciones cliente y deberá propagar las modificaciones de los datos a los nodos secundarios, de modo que cada uno de ellos tenga siempre una imagen actualizada de los datos. este mecanismo aporta alta disponibilidad, consistencia y robustez frente a fallos en los servidores. en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. ",
                                            "Lineas": "Lines 3 - 10"
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.931,
                                            "Frase": "existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. ",
                                            "Lineas": "Line 9"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.935,
                                            "Frase": "en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. ",
                                            "Lineas": "Lines 5 - 6"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.947,
                                            "Frase": "existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. la diferencia fundamental entre los replicasets y mongodump es que mientras los replicaset realizan copias continuas y automáticas de los datos del nodo principal en otros nodos (copias actualizadas), mongodump es una copia de un momento concreto (no actualizada). ",
                                            "Lineas": "Lines 9 - 11"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.943,
                                            "Frase": "este tiene el único papel de decidir en las votaciones. además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. ",
                                            "Lineas": "Lines 7 - 10"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. ",
                                            "Lineas": "Lines 6 - 10"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. ",
                                            "Lineas": "Lines 5 - 10"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.953,
                                            "Frase": "este mecanismo aporta alta disponibilidad, consistencia y robustez frente a fallos en los servidores. en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. ",
                                            "Lineas": "Lines 4 - 10"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0.951,
                                            "Frase": "este mecanismo aporta alta disponibilidad, consistencia y robustez frente a fallos en los servidores. en caso de que el nodo primario caiga, uno de los secundarios disponibles será elegido primario en una votación, siendo elegido este cuando consiga mayoría absoluta. para las votaciones existe un tipo de nodo especial: el nodo árbitro. este tiene el único papel de decidir en las votaciones. además de este existen otros nodos especiales, como son el nodo retrasado (tiene una imagen retrasada del conjunto de datos), nodo de prioridad 0 (este nunca puede ser presidente), nodo oculto (no aparece visible para los usuarios), etc. existe otro mecanismo de respaldo llamado mongodump, el cual realiza una fotografía de un momento concreto de todas las bases de datos, de algunas bases de datos o algunas colecciones dentro de una base de datos, según como indique el usuario. en caso de pérdida o daño en los datos, se podría hacer una restauración con el comando mongorestore según la fotografía de los datos en el momento que se hizo. la diferencia fundamental entre los replicasets y mongodump es que mientras los replicaset realizan copias continuas y automáticas de los datos del nodo principal en otros nodos (copias actualizadas), mongodump es una copia de un momento concreto (no actualizada). ",
                                            "Lineas": "Lines 4 - 11"
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "02a50793837b6c2e3c8105f4c1314b9a": {
                      "minipregunta0": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta1": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta2": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta3": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "respuesta_completa": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      }
           },
           "205c0231adf836bb764104ca86f55ce0": {
                      "minipregunta0": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta1": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta2": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta3": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "respuesta_completa": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      }
           },
           "43a3bb1a3195a809ef8574ce38518a5a": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "replica set es una mejora de la arquitectura de replicación maestro-esclavo, dentro de sus principales funciones se encuentra replicar los datos del nodo principal en los secundarios, brindar alta disponibilidad de los datos y redundancia. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.857,
                                            "Frase": "replica set es una mejora de la arquitectura de replicación maestro-esclavo, dentro de sus principales funciones se encuentra replicar los datos del nodo principal en los secundarios, brindar alta disponibilidad de los datos y redundancia. para una configuración mínima se utilizan 3 nodos, un nodo principal que es el encargado de recibir las peticiones de escritura, un nodo secundario que es el encargado de replicar estas peticiones y un nodo arbitro que se encarga de elegir mediante votación al nodo principal cuando el nodo primario falla. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.826,
                                            "Frase": "replica set es una mejora de la arquitectura de replicación maestro-esclavo, dentro de sus principales funciones se encuentra replicar los datos del nodo principal en los secundarios, brindar alta disponibilidad de los datos y redundancia. para una configuración mínima se utilizan 3 nodos, un nodo principal que es el encargado de recibir las peticiones de escritura, un nodo secundario que es el encargado de replicar estas peticiones y un nodo arbitro que se encarga de elegir mediante votación al nodo principal cuando el nodo primario falla. su principal diferencia con mongodump es que los datos están replicados en todo momento, cuando se realiza un respaldo con mongodump los datos obtenidos tendrán una fecha y hora de corte al momento en el que se obtuvo el respaldo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.803,
                                            "Frase": "para una configuración mínima se utilizan 3 nodos, un nodo principal que es el encargado de recibir las peticiones de escritura, un nodo secundario que es el encargado de replicar estas peticiones y un nodo arbitro que se encarga de elegir mediante votación al nodo principal cuando el nodo primario falla. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.803,
                                            "Frase": "replica set es una mejora de la arquitectura de replicación maestro-esclavo, dentro de sus principales funciones se encuentra replicar los datos del nodo principal en los secundarios, brindar alta disponibilidad de los datos y redundancia. para una configuración mínima se utilizan 3 nodos, un nodo principal que es el encargado de recibir las peticiones de escritura, un nodo secundario que es el encargado de replicar estas peticiones y un nodo arbitro que se encarga de elegir mediante votación al nodo principal cuando el nodo primario falla. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.774,
                                            "Frase": "replica set es una mejora de la arquitectura de replicación maestro-esclavo, dentro de sus principales funciones se encuentra replicar los datos del nodo principal en los secundarios, brindar alta disponibilidad de los datos y redundancia. para una configuración mínima se utilizan 3 nodos, un nodo principal que es el encargado de recibir las peticiones de escritura, un nodo secundario que es el encargado de replicar estas peticiones y un nodo arbitro que se encarga de elegir mediante votación al nodo principal cuando el nodo primario falla. su principal diferencia con mongodump es que los datos están replicados en todo momento, cuando se realiza un respaldo con mongodump los datos obtenidos tendrán una fecha y hora de corte al momento en el que se obtuvo el respaldo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "para una configuración mínima se utilizan 3 nodos, un nodo principal que es el encargado de recibir las peticiones de escritura, un nodo secundario que es el encargado de replicar estas peticiones y un nodo arbitro que se encarga de elegir mediante votación al nodo principal cuando el nodo primario falla. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.928,
                                            "Frase": "replica set es una mejora de la arquitectura de replicación maestro-esclavo, dentro de sus principales funciones se encuentra replicar los datos del nodo principal en los secundarios, brindar alta disponibilidad de los datos y redundancia. para una configuración mínima se utilizan 3 nodos, un nodo principal que es el encargado de recibir las peticiones de escritura, un nodo secundario que es el encargado de replicar estas peticiones y un nodo arbitro que se encarga de elegir mediante votación al nodo principal cuando el nodo primario falla. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.926,
                                            "Frase": "replica set es una mejora de la arquitectura de replicación maestro-esclavo, dentro de sus principales funciones se encuentra replicar los datos del nodo principal en los secundarios, brindar alta disponibilidad de los datos y redundancia. para una configuración mínima se utilizan 3 nodos, un nodo principal que es el encargado de recibir las peticiones de escritura, un nodo secundario que es el encargado de replicar estas peticiones y un nodo arbitro que se encarga de elegir mediante votación al nodo principal cuando el nodo primario falla. su principal diferencia con mongodump es que los datos están replicados en todo momento, cuando se realiza un respaldo con mongodump los datos obtenidos tendrán una fecha y hora de corte al momento en el que se obtuvo el respaldo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "replica set es una mejora de la arquitectura de replicación maestro-esclavo, dentro de sus principales funciones se encuentra replicar los datos del nodo principal en los secundarios, brindar alta disponibilidad de los datos y redundancia. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "replica set es una mejora de la arquitectura de replicación maestro-esclavo, dentro de sus principales funciones se encuentra replicar los datos del nodo principal en los secundarios, brindar alta disponibilidad de los datos y redundancia. para una configuración mínima se utilizan 3 nodos, un nodo principal que es el encargado de recibir las peticiones de escritura, un nodo secundario que es el encargado de replicar estas peticiones y un nodo arbitro que se encarga de elegir mediante votación al nodo principal cuando el nodo primario falla. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.887,
                                            "Frase": "replica set es una mejora de la arquitectura de replicación maestro-esclavo, dentro de sus principales funciones se encuentra replicar los datos del nodo principal en los secundarios, brindar alta disponibilidad de los datos y redundancia. para una configuración mínima se utilizan 3 nodos, un nodo principal que es el encargado de recibir las peticiones de escritura, un nodo secundario que es el encargado de replicar estas peticiones y un nodo arbitro que se encarga de elegir mediante votación al nodo principal cuando el nodo primario falla. su principal diferencia con mongodump es que los datos están replicados en todo momento, cuando se realiza un respaldo con mongodump los datos obtenidos tendrán una fecha y hora de corte al momento en el que se obtuvo el respaldo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.882,
                                            "Frase": "replica set es una mejora de la arquitectura de replicación maestro-esclavo, dentro de sus principales funciones se encuentra replicar los datos del nodo principal en los secundarios, brindar alta disponibilidad de los datos y redundancia. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.948,
                                            "Frase": "replica set es una mejora de la arquitectura de replicación maestro-esclavo, dentro de sus principales funciones se encuentra replicar los datos del nodo principal en los secundarios, brindar alta disponibilidad de los datos y redundancia. para una configuración mínima se utilizan 3 nodos, un nodo principal que es el encargado de recibir las peticiones de escritura, un nodo secundario que es el encargado de replicar estas peticiones y un nodo arbitro que se encarga de elegir mediante votación al nodo principal cuando el nodo primario falla. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.934,
                                            "Frase": "replica set es una mejora de la arquitectura de replicación maestro-esclavo, dentro de sus principales funciones se encuentra replicar los datos del nodo principal en los secundarios, brindar alta disponibilidad de los datos y redundancia. para una configuración mínima se utilizan 3 nodos, un nodo principal que es el encargado de recibir las peticiones de escritura, un nodo secundario que es el encargado de replicar estas peticiones y un nodo arbitro que se encarga de elegir mediante votación al nodo principal cuando el nodo primario falla. su principal diferencia con mongodump es que los datos están replicados en todo momento, cuando se realiza un respaldo con mongodump los datos obtenidos tendrán una fecha y hora de corte al momento en el que se obtuvo el respaldo. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "b5c4e8f6aa7e71df24b02d4bf2fe5b1d": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.73,
                                            "Frase": "este tipo de arquitectura mantiene una réplica de todo el servidor y no así con mongodump que solo sirve para ambientes no clusterizados ya que solo permite respaldar los archivos bson de las bdd de mongo. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.738,
                                            "Frase": "la arquitectura replica set consiste en tener separado las responsabilidades de cada nodo en el clúster, la configuración mínima consiste en tener un servidor principal, un árbitro y un secundario en estado inactivo, si por algún motivo el servidor activo sufre una caída el servidor arbitro activa al servidor secundario, pasando así el servidor primario a ser secundario, cada cierto tiempo el servidor primario envía notificaciones al árbitro indicando que se encuentra activo. este tipo de arquitectura mantiene una réplica de todo el servidor y no así con mongodump que solo sirve para ambientes no clusterizados ya que solo permite respaldar los archivos bson de las bdd de mongo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.757,
                                            "Frase": "la arquitectura replica set consiste en tener separado las responsabilidades de cada nodo en el clúster, la configuración mínima consiste en tener un servidor principal, un árbitro y un secundario en estado inactivo, si por algún motivo el servidor activo sufre una caída el servidor arbitro activa al servidor secundario, pasando así el servidor primario a ser secundario, cada cierto tiempo el servidor primario envía notificaciones al árbitro indicando que se encuentra activo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.757,
                                            "Frase": "la arquitectura replica set consiste en tener separado las responsabilidades de cada nodo en el clúster, la configuración mínima consiste en tener un servidor principal, un árbitro y un secundario en estado inactivo, si por algún motivo el servidor activo sufre una caída el servidor arbitro activa al servidor secundario, pasando así el servidor primario a ser secundario, cada cierto tiempo el servidor primario envía notificaciones al árbitro indicando que se encuentra activo. este tipo de arquitectura mantiene una réplica de todo el servidor y no así con mongodump que solo sirve para ambientes no clusterizados ya que solo permite respaldar los archivos bson de las bdd de mongo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "la arquitectura replica set consiste en tener separado las responsabilidades de cada nodo en el clúster, la configuración mínima consiste en tener un servidor principal, un árbitro y un secundario en estado inactivo, si por algún motivo el servidor activo sufre una caída el servidor arbitro activa al servidor secundario, pasando así el servidor primario a ser secundario, cada cierto tiempo el servidor primario envía notificaciones al árbitro indicando que se encuentra activo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "la arquitectura replica set consiste en tener separado las responsabilidades de cada nodo en el clúster, la configuración mínima consiste en tener un servidor principal, un árbitro y un secundario en estado inactivo, si por algún motivo el servidor activo sufre una caída el servidor arbitro activa al servidor secundario, pasando así el servidor primario a ser secundario, cada cierto tiempo el servidor primario envía notificaciones al árbitro indicando que se encuentra activo. este tipo de arquitectura mantiene una réplica de todo el servidor y no así con mongodump que solo sirve para ambientes no clusterizados ya que solo permite respaldar los archivos bson de las bdd de mongo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.89,
                                            "Frase": "este tipo de arquitectura mantiene una réplica de todo el servidor y no así con mongodump que solo sirve para ambientes no clusterizados ya que solo permite respaldar los archivos bson de las bdd de mongo. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.841,
                                            "Frase": "la arquitectura replica set consiste en tener separado las responsabilidades de cada nodo en el clúster, la configuración mínima consiste en tener un servidor principal, un árbitro y un secundario en estado inactivo, si por algún motivo el servidor activo sufre una caída el servidor arbitro activa al servidor secundario, pasando así el servidor primario a ser secundario, cada cierto tiempo el servidor primario envía notificaciones al árbitro indicando que se encuentra activo. este tipo de arquitectura mantiene una réplica de todo el servidor y no así con mongodump que solo sirve para ambientes no clusterizados ya que solo permite respaldar los archivos bson de las bdd de mongo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.859,
                                            "Frase": "la arquitectura replica set consiste en tener separado las responsabilidades de cada nodo en el clúster, la configuración mínima consiste en tener un servidor principal, un árbitro y un secundario en estado inactivo, si por algún motivo el servidor activo sufre una caída el servidor arbitro activa al servidor secundario, pasando así el servidor primario a ser secundario, cada cierto tiempo el servidor primario envía notificaciones al árbitro indicando que se encuentra activo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "la arquitectura replica set consiste en tener separado las responsabilidades de cada nodo en el clúster, la configuración mínima consiste en tener un servidor principal, un árbitro y un secundario en estado inactivo, si por algún motivo el servidor activo sufre una caída el servidor arbitro activa al servidor secundario, pasando así el servidor primario a ser secundario, cada cierto tiempo el servidor primario envía notificaciones al árbitro indicando que se encuentra activo. este tipo de arquitectura mantiene una réplica de todo el servidor y no así con mongodump que solo sirve para ambientes no clusterizados ya que solo permite respaldar los archivos bson de las bdd de mongo. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.75,
                                 "Umbral 0.4 - 0.8": 0.75,
                                 "Umbral 0.5 - 0.8": 0.75,
                                 "Umbral 0.6 - 0.8": 0.75,
                                 "Umbral 0.7 - 0.8": 0.75,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.375,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "b59a168a62d6ce6b68998c47fe2dabfa": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.756,
                                            "Frase": "la función replica -set es un shard que almacena información y permite el movimiento de los datos entre los diferentes nodos incrementando de esta manera la capacidad de gestión de respaldo en disponibilidad y consistencia en mongodb, si se llega a presentar el caso de que se caiga un nodo, el sistema agregación map reduce  genera un nanemode secundario que se encarga de  realizar las réplicas en los otros nodos evitando así que se detenga la operación en mongodb, mientras que mongodump se encarga de generar una copia de respaldo al sistema a la gestión permitiendo que no se pierda la información pero no actúa en el momento de que se caiga un nodo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.679,
                                            "Frase": "la función replica -set es un shard que almacena información y permite el movimiento de los datos entre los diferentes nodos incrementando de esta manera la capacidad de gestión de respaldo en disponibilidad y consistencia en mongodb, si se llega a presentar el caso de que se caiga un nodo, el sistema agregación map reduce  genera un nanemode secundario que se encarga de  realizar las réplicas en los otros nodos evitando así que se detenga la operación en mongodb, mientras que mongodump se encarga de generar una copia de respaldo al sistema a la gestión permitiendo que no se pierda la información pero no actúa en el momento de que se caiga un nodo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.849,
                                            "Frase": "la función replica -set es un shard que almacena información y permite el movimiento de los datos entre los diferentes nodos incrementando de esta manera la capacidad de gestión de respaldo en disponibilidad y consistencia en mongodb, si se llega a presentar el caso de que se caiga un nodo, el sistema agregación map reduce  genera un nanemode secundario que se encarga de  realizar las réplicas en los otros nodos evitando así que se detenga la operación en mongodb, mientras que mongodump se encarga de generar una copia de respaldo al sistema a la gestión permitiendo que no se pierda la información pero no actúa en el momento de que se caiga un nodo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.886,
                                            "Frase": "la función replica -set es un shard que almacena información y permite el movimiento de los datos entre los diferentes nodos incrementando de esta manera la capacidad de gestión de respaldo en disponibilidad y consistencia en mongodb, si se llega a presentar el caso de que se caiga un nodo, el sistema agregación map reduce  genera un nanemode secundario que se encarga de  realizar las réplicas en los otros nodos evitando así que se detenga la operación en mongodb, mientras que mongodump se encarga de generar una copia de respaldo al sistema a la gestión permitiendo que no se pierda la información pero no actúa en el momento de que se caiga un nodo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.87,
                                            "Frase": "la función replica -set es un shard que almacena información y permite el movimiento de los datos entre los diferentes nodos incrementando de esta manera la capacidad de gestión de respaldo en disponibilidad y consistencia en mongodb, si se llega a presentar el caso de que se caiga un nodo, el sistema agregación map reduce  genera un nanemode secundario que se encarga de  realizar las réplicas en los otros nodos evitando así que se detenga la operación en mongodb, mientras que mongodump se encarga de generar una copia de respaldo al sistema a la gestión permitiendo que no se pierda la información pero no actúa en el momento de que se caiga un nodo. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "3": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "4": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.75,
                                 "Umbral 0.4 - 0.8": 0.75,
                                 "Umbral 0.5 - 0.8": 0.75,
                                 "Umbral 0.6 - 0.8": 0.75,
                                 "Umbral 0.7 - 0.8": 0.625,
                                 "Umbral 0.3 - 0.9": 0.5,
                                 "Umbral 0.4 - 0.9": 0.5,
                                 "Umbral 0.5 - 0.9": 0.5,
                                 "Umbral 0.6 - 0.9": 0.5,
                                 "Umbral 0.7 - 0.9": 0.375,
                                 "Umbral 0.8 - 0.9": 0.25,
                                 "Umbral 0.3 - 0.7": 0.875,
                                 "Umbral 0.4 - 0.7": 0.875,
                                 "Umbral 0.5 - 0.7": 0.875,
                                 "Umbral 0.6 - 0.7": 0.875,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "88ab1d4208b2a7f96662ead8c313efa8": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.827,
                                            "Frase": "apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. ",
                                            "Lineas": "Line 6"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.832,
                                            "Frase": "apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.831,
                                            "Frase": "en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.796,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.742,
                                            "Frase": "cada poco tiempo (este tiempo se puede definir) se envía un ping entre cada nodo para ver si están disponibles o no. cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.743,
                                            "Frase": "para definir esta arquitectura hacen falta tres nodos, un nodo primario, un nodo secundario y un árbitro. cada poco tiempo (este tiempo se puede definir) se envía un ping entre cada nodo para ver si están disponibles o no. cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.761,
                                            "Frase": "una arquitectura en replica-set se utiliza para obtener respaldo a un posible fallo en un nodo y garantizar así la una alta disponibilidad. para definir esta arquitectura hacen falta tres nodos, un nodo primario, un nodo secundario y un árbitro. cada poco tiempo (este tiempo se puede definir) se envía un ping entre cada nodo para ver si están disponibles o no. cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.838,
                                            "Frase": "para definir esta arquitectura hacen falta tres nodos, un nodo primario, un nodo secundario y un árbitro. ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.831,
                                            "Frase": "una arquitectura en replica-set se utiliza para obtener respaldo a un posible fallo en un nodo y garantizar así la una alta disponibilidad. para definir esta arquitectura hacen falta tres nodos, un nodo primario, un nodo secundario y un árbitro. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.801,
                                            "Frase": "en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.771,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.769,
                                            "Frase": "para definir esta arquitectura hacen falta tres nodos, un nodo primario, un nodo secundario y un árbitro. cada poco tiempo (este tiempo se puede definir) se envía un ping entre cada nodo para ver si están disponibles o no. cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.786,
                                            "Frase": "una arquitectura en replica-set se utiliza para obtener respaldo a un posible fallo en un nodo y garantizar así la una alta disponibilidad. para definir esta arquitectura hacen falta tres nodos, un nodo primario, un nodo secundario y un árbitro. cada poco tiempo (este tiempo se puede definir) se envía un ping entre cada nodo para ver si están disponibles o no. cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.786,
                                            "Frase": "una arquitectura en replica-set se utiliza para obtener respaldo a un posible fallo en un nodo y garantizar así la una alta disponibilidad. para definir esta arquitectura hacen falta tres nodos, un nodo primario, un nodo secundario y un árbitro. cada poco tiempo (este tiempo se puede definir) se envía un ping entre cada nodo para ver si están disponibles o no. cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "en caso de empate, el que decide es el nodo árbitro. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. ",
                                            "Lineas": "Lines 4 - 6"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.892,
                                            "Frase": "para definir esta arquitectura hacen falta tres nodos, un nodo primario, un nodo secundario y un árbitro. cada poco tiempo (este tiempo se puede definir) se envía un ping entre cada nodo para ver si están disponibles o no. cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. ",
                                            "Lineas": "Lines 2 - 6"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "una arquitectura en replica-set se utiliza para obtener respaldo a un posible fallo en un nodo y garantizar así la una alta disponibilidad. para definir esta arquitectura hacen falta tres nodos, un nodo primario, un nodo secundario y un árbitro. cada poco tiempo (este tiempo se puede definir) se envía un ping entre cada nodo para ver si están disponibles o no. cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. ",
                                            "Lineas": "Lines 1 - 6"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.895,
                                            "Frase": "una arquitectura en replica-set se utiliza para obtener respaldo a un posible fallo en un nodo y garantizar así la una alta disponibilidad. para definir esta arquitectura hacen falta tres nodos, un nodo primario, un nodo secundario y un árbitro. cada poco tiempo (este tiempo se puede definir) se envía un ping entre cada nodo para ver si están disponibles o no. cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.927,
                                            "Frase": "apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.903,
                                            "Frase": "en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.854,
                                            "Frase": "cada poco tiempo (este tiempo se puede definir) se envía un ping entre cada nodo para ver si están disponibles o no. cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.844,
                                            "Frase": "para definir esta arquitectura hacen falta tres nodos, un nodo primario, un nodo secundario y un árbitro. cada poco tiempo (este tiempo se puede definir) se envía un ping entre cada nodo para ver si están disponibles o no. cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.86,
                                            "Frase": "una arquitectura en replica-set se utiliza para obtener respaldo a un posible fallo en un nodo y garantizar así la una alta disponibilidad. para definir esta arquitectura hacen falta tres nodos, un nodo primario, un nodo secundario y un árbitro. cada poco tiempo (este tiempo se puede definir) se envía un ping entre cada nodo para ver si están disponibles o no. cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.893,
                                            "Frase": "en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Line 7"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 6 - 7"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.932,
                                            "Frase": "en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 5 - 7"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.917,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 4 - 7"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.884,
                                            "Frase": "cada poco tiempo (este tiempo se puede definir) se envía un ping entre cada nodo para ver si están disponibles o no. cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 3 - 7"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0.891,
                                            "Frase": "para definir esta arquitectura hacen falta tres nodos, un nodo primario, un nodo secundario y un árbitro. cada poco tiempo (este tiempo se puede definir) se envía un ping entre cada nodo para ver si están disponibles o no. cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 2 - 7"
                                 },
                                 "7": {
                                            "MaxSimilitud": 0.9,
                                            "Frase": "una arquitectura en replica-set se utiliza para obtener respaldo a un posible fallo en un nodo y garantizar así la una alta disponibilidad. para definir esta arquitectura hacen falta tres nodos, un nodo primario, un nodo secundario y un árbitro. cada poco tiempo (este tiempo se puede definir) se envía un ping entre cada nodo para ver si están disponibles o no. cuando el nodo primario deja de tener disponibilidad, se produce una votación entre los nodos que haya sobre qué nodo debe pasar a ser el nodo primario. en caso de empate, el que decide es el nodo árbitro. apenas hay indisponibilidad de la aplicación ya que el cambio de nodos es muy rápido. en cuanto a la principal diferencia con mongodump es que mongodump se utiliza para realizar un respaldo de los datos de forma manual mientras que el replica-set se crea de forma automática una vez que es definido. ",
                                            "Lineas": "Lines 1 - 7"
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "d0b36b1b57e447cb11157d9c3f3a6ff2": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.915,
                                            "Frase": "réplica-set garantiza la replicación de los datos en mongodb, siendo bastante robusto y que tiene diferencia con mongodump ya que mongodump permite crear respaldos de la base de datos como alternativa de respaldos que posteriormente debe ser restaurada mediante mongorestore pero requiere de una planificación del administrador de la base de datos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.894,
                                            "Frase": "en la arquitectura, el nodo primordial es el nodo principal que se encuentra replicado en el nodo secundario y si el nodo principal deja de tener disponibilidad, el nodo árbitro es el encargado de definir inmediatamente el nodo principal. réplica-set garantiza la replicación de los datos en mongodb, siendo bastante robusto y que tiene diferencia con mongodump ya que mongodump permite crear respaldos de la base de datos como alternativa de respaldos que posteriormente debe ser restaurada mediante mongorestore pero requiere de una planificación del administrador de la base de datos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.864,
                                            "Frase": "entre los tres nodos existe un ping para validar que se encuentran activos, cuyos pings se realizan cada dos segundos. en la arquitectura, el nodo primordial es el nodo principal que se encuentra replicado en el nodo secundario y si el nodo principal deja de tener disponibilidad, el nodo árbitro es el encargado de definir inmediatamente el nodo principal. réplica-set garantiza la replicación de los datos en mongodb, siendo bastante robusto y que tiene diferencia con mongodump ya que mongodump permite crear respaldos de la base de datos como alternativa de respaldos que posteriormente debe ser restaurada mediante mongorestore pero requiere de una planificación del administrador de la base de datos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.882,
                                            "Frase": "la arquitectura de réplica-set en mongodb, es una réplica maestro-esclavo, el cual requiere de al menos tres nodos que son: principal, secundario y árbitro. entre los tres nodos existe un ping para validar que se encuentran activos, cuyos pings se realizan cada dos segundos. en la arquitectura, el nodo primordial es el nodo principal que se encuentra replicado en el nodo secundario y si el nodo principal deja de tener disponibilidad, el nodo árbitro es el encargado de definir inmediatamente el nodo principal. réplica-set garantiza la replicación de los datos en mongodb, siendo bastante robusto y que tiene diferencia con mongodump ya que mongodump permite crear respaldos de la base de datos como alternativa de respaldos que posteriormente debe ser restaurada mediante mongorestore pero requiere de una planificación del administrador de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.836,
                                            "Frase": "la arquitectura de réplica-set en mongodb, es una réplica maestro-esclavo, el cual requiere de al menos tres nodos que son: principal, secundario y árbitro. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.804,
                                            "Frase": "en la arquitectura, el nodo primordial es el nodo principal que se encuentra replicado en el nodo secundario y si el nodo principal deja de tener disponibilidad, el nodo árbitro es el encargado de definir inmediatamente el nodo principal. réplica-set garantiza la replicación de los datos en mongodb, siendo bastante robusto y que tiene diferencia con mongodump ya que mongodump permite crear respaldos de la base de datos como alternativa de respaldos que posteriormente debe ser restaurada mediante mongorestore pero requiere de una planificación del administrador de la base de datos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.803,
                                            "Frase": "la arquitectura de réplica-set en mongodb, es una réplica maestro-esclavo, el cual requiere de al menos tres nodos que son: principal, secundario y árbitro. entre los tres nodos existe un ping para validar que se encuentran activos, cuyos pings se realizan cada dos segundos. en la arquitectura, el nodo primordial es el nodo principal que se encuentra replicado en el nodo secundario y si el nodo principal deja de tener disponibilidad, el nodo árbitro es el encargado de definir inmediatamente el nodo principal. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.805,
                                            "Frase": "la arquitectura de réplica-set en mongodb, es una réplica maestro-esclavo, el cual requiere de al menos tres nodos que son: principal, secundario y árbitro. entre los tres nodos existe un ping para validar que se encuentran activos, cuyos pings se realizan cada dos segundos. en la arquitectura, el nodo primordial es el nodo principal que se encuentra replicado en el nodo secundario y si el nodo principal deja de tener disponibilidad, el nodo árbitro es el encargado de definir inmediatamente el nodo principal. réplica-set garantiza la replicación de los datos en mongodb, siendo bastante robusto y que tiene diferencia con mongodump ya que mongodump permite crear respaldos de la base de datos como alternativa de respaldos que posteriormente debe ser restaurada mediante mongorestore pero requiere de una planificación del administrador de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.911,
                                            "Frase": "en la arquitectura, el nodo primordial es el nodo principal que se encuentra replicado en el nodo secundario y si el nodo principal deja de tener disponibilidad, el nodo árbitro es el encargado de definir inmediatamente el nodo principal. ",
                                            "Lineas": "Line 3"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.941,
                                            "Frase": "en la arquitectura, el nodo primordial es el nodo principal que se encuentra replicado en el nodo secundario y si el nodo principal deja de tener disponibilidad, el nodo árbitro es el encargado de definir inmediatamente el nodo principal. réplica-set garantiza la replicación de los datos en mongodb, siendo bastante robusto y que tiene diferencia con mongodump ya que mongodump permite crear respaldos de la base de datos como alternativa de respaldos que posteriormente debe ser restaurada mediante mongorestore pero requiere de una planificación del administrador de la base de datos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.942,
                                            "Frase": "la arquitectura de réplica-set en mongodb, es una réplica maestro-esclavo, el cual requiere de al menos tres nodos que son: principal, secundario y árbitro. entre los tres nodos existe un ping para validar que se encuentran activos, cuyos pings se realizan cada dos segundos. en la arquitectura, el nodo primordial es el nodo principal que se encuentra replicado en el nodo secundario y si el nodo principal deja de tener disponibilidad, el nodo árbitro es el encargado de definir inmediatamente el nodo principal. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.938,
                                            "Frase": "la arquitectura de réplica-set en mongodb, es una réplica maestro-esclavo, el cual requiere de al menos tres nodos que son: principal, secundario y árbitro. entre los tres nodos existe un ping para validar que se encuentran activos, cuyos pings se realizan cada dos segundos. en la arquitectura, el nodo primordial es el nodo principal que se encuentra replicado en el nodo secundario y si el nodo principal deja de tener disponibilidad, el nodo árbitro es el encargado de definir inmediatamente el nodo principal. réplica-set garantiza la replicación de los datos en mongodb, siendo bastante robusto y que tiene diferencia con mongodump ya que mongodump permite crear respaldos de la base de datos como alternativa de respaldos que posteriormente debe ser restaurada mediante mongorestore pero requiere de una planificación del administrador de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.964,
                                            "Frase": "réplica-set garantiza la replicación de los datos en mongodb, siendo bastante robusto y que tiene diferencia con mongodump ya que mongodump permite crear respaldos de la base de datos como alternativa de respaldos que posteriormente debe ser restaurada mediante mongorestore pero requiere de una planificación del administrador de la base de datos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "en la arquitectura, el nodo primordial es el nodo principal que se encuentra replicado en el nodo secundario y si el nodo principal deja de tener disponibilidad, el nodo árbitro es el encargado de definir inmediatamente el nodo principal. réplica-set garantiza la replicación de los datos en mongodb, siendo bastante robusto y que tiene diferencia con mongodump ya que mongodump permite crear respaldos de la base de datos como alternativa de respaldos que posteriormente debe ser restaurada mediante mongorestore pero requiere de una planificación del administrador de la base de datos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "entre los tres nodos existe un ping para validar que se encuentran activos, cuyos pings se realizan cada dos segundos. en la arquitectura, el nodo primordial es el nodo principal que se encuentra replicado en el nodo secundario y si el nodo principal deja de tener disponibilidad, el nodo árbitro es el encargado de definir inmediatamente el nodo principal. réplica-set garantiza la replicación de los datos en mongodb, siendo bastante robusto y que tiene diferencia con mongodump ya que mongodump permite crear respaldos de la base de datos como alternativa de respaldos que posteriormente debe ser restaurada mediante mongorestore pero requiere de una planificación del administrador de la base de datos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.925,
                                            "Frase": "la arquitectura de réplica-set en mongodb, es una réplica maestro-esclavo, el cual requiere de al menos tres nodos que son: principal, secundario y árbitro. entre los tres nodos existe un ping para validar que se encuentran activos, cuyos pings se realizan cada dos segundos. en la arquitectura, el nodo primordial es el nodo principal que se encuentra replicado en el nodo secundario y si el nodo principal deja de tener disponibilidad, el nodo árbitro es el encargado de definir inmediatamente el nodo principal. réplica-set garantiza la replicación de los datos en mongodb, siendo bastante robusto y que tiene diferencia con mongodump ya que mongodump permite crear respaldos de la base de datos como alternativa de respaldos que posteriormente debe ser restaurada mediante mongorestore pero requiere de una planificación del administrador de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.945,
                                            "Frase": "la arquitectura de réplica-set en mongodb, es una réplica maestro-esclavo, el cual requiere de al menos tres nodos que son: principal, secundario y árbitro. ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.968,
                                            "Frase": "en la arquitectura, el nodo primordial es el nodo principal que se encuentra replicado en el nodo secundario y si el nodo principal deja de tener disponibilidad, el nodo árbitro es el encargado de definir inmediatamente el nodo principal. réplica-set garantiza la replicación de los datos en mongodb, siendo bastante robusto y que tiene diferencia con mongodump ya que mongodump permite crear respaldos de la base de datos como alternativa de respaldos que posteriormente debe ser restaurada mediante mongorestore pero requiere de una planificación del administrador de la base de datos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.956,
                                            "Frase": "entre los tres nodos existe un ping para validar que se encuentran activos, cuyos pings se realizan cada dos segundos. en la arquitectura, el nodo primordial es el nodo principal que se encuentra replicado en el nodo secundario y si el nodo principal deja de tener disponibilidad, el nodo árbitro es el encargado de definir inmediatamente el nodo principal. réplica-set garantiza la replicación de los datos en mongodb, siendo bastante robusto y que tiene diferencia con mongodump ya que mongodump permite crear respaldos de la base de datos como alternativa de respaldos que posteriormente debe ser restaurada mediante mongorestore pero requiere de una planificación del administrador de la base de datos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.966,
                                            "Frase": "la arquitectura de réplica-set en mongodb, es una réplica maestro-esclavo, el cual requiere de al menos tres nodos que son: principal, secundario y árbitro. entre los tres nodos existe un ping para validar que se encuentran activos, cuyos pings se realizan cada dos segundos. en la arquitectura, el nodo primordial es el nodo principal que se encuentra replicado en el nodo secundario y si el nodo principal deja de tener disponibilidad, el nodo árbitro es el encargado de definir inmediatamente el nodo principal. réplica-set garantiza la replicación de los datos en mongodb, siendo bastante robusto y que tiene diferencia con mongodump ya que mongodump permite crear respaldos de la base de datos como alternativa de respaldos que posteriormente debe ser restaurada mediante mongorestore pero requiere de una planificación del administrador de la base de datos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.875,
                                 "Umbral 0.4 - 0.9": 0.875,
                                 "Umbral 0.5 - 0.9": 0.875,
                                 "Umbral 0.6 - 0.9": 0.875,
                                 "Umbral 0.7 - 0.9": 0.875,
                                 "Umbral 0.8 - 0.9": 0.875,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "da4af2113dc6448568b6b35d1ca8c9d4": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.825,
                                            "Frase": "la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.799,
                                            "Frase": "así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.776,
                                            "Frase": "son necesarios mínimo 3 nodos para hacer la configuración mínima, un nodo es el que va a tener la accesibilidad a los datos, el que hará las operaciones, otro nodo primario y el otro será el árbitro. así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.794,
                                            "Frase": "se puede hacer envíos de ping cada dos segundos para mirar la accesibilidad de los nodos y poder así hacer una asinación al respecto. son necesarios mínimo 3 nodos para hacer la configuración mínima, un nodo es el que va a tener la accesibilidad a los datos, el que hará las operaciones, otro nodo primario y el otro será el árbitro. así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.789,
                                            "Frase": "replica-set permite recuperarse frente a fallos de forma automática, con replica set no se define como tal un nodo maestro fijo, (como es el caso cuando se usa restauraciones de copias de seguridad con maestro-esclavo) si no el maestro se va haciendo la asignación al azar y se actualiza dependiendo de la disponibilidad del nodo. se puede hacer envíos de ping cada dos segundos para mirar la accesibilidad de los nodos y poder así hacer una asinación al respecto. son necesarios mínimo 3 nodos para hacer la configuración mínima, un nodo es el que va a tener la accesibilidad a los datos, el que hará las operaciones, otro nodo primario y el otro será el árbitro. así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.724,
                                            "Frase": "la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.761,
                                            "Frase": "así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.752,
                                            "Frase": "son necesarios mínimo 3 nodos para hacer la configuración mínima, un nodo es el que va a tener la accesibilidad a los datos, el que hará las operaciones, otro nodo primario y el otro será el árbitro. así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.742,
                                            "Frase": "se puede hacer envíos de ping cada dos segundos para mirar la accesibilidad de los nodos y poder así hacer una asinación al respecto. son necesarios mínimo 3 nodos para hacer la configuración mínima, un nodo es el que va a tener la accesibilidad a los datos, el que hará las operaciones, otro nodo primario y el otro será el árbitro. así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.748,
                                            "Frase": "replica-set permite recuperarse frente a fallos de forma automática, con replica set no se define como tal un nodo maestro fijo, (como es el caso cuando se usa restauraciones de copias de seguridad con maestro-esclavo) si no el maestro se va haciendo la asignación al azar y se actualiza dependiendo de la disponibilidad del nodo. se puede hacer envíos de ping cada dos segundos para mirar la accesibilidad de los nodos y poder así hacer una asinación al respecto. son necesarios mínimo 3 nodos para hacer la configuración mínima, un nodo es el que va a tener la accesibilidad a los datos, el que hará las operaciones, otro nodo primario y el otro será el árbitro. así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.918,
                                            "Frase": "así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "son necesarios mínimo 3 nodos para hacer la configuración mínima, un nodo es el que va a tener la accesibilidad a los datos, el que hará las operaciones, otro nodo primario y el otro será el árbitro. así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.916,
                                            "Frase": "son necesarios mínimo 3 nodos para hacer la configuración mínima, un nodo es el que va a tener la accesibilidad a los datos, el que hará las operaciones, otro nodo primario y el otro será el árbitro. así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.913,
                                            "Frase": "replica-set permite recuperarse frente a fallos de forma automática, con replica set no se define como tal un nodo maestro fijo, (como es el caso cuando se usa restauraciones de copias de seguridad con maestro-esclavo) si no el maestro se va haciendo la asignación al azar y se actualiza dependiendo de la disponibilidad del nodo. se puede hacer envíos de ping cada dos segundos para mirar la accesibilidad de los nodos y poder así hacer una asinación al respecto. son necesarios mínimo 3 nodos para hacer la configuración mínima, un nodo es el que va a tener la accesibilidad a los datos, el que hará las operaciones, otro nodo primario y el otro será el árbitro. así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.909,
                                            "Frase": "replica-set permite recuperarse frente a fallos de forma automática, con replica set no se define como tal un nodo maestro fijo, (como es el caso cuando se usa restauraciones de copias de seguridad con maestro-esclavo) si no el maestro se va haciendo la asignación al azar y se actualiza dependiendo de la disponibilidad del nodo. se puede hacer envíos de ping cada dos segundos para mirar la accesibilidad de los nodos y poder así hacer una asinación al respecto. son necesarios mínimo 3 nodos para hacer la configuración mínima, un nodo es el que va a tener la accesibilidad a los datos, el que hará las operaciones, otro nodo primario y el otro será el árbitro. así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.874,
                                            "Frase": "la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "replica-set permite recuperarse frente a fallos de forma automática, con replica set no se define como tal un nodo maestro fijo, (como es el caso cuando se usa restauraciones de copias de seguridad con maestro-esclavo) si no el maestro se va haciendo la asignación al azar y se actualiza dependiendo de la disponibilidad del nodo. se puede hacer envíos de ping cada dos segundos para mirar la accesibilidad de los nodos y poder así hacer una asinación al respecto. ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.856,
                                            "Frase": "replica-set permite recuperarse frente a fallos de forma automática, con replica set no se define como tal un nodo maestro fijo, (como es el caso cuando se usa restauraciones de copias de seguridad con maestro-esclavo) si no el maestro se va haciendo la asignación al azar y se actualiza dependiendo de la disponibilidad del nodo. se puede hacer envíos de ping cada dos segundos para mirar la accesibilidad de los nodos y poder así hacer una asinación al respecto. son necesarios mínimo 3 nodos para hacer la configuración mínima, un nodo es el que va a tener la accesibilidad a los datos, el que hará las operaciones, otro nodo primario y el otro será el árbitro. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.851,
                                            "Frase": "se puede hacer envíos de ping cada dos segundos para mirar la accesibilidad de los nodos y poder así hacer una asinación al respecto. son necesarios mínimo 3 nodos para hacer la configuración mínima, un nodo es el que va a tener la accesibilidad a los datos, el que hará las operaciones, otro nodo primario y el otro será el árbitro. así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.86,
                                            "Frase": "replica-set permite recuperarse frente a fallos de forma automática, con replica set no se define como tal un nodo maestro fijo, (como es el caso cuando se usa restauraciones de copias de seguridad con maestro-esclavo) si no el maestro se va haciendo la asignación al azar y se actualiza dependiendo de la disponibilidad del nodo. se puede hacer envíos de ping cada dos segundos para mirar la accesibilidad de los nodos y poder así hacer una asinación al respecto. son necesarios mínimo 3 nodos para hacer la configuración mínima, un nodo es el que va a tener la accesibilidad a los datos, el que hará las operaciones, otro nodo primario y el otro será el árbitro. así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Line 5"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.908,
                                            "Frase": "así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Lines 4 - 5"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.896,
                                            "Frase": "son necesarios mínimo 3 nodos para hacer la configuración mínima, un nodo es el que va a tener la accesibilidad a los datos, el que hará las operaciones, otro nodo primario y el otro será el árbitro. así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Lines 3 - 5"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.904,
                                            "Frase": "se puede hacer envíos de ping cada dos segundos para mirar la accesibilidad de los nodos y poder así hacer una asinación al respecto. son necesarios mínimo 3 nodos para hacer la configuración mínima, un nodo es el que va a tener la accesibilidad a los datos, el que hará las operaciones, otro nodo primario y el otro será el árbitro. así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Lines 2 - 5"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "replica-set permite recuperarse frente a fallos de forma automática, con replica set no se define como tal un nodo maestro fijo, (como es el caso cuando se usa restauraciones de copias de seguridad con maestro-esclavo) si no el maestro se va haciendo la asignación al azar y se actualiza dependiendo de la disponibilidad del nodo. se puede hacer envíos de ping cada dos segundos para mirar la accesibilidad de los nodos y poder así hacer una asinación al respecto. son necesarios mínimo 3 nodos para hacer la configuración mínima, un nodo es el que va a tener la accesibilidad a los datos, el que hará las operaciones, otro nodo primario y el otro será el árbitro. así mismo, cuando el nodo primario deja de tener disponibilidad el deber del árbitro mirar quien está disponible para decidir que nodo será asignado como primario. la diferencia frente a mongodump es que es para hacer copias de seguridad y el replica set se emplea para restaurar copias de seguridad. ",
                                            "Lineas": "Lines 1 - 5"
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 0.875,
                                 "Umbral 0.4 - 0.8": 0.875,
                                 "Umbral 0.5 - 0.8": 0.875,
                                 "Umbral 0.6 - 0.8": 0.875,
                                 "Umbral 0.7 - 0.8": 0.875,
                                 "Umbral 0.3 - 0.9": 0.625,
                                 "Umbral 0.4 - 0.9": 0.625,
                                 "Umbral 0.5 - 0.9": 0.625,
                                 "Umbral 0.6 - 0.9": 0.625,
                                 "Umbral 0.7 - 0.9": 0.625,
                                 "Umbral 0.8 - 0.9": 0.5,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "6a617ebdfa1f4c1ce62c268c9038b0c8": {
                      "minipregunta0": {
                                 "1": {
                                            "MaxSimilitud": 0.841,
                                            "Frase": "la configuración mínima para un replica-set está compuesta por un nodo primario, y dos secundarios (uno de ellos puede ser de tipo árbitro). ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.855,
                                            "Frase": "en mongodb la utilización de un replica-set aporta varias características: redundancia (ante la caída de un nodo siempre hay una copia), disponibilidad (si cae el nodo primario, un secundario pasa a ser primario) y balanceo de carga (las lecturas pueden repartirse entre el primario y secundarios). la configuración mínima para un replica-set está compuesta por un nodo primario, y dos secundarios (uno de ellos puede ser de tipo árbitro). ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.861,
                                            "Frase": "en mongodb la utilización de un replica-set aporta varias características: redundancia (ante la caída de un nodo siempre hay una copia), disponibilidad (si cae el nodo primario, un secundario pasa a ser primario) y balanceo de carga (las lecturas pueden repartirse entre el primario y secundarios). la configuración mínima para un replica-set está compuesta por un nodo primario, y dos secundarios (uno de ellos puede ser de tipo árbitro). cuando el nodo primario deja de tener disponibilidad (se detecta con los heartbeats), se inicia de forma transparente al cliente una votación de todos los nodos secundarios para elegir un nuevo nodo primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.873,
                                            "Frase": "en mongodb la utilización de un replica-set aporta varias características: redundancia (ante la caída de un nodo siempre hay una copia), disponibilidad (si cae el nodo primario, un secundario pasa a ser primario) y balanceo de carga (las lecturas pueden repartirse entre el primario y secundarios). la configuración mínima para un replica-set está compuesta por un nodo primario, y dos secundarios (uno de ellos puede ser de tipo árbitro). cuando el nodo primario deja de tener disponibilidad (se detecta con los heartbeats), se inicia de forma transparente al cliente una votación de todos los nodos secundarios para elegir un nuevo nodo primario. la principal diferencia respecto a mongodump es que, mientras mongodump hace una copia completa justo en el momento de ejecutarlo (foto fija), con un replica-set siempre se tiene la copia actualizada en todos los nodos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta1": {
                                 "1": {
                                            "MaxSimilitud": 0.868,
                                            "Frase": "la configuración mínima para un replica-set está compuesta por un nodo primario, y dos secundarios (uno de ellos puede ser de tipo árbitro). ",
                                            "Lineas": "Line 2"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.882,
                                            "Frase": "en mongodb la utilización de un replica-set aporta varias características: redundancia (ante la caída de un nodo siempre hay una copia), disponibilidad (si cae el nodo primario, un secundario pasa a ser primario) y balanceo de carga (las lecturas pueden repartirse entre el primario y secundarios). la configuración mínima para un replica-set está compuesta por un nodo primario, y dos secundarios (uno de ellos puede ser de tipo árbitro). ",
                                            "Lineas": "Lines 1 - 2"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.877,
                                            "Frase": "en mongodb la utilización de un replica-set aporta varias características: redundancia (ante la caída de un nodo siempre hay una copia), disponibilidad (si cae el nodo primario, un secundario pasa a ser primario) y balanceo de carga (las lecturas pueden repartirse entre el primario y secundarios). la configuración mínima para un replica-set está compuesta por un nodo primario, y dos secundarios (uno de ellos puede ser de tipo árbitro). cuando el nodo primario deja de tener disponibilidad (se detecta con los heartbeats), se inicia de forma transparente al cliente una votación de todos los nodos secundarios para elegir un nuevo nodo primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.869,
                                            "Frase": "en mongodb la utilización de un replica-set aporta varias características: redundancia (ante la caída de un nodo siempre hay una copia), disponibilidad (si cae el nodo primario, un secundario pasa a ser primario) y balanceo de carga (las lecturas pueden repartirse entre el primario y secundarios). la configuración mínima para un replica-set está compuesta por un nodo primario, y dos secundarios (uno de ellos puede ser de tipo árbitro). cuando el nodo primario deja de tener disponibilidad (se detecta con los heartbeats), se inicia de forma transparente al cliente una votación de todos los nodos secundarios para elegir un nuevo nodo primario. la principal diferencia respecto a mongodump es que, mientras mongodump hace una copia completa justo en el momento de ejecutarlo (foto fija), con un replica-set siempre se tiene la copia actualizada en todos los nodos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta2": {
                                 "1": {
                                            "MaxSimilitud": 0.871,
                                            "Frase": "en mongodb la utilización de un replica-set aporta varias características: redundancia (ante la caída de un nodo siempre hay una copia), disponibilidad (si cae el nodo primario, un secundario pasa a ser primario) y balanceo de carga (las lecturas pueden repartirse entre el primario y secundarios). ",
                                            "Lineas": "Line 1"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.91,
                                            "Frase": "la configuración mínima para un replica-set está compuesta por un nodo primario, y dos secundarios (uno de ellos puede ser de tipo árbitro). cuando el nodo primario deja de tener disponibilidad (se detecta con los heartbeats), se inicia de forma transparente al cliente una votación de todos los nodos secundarios para elegir un nuevo nodo primario. ",
                                            "Lineas": "Lines 2 - 3"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.92,
                                            "Frase": "en mongodb la utilización de un replica-set aporta varias características: redundancia (ante la caída de un nodo siempre hay una copia), disponibilidad (si cae el nodo primario, un secundario pasa a ser primario) y balanceo de carga (las lecturas pueden repartirse entre el primario y secundarios). la configuración mínima para un replica-set está compuesta por un nodo primario, y dos secundarios (uno de ellos puede ser de tipo árbitro). cuando el nodo primario deja de tener disponibilidad (se detecta con los heartbeats), se inicia de forma transparente al cliente una votación de todos los nodos secundarios para elegir un nuevo nodo primario. ",
                                            "Lineas": "Lines 1 - 3"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.923,
                                            "Frase": "en mongodb la utilización de un replica-set aporta varias características: redundancia (ante la caída de un nodo siempre hay una copia), disponibilidad (si cae el nodo primario, un secundario pasa a ser primario) y balanceo de carga (las lecturas pueden repartirse entre el primario y secundarios). la configuración mínima para un replica-set está compuesta por un nodo primario, y dos secundarios (uno de ellos puede ser de tipo árbitro). cuando el nodo primario deja de tener disponibilidad (se detecta con los heartbeats), se inicia de forma transparente al cliente una votación de todos los nodos secundarios para elegir un nuevo nodo primario. la principal diferencia respecto a mongodump es que, mientras mongodump hace una copia completa justo en el momento de ejecutarlo (foto fija), con un replica-set siempre se tiene la copia actualizada en todos los nodos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "minipregunta3": {
                                 "1": {
                                            "MaxSimilitud": 0.905,
                                            "Frase": "la principal diferencia respecto a mongodump es que, mientras mongodump hace una copia completa justo en el momento de ejecutarlo (foto fija), con un replica-set siempre se tiene la copia actualizada en todos los nodos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.872,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad (se detecta con los heartbeats), se inicia de forma transparente al cliente una votación de todos los nodos secundarios para elegir un nuevo nodo primario. la principal diferencia respecto a mongodump es que, mientras mongodump hace una copia completa justo en el momento de ejecutarlo (foto fija), con un replica-set siempre se tiene la copia actualizada en todos los nodos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.876,
                                            "Frase": "la configuración mínima para un replica-set está compuesta por un nodo primario, y dos secundarios (uno de ellos puede ser de tipo árbitro). cuando el nodo primario deja de tener disponibilidad (se detecta con los heartbeats), se inicia de forma transparente al cliente una votación de todos los nodos secundarios para elegir un nuevo nodo primario. la principal diferencia respecto a mongodump es que, mientras mongodump hace una copia completa justo en el momento de ejecutarlo (foto fija), con un replica-set siempre se tiene la copia actualizada en todos los nodos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.86,
                                            "Frase": "en mongodb la utilización de un replica-set aporta varias características: redundancia (ante la caída de un nodo siempre hay una copia), disponibilidad (si cae el nodo primario, un secundario pasa a ser primario) y balanceo de carga (las lecturas pueden repartirse entre el primario y secundarios). la configuración mínima para un replica-set está compuesta por un nodo primario, y dos secundarios (uno de ellos puede ser de tipo árbitro). cuando el nodo primario deja de tener disponibilidad (se detecta con los heartbeats), se inicia de forma transparente al cliente una votación de todos los nodos secundarios para elegir un nuevo nodo primario. la principal diferencia respecto a mongodump es que, mientras mongodump hace una copia completa justo en el momento de ejecutarlo (foto fija), con un replica-set siempre se tiene la copia actualizada en todos los nodos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "respuesta_completa": {
                                 "1": {
                                            "MaxSimilitud": 0.907,
                                            "Frase": "la principal diferencia respecto a mongodump es que, mientras mongodump hace una copia completa justo en el momento de ejecutarlo (foto fija), con un replica-set siempre se tiene la copia actualizada en todos los nodos. ",
                                            "Lineas": "Line 4"
                                 },
                                 "2": {
                                            "MaxSimilitud": 0.922,
                                            "Frase": "cuando el nodo primario deja de tener disponibilidad (se detecta con los heartbeats), se inicia de forma transparente al cliente una votación de todos los nodos secundarios para elegir un nuevo nodo primario. la principal diferencia respecto a mongodump es que, mientras mongodump hace una copia completa justo en el momento de ejecutarlo (foto fija), con un replica-set siempre se tiene la copia actualizada en todos los nodos. ",
                                            "Lineas": "Lines 3 - 4"
                                 },
                                 "3": {
                                            "MaxSimilitud": 0.944,
                                            "Frase": "la configuración mínima para un replica-set está compuesta por un nodo primario, y dos secundarios (uno de ellos puede ser de tipo árbitro). cuando el nodo primario deja de tener disponibilidad (se detecta con los heartbeats), se inicia de forma transparente al cliente una votación de todos los nodos secundarios para elegir un nuevo nodo primario. la principal diferencia respecto a mongodump es que, mientras mongodump hace una copia completa justo en el momento de ejecutarlo (foto fija), con un replica-set siempre se tiene la copia actualizada en todos los nodos. ",
                                            "Lineas": "Lines 2 - 4"
                                 },
                                 "4": {
                                            "MaxSimilitud": 0.952,
                                            "Frase": "en mongodb la utilización de un replica-set aporta varias características: redundancia (ante la caída de un nodo siempre hay una copia), disponibilidad (si cae el nodo primario, un secundario pasa a ser primario) y balanceo de carga (las lecturas pueden repartirse entre el primario y secundarios). la configuración mínima para un replica-set está compuesta por un nodo primario, y dos secundarios (uno de ellos puede ser de tipo árbitro). cuando el nodo primario deja de tener disponibilidad (se detecta con los heartbeats), se inicia de forma transparente al cliente una votación de todos los nodos secundarios para elegir un nuevo nodo primario. la principal diferencia respecto a mongodump es que, mientras mongodump hace una copia completa justo en el momento de ejecutarlo (foto fija), con un replica-set siempre se tiene la copia actualizada en todos los nodos. ",
                                            "Lineas": "Lines 1 - 4"
                                 },
                                 "5": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "6": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "7": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 },
                                 "8": {
                                            "MaxSimilitud": 0,
                                            "Frase": "",
                                            "Lineas": ""
                                 }
                      },
                      "Nota": {
                                 "Umbral 0.3 - 0.8": 1.0,
                                 "Umbral 0.4 - 0.8": 1.0,
                                 "Umbral 0.5 - 0.8": 1.0,
                                 "Umbral 0.6 - 0.8": 1.0,
                                 "Umbral 0.7 - 0.8": 1.0,
                                 "Umbral 0.3 - 0.9": 0.75,
                                 "Umbral 0.4 - 0.9": 0.75,
                                 "Umbral 0.5 - 0.9": 0.75,
                                 "Umbral 0.6 - 0.9": 0.75,
                                 "Umbral 0.7 - 0.9": 0.75,
                                 "Umbral 0.8 - 0.9": 0.75,
                                 "Umbral 0.3 - 0.7": 1.0,
                                 "Umbral 0.4 - 0.7": 1.0,
                                 "Umbral 0.5 - 0.7": 1.0,
                                 "Umbral 0.6 - 0.7": 1.0,
                                 "Umbral 0.3 - 0.6": 1.0,
                                 "Umbral 0.4 - 0.6": 1.0,
                                 "Umbral 0.5 - 0.6": 1.0
                      }
           },
           "39e7c6fcf3761c9b8d35b98c8c382305": {
                      "minipregunta0": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta1": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta2": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "minipregunta3": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      },
                      "respuesta_completa": {
                                 "Nota": {
                                            "Umbral 0.3 - 0.8": 0,
                                            "Umbral 0.4 - 0.8": 0,
                                            "Umbral 0.5 - 0.8": 0,
                                            "Umbral 0.6 - 0.8": 0,
                                            "Umbral 0.7 - 0.8": 0,
                                            "Umbral 0.3 - 0.9": 0,
                                            "Umbral 0.4 - 0.9": 0,
                                            "Umbral 0.5 - 0.9": 0,
                                            "Umbral 0.6 - 0.9": 0,
                                            "Umbral 0.7 - 0.9": 0,
                                            "Umbral 0.8 - 0.9": 0,
                                            "Umbral 0.3 - 0.7": 0,
                                            "Umbral 0.4 - 0.7": 0,
                                            "Umbral 0.5 - 0.7": 0,
                                            "Umbral 0.6 - 0.7": 0,
                                            "Umbral 0.3 - 0.6": 0,
                                            "Umbral 0.4 - 0.6": 0,
                                            "Umbral 0.5 - 0.6": 0
                                 }
                      }
           }
}